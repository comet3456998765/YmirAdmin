---//vvv SERVICES vvv\\---
local ver = '2.0.3'
local UserInputService = game:GetService('UserInputService')
local RunService = (game:GetService('RunService'));
local CoreGui = game:GetService('CoreGui')
local HttpService = game:GetService('HttpService')
local TweenService = game:GetService('TweenService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local TeleportService = game:GetService('TeleportService')
---//vvv INSTANCES vvv\\---
local CmdGUI = Instance.new('ScreenGui')
CmdGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
CmdGUI.Name = 'YmirAdmin_GUI'
local par
if get_hidden_gui or gethui then
	local hiddenui = get_hidden_gui or gethui
	par = hiddenui()
elseif CoreGui:FindFirstChild('RobloxGui')then
	par = CoreGui.RobloxGui
else
	if (not is_sirhurt_closure) and (syn and syn.protect_gui) then syn.protect_gui(CmdGUI) end
	par = CoreGui
end

local CmdMain = Instance.new('Frame')
CmdMain.Name = 'YmirAdmin_Main'
CmdMain.Parent = CmdGUI
CmdMain.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdMain.BorderColor3 = Color3.fromRGB(31, 31, 31)
CmdMain.BorderSizePixel = 0
CmdMain.Position = UDim2.new(0.5, 0, 0.5, 0)
CmdMain.Size = UDim2.new(0,0,0,0)
CmdMain.AnchorPoint = Vector2.new(0.5, 0.5)

local CmdBox = Instance.new('Frame')
CmdBox.Name = 'YmirAdmin_Box'
CmdBox.Parent = CmdMain
CmdBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
CmdBox.BorderColor3 = Color3.fromRGB(140, 140, 140)
CmdBox.BorderSizePixel = 0
CmdBox.Position = UDim2.new(0, 0, 0.632000029, 0)
CmdBox.Size = UDim2.new(0.996109784, 0, 0.36981371, 0)
CmdBox.Visible = false

local CmdNotif = Instance.new('TextLabel')
CmdNotif.Name = 'YmirAdmin_NotifText'
CmdNotif.Parent = CmdBox
CmdNotif.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdNotif.BackgroundTransparency = 1.000
CmdNotif.Position = UDim2.new(0.0128824329, 0, 0.201365471, 0)
CmdNotif.Size = UDim2.new(0.986970961, 0, 0.820274472, 0)
CmdNotif.Visible = false
CmdNotif.ZIndex = 10
CmdNotif.Font = Enum.Font.SourceSans
CmdNotif.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdNotif.TextSize = 14.000
CmdNotif.TextWrapped = true

local CmdLogHandler = Instance.new('ScrollingFrame')
CmdLogHandler.Name = 'YmirAdmin_LogHandler'
CmdLogHandler.Parent = CmdBox
CmdLogHandler.Active = true
CmdLogHandler.Visible = false
CmdLogHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdLogHandler.BorderSizePixel = 0
CmdLogHandler.Position = UDim2.new(0.0331288725, 0, 0.207801834, 0)
CmdLogHandler.Size = UDim2.new(0.966870666, 0, 0.785972178, 0)
CmdLogHandler.CanvasSize = UDim2.new(0.1, 0, 0.1, 0)
CmdLogHandler.AutomaticCanvasSize = 'Y'
CmdLogHandler.ScrollingDirection = 'Y'
CmdLogHandler.ScrollBarThickness = 6

local CmdLogExample = Instance.new('TextLabel')
CmdLogExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdLogExample.BackgroundTransparency = 1.000
CmdLogExample.Size = UDim2.new(0.928425848, 0, 0.14037393, 0)
CmdLogExample.Font = Enum.Font.SourceSans
CmdLogExample.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdLogExample.TextSize = 14.000
CmdLogExample.TextWrapped = true
CmdLogExample.TextXAlignment = Enum.TextXAlignment.Left
CmdLogExample.AutomaticSize = 'Y'

local CmdBoxTitle = Instance.new('TextLabel')
CmdBoxTitle.Name = 'YmirAdmin_BoxTitle'
CmdBoxTitle.Parent = CmdBox
CmdBoxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdBoxTitle.BackgroundTransparency = 1.000
CmdBoxTitle.Position = UDim2.new(0.0128824329, 0, 0, 0)
CmdBoxTitle.Size = UDim2.new(0.987117469, 0, 0.207801759, 0)
CmdBoxTitle.Font = Enum.Font.SourceSansBold
CmdBoxTitle.Text = 'Logs'
CmdBoxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdBoxTitle.TextSize = 14.000

local CmdHandler = Instance.new('ScrollingFrame')
CmdHandler.Name = 'YmirAdmin_CmdHandler'
CmdHandler.Parent = CmdMain
CmdHandler.Active = true
CmdHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdHandler.BorderSizePixel = 0
CmdHandler.Position = UDim2.new(0.0299999993, 0, 0.207689703, 0)
CmdHandler.Size = UDim2.new(0, 194, 0, 213)
CmdHandler.CanvasSize = UDim2.new(0, 0, 0, 0)
CmdHandler.AutomaticCanvasSize = 'Y'
CmdHandler.ScrollingDirection = 'Y'
CmdHandler.Visible = false

local CmdExample = Instance.new('TextButton')
CmdExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdExample.BackgroundTransparency = 1.000
CmdExample.Size = UDim2.new(0, 194, 0, 18)
CmdExample.ZIndex = 10
CmdExample.Font = Enum.Font.SourceSans
CmdExample.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdExample.TextSize = 14.000
CmdExample.TextXAlignment = Enum.TextXAlignment.Left

local CmdBar = Instance.new('TextBox')
CmdBar.Name = 'YmirAdmin_CmdBar'
CmdBar.Parent = CmdMain
CmdBar.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
CmdBar.BorderSizePixel = 0
CmdBar.Position = UDim2.new(0.0299999993, 0, 0.0876345932, 0)
CmdBar.Size = UDim2.new(0, 188, 0, 22)
CmdBar.Font = Enum.Font.SourceSans
CmdBar.PlaceholderText = 'Command Bar'
CmdBar.Text = ''
CmdBar.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdBar.TextSize = 14.000
CmdBar.TextXAlignment = Enum.TextXAlignment.Left
CmdBar.ClearTextOnFocus = false
CmdBar.Visible = false
CmdBar.BackgroundTransparency = 1
CmdBar.TextTransparency = 1

local CmdTitle = Instance.new('TextLabel')
CmdTitle.Name = 'YmirAdmin_Title'
CmdTitle.Parent = CmdMain
CmdTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdTitle.BackgroundTransparency = 1.000
CmdTitle.Size = UDim2.new(0, 200, 0, 23)
CmdTitle.Font = Enum.Font.SourceSansBold
CmdTitle.Text = 'Ymir Admin '..ver
CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdTitle.TextSize = 14.000
CmdTitle.TextTransparency = 1

local CmdDescBox = Instance.new('Frame')
CmdDescBox.Name = 'YmirAdmin_DescBox'
CmdDescBox.Parent = CmdMain
CmdDescBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
CmdDescBox.BackgroundTransparency = 0.2500
CmdDescBox.Position = UDim2.new(-0.00237113237, 0, 0.307555377, 0)
CmdDescBox.Size = UDim2.new(0, 194, 0, 71)
CmdDescBox.Visible = false

local CmdDescTitle = Instance.new('TextLabel')
CmdDescTitle.Name = 'YmirAdmin_DescTitle'
CmdDescTitle.Parent = CmdDescBox
CmdDescTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdDescTitle.BackgroundTransparency = 1.000
CmdDescTitle.Size = UDim2.new(0, 191, 0, 23)
CmdDescTitle.Font = Enum.Font.SourceSansBold
CmdDescTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdDescTitle.TextSize = 13.500

local CmdDescription = Instance.new('TextLabel')
CmdDescription.Name = 'YmirAdmin_Description'
CmdDescription.Parent = CmdDescBox
CmdDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdDescription.BackgroundTransparency = 1.000
CmdDescription.Position = UDim2.new(0, 0, 0.324, 0)
CmdDescription.Size = UDim2.new(0, 191, 0, 48)
CmdDescription.ZIndex = 10
CmdDescription.Font = Enum.Font.SourceSans
CmdDescription.Text = ''
CmdDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdDescription.TextSize = 14.000
CmdDescription.TextWrapped = true

Instance.new('UIListLayout', CmdLogHandler).SortOrder = Enum.SortOrder.LayoutOrder
Instance.new('UIListLayout', CmdHandler).SortOrder = Enum.SortOrder.LayoutOrder
--//vvv SAVE AND LOAD vvv\\--
_G.settings = {
	prefix = '.',
	ChatCmd = true,
	notifs = true,
	logsOpen = false,
	mainPos = {x1 = CmdMain.Position.X.Scale, x2 = CmdMain.Position.X.Offset, x3 = CmdMain.Position.Y.Scale, x4 = CmdMain.Position.Y.Offset},
}
local file = 'YmirAdminSettings.pl'
local function load()
	if (readfile and isfile and isfile(file)) then
		_G.settings = HttpService:JSONDecode(readfile(file))
	end
end

local function save()
	spawn(function()
		local json
		if (writefile) then
			json = HttpService:JSONEncode(_G.settings)
			writefile(file, json)
		end
	end)
end

load()
wait()
local prefix = _G.settings.prefix
local ChatCmd = _G.settings.ChatCmd
local notifs = _G.settings.notifs
local logsOpen = _G.settings.logsOpen
local mainPos =  _G.settings.mainPos
CmdMain.Position =  UDim2.new(mainPos.x1, mainPos.x2, mainPos.x3, mainPos.x4)
if ChatCmd then
	CmdBar.PlaceholderText = 'Command Bar ('..prefix..')'
end
---//vvv DESTROY CLONES vvv\\---
local introSpeed = 0.2
local reload = false
if par:FindFirstChild('YmirAdmin_GUI') then
	reload = true 
	local oldGUI = par['YmirAdmin_GUI']
	if not oldGUI[CmdMain.Name][CmdBox.Name].Visible then 
		oldGUI[CmdMain.Name][CmdBox.Name]:GetPropertyChangedSignal('Visible'):Wait()
	end
	local oldMain = oldGUI[CmdMain.Name]
	CmdMain.Position = oldMain.Position
	CmdMain.Size = oldMain.Size
	local oldHandler = oldMain[CmdHandler.Name]
	CmdHandler.CanvasPosition = oldHandler.CanvasPosition
	local oldBox = oldMain[CmdBox.Name]
	CmdBox.Position = oldBox.Position
	local oldNotif = oldBox[CmdNotif.Name]
	CmdNotif.Visible = oldNotif.Visible
	local oldNotifHandler = oldBox[CmdLogHandler.Name]:Clone()
	CmdLogHandler:Destroy()
	oldNotifHandler.Parent = CmdBox
	CmdLogHandler = oldNotifHandler
	CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y)
	oldGUI:Destroy()
	CmdGUI.Parent = par
	CmdHandler.Visible = true
	CmdBox.Visible = true
	CmdBar.Visible = true
	CmdTitle.TextTransparency = 0
	CmdBar.TextTransparency = 0
	CmdBar.BackgroundTransparency = 0
else --//vvv INTRO vvv\\---
	CmdGUI.Parent = par
	local f1 = TweenService:Create(CmdMain, TweenInfo.new(), {Size = UDim2.new(0, 200, 0, 269)})
	f1:Play()
	f1.Completed:Wait()
	wait(.1)
	local f2 = TweenService:Create(CmdTitle, TweenInfo.new(introSpeed), {TextTransparency = 0})
	f2:Play()
	f2.Completed:Wait()
	wait(.1)
	CmdBar.Visible = true
	local f3 = TweenService:Create(CmdBar, TweenInfo.new(introSpeed), {BackgroundTransparency = 0})
	local f4 = TweenService:Create(CmdBar, TweenInfo.new(introSpeed), {TextTransparency = 0})
	f3:Play()
	f4:Play()
	f4.Completed:Wait()
	wait(.1)
	CmdHandler.Visible = true
	CmdBox.Visible = true
end
---//vvv VARIABLES vvv\\---
local canvasPos = CmdHandler.CanvasPosition
local notified = false
---//vvv COMMAND LOGGING vvv\\---
local function notif(txt, notimer)
	if notifs and not logsOpen then
		local counter = 0
		CmdNotif.Visible = true
		CmdLogHandler.Visible = false
		if not notified then
			CmdNotif.Text = txt
			if not notimer then wait(0.5) end
			notified = true
			local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)})
			tween:Play()
			notified = true
			tween.Completed:Wait()
			wait(3)
			if not logsOpen then
				tween = TweenService:Create(CmdMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
				tween:Play()
				notified = false
			end
		else 
			local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
			tween:Play()
			notified = false
			tween.Completed:Wait()
			CmdNotif.Text = txt
			tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)})
			tween:Play()
			notified = true
			tween.Completed:Wait()
			wait(3)
			if not logsOpen then
				tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
				tween:Play()
				notified = false
			end
		end
	end
end


local function log(txt)
	spawn(function()
		local clone = CmdLogExample:Clone()
		clone.Text = txt
		clone.Name = 'YmirAdmin_Log_'..tostring(#CmdLogHandler:GetChildren()+1)
		clone.TextTransparency = 1
		clone.Parent = CmdLogHandler
		CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y)
		local f = TweenService:Create(clone, TweenInfo.new(introSpeed), {TextTransparency = 0})
		f:Play()
	end)
end

local function toggleLogs(tog)
	_G.settings.logsOpen = tog
	save()
	if tog then
		logsOpen = true
		CmdLogHandler.Visible = true
		CmdBox:TweenPosition(UDim2.new(0.967000008, 0, 0.632000029, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5)
	else
		logsOpen = false
		local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingDirection.In, Enum.EasingStyle.Quart, 0.5), {Position = UDim2.new(0, 0, 0.632000029, 0)})
		tween:Play()
		tween.Completed:Wait()
		CmdLogHandler.Visible = false
	end
	CmdNotif.Visible = false
end
---//vvv GUI DRAGGING vvv\\---
local dragging
local dragInput
local dragStart
local startPos
local lastMousePos
local lastGoalPos

local function Lerp(a, b, m)
	return a + (b - a) * m
end;

local function Update(dt)
	if not (startPos) then return end;
	if not (dragging) and (lastGoalPos) then
		CmdMain.Position = UDim2.new(startPos.X.Scale, Lerp(CmdMain.Position.X.Offset, lastGoalPos.X.Offset, dt * 8), startPos.Y.Scale, Lerp(CmdMain.Position.Y.Offset, lastGoalPos.Y.Offset, dt * 8))
		_G.settings.mainPos = {x1 = CmdMain.Position.X.Scale, x2 = CmdMain.Position.X.Offset, x3 = CmdMain.Position.Y.Scale, x4 = CmdMain.Position.Y.Offset}
		save()
		return 
	end;

	local delta = (lastMousePos - UserInputService:GetMouseLocation())
	local xGoal = (startPos.X.Offset - delta.X);
	local yGoal = (startPos.Y.Offset - delta.Y);
	lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
	CmdMain.Position = UDim2.new(startPos.X.Scale, Lerp(CmdMain.Position.X.Offset, xGoal, dt * 8), startPos.Y.Scale, Lerp(CmdMain.Position.Y.Offset, yGoal, dt * 8))
end;

CmdMain.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = CmdMain.Position
		lastMousePos = UserInputService:GetMouseLocation()

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

CmdMain.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

dragging = RunService.Heartbeat:Connect(Update)
---//vvv COMMANDS vvv\\---
local Cmd = {}
Cmd[#Cmd + 1] = {Name='tase / taze <plr>',Desc='Tases the player'}
Cmd[#Cmd + 1] = {Name='taseall / tazeall',Desc='Tases all players'}
Cmd[#Cmd + 1] = {Name='looptase / looptaze <plr>',Desc='Loop tases the player'}
Cmd[#Cmd + 1] = {Name='unlooptase / unlooptaze <plr>',Desc='Disables loop tasing the player'}
Cmd[#Cmd + 1] = {Name='looptaseall / looptazeall',Desc='Loop tases all players'}
Cmd[#Cmd + 1] = {Name='unlooptaseall / unlooptazeall',Desc='Disables loop tasing all players'}
Cmd[#Cmd + 1] = {Name='arrest <plr / all>',Desc='Arrests the player or all criminals if you choose all'}
Cmd[#Cmd + 1] = {Name='looparrest / spamarrest <plr>',Desc='Loop arrests the player (Causes lag)'}
Cmd[#Cmd + 1] = {Name='arrestaura',Desc='Arrests everyone who is near you'}
Cmd[#Cmd + 1] = {Name='noarrestaura / unarrestaura',Desc='Disables arrest aura'}
Cmd[#Cmd + 1] = {Name='kill <plr / team / enemies / all>',Desc='Kills the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='loopkill / lk <plr / team / enemies / all>',Desc='Loop kills the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='unloopkill / unlk <plr / team / enemies / all>',Desc='Disables loop killing the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='clearloopkill / clearloopkills',Desc='Removes all loop kills'}
Cmd[#Cmd + 1] = {Name='killaura / aura',Desc='Kills everyone who is near you'}
Cmd[#Cmd + 1] = {Name='nokillaura / noaura',Desc='Disables kill aura'}
Cmd[#Cmd + 1] = {Name='inmate / inmates',Desc='Join the inmate team'}
Cmd[#Cmd + 1] = {Name='guard / guards',Desc='Join the guard team'}
Cmd[#Cmd + 1] = {Name='criminal / criminals',Desc='Join the criminal team (Requires respawn)'}
Cmd[#Cmd + 1] = {Name='neutral / neutrals',Desc='Join the neutral team'}
Cmd[#Cmd + 1] = {Name='red',Desc='Join the custom red team'}
Cmd[#Cmd + 1] = {Name='orange',Desc='Join the custom orange team'}
Cmd[#Cmd + 1] = {Name='yellow',Desc='Join the custom yellow team'}
Cmd[#Cmd + 1] = {Name='green',Desc='Join the custom green team'}
Cmd[#Cmd + 1] = {Name='blue',Desc='Join the custom blue team'}
Cmd[#Cmd + 1] = {Name='purple',Desc='Join the custom purple team'}
Cmd[#Cmd + 1] = {Name='pink',Desc='Join the custom pink team'}
Cmd[#Cmd + 1] = {Name='white',Desc='Join the custom white team'}
Cmd[#Cmd + 1] = {Name='grey',Desc='Join the custom grey team'}
Cmd[#Cmd + 1] = {Name='brown',Desc='Join the custom brown team'}
Cmd[#Cmd + 1] = {Name='black',Desc='Join the custom black team'}
Cmd[#Cmd + 1] = {Name='makecriminal / makecrim <plr>',Desc='Makes player join the criminal team'}
Cmd[#Cmd + 1] = {Name='makecriminalall / makecrimall',Desc='Makes all players join the criminal team'}
Cmd[#Cmd + 1] = {Name='lag <duration>',Desc='Lags for an amount of time'}
Cmd[#Cmd + 1] = {Name='unlag',Desc='Stops lag'}
Cmd[#Cmd + 1] = {Name='crash / crashserver',Desc='Lags and crashes the server'}
Cmd[#Cmd + 1] = {Name='uncrash / uncrashserver',Desc="Stops crashing the server"}
Cmd[#Cmd + 1] = {Name='fpslag / lagspike',Desc="Makes all players' FPS decrease (Requires SWAT gamepass)"}
Cmd[#Cmd + 1] = {Name='unfpslag / unlagspike',Desc='Stops FPS spiking'}
Cmd[#Cmd + 1] = {Name='infstamina',Desc="Enables infinite stamina"}
Cmd[#Cmd + 1] = {Name='uninfstamina / noinfstamina',Desc='Disables infinite stamina'}
Cmd[#Cmd + 1] = {Name='earbang / earrape <intensity>',Desc='Makes the whole server except you hear a loud noise'}
Cmd[#Cmd + 1] = {Name='noearbang / noearrape',Desc='Disables earbang'}
Cmd[#Cmd + 1] = {Name='reset / oof',Desc='Reset your character'}
Cmd[#Cmd + 1] = {Name='respawn / res',Desc='Respawns you on a spawn location'}
Cmd[#Cmd + 1] = {Name='refresh / re',Desc='Respawns you on your old location'}
Cmd[#Cmd + 1] = {Name='autorefresh / autore',Desc='Automatically respawn on your old location when you die'}
Cmd[#Cmd + 1] = {Name='unautorefresh / unautore',Desc='Disables autorefresh'}
Cmd[#Cmd + 1] = {Name='god / godmode',Desc='Grants immunity (With the cost of your avatar)'}
Cmd[#Cmd + 1] = {Name='ungod / ungodmode',Desc='Disables god mode'}
Cmd[#Cmd + 1] = {Name='swatgod',Desc='Grants immunity by spamming swat vest (Guard team only and requires SWAT gamepass)'}
Cmd[#Cmd + 1] = {Name='unswatgod',Desc='Disables swat god mode'}
Cmd[#Cmd + 1] = {Name='goto / to <plr>',Desc='Teleports you to the player'}
Cmd[#Cmd + 1] = {Name='bring <plr / team / all>',Desc='Teleports the player/team/all/enemies to you if you choose one of them'}
Cmd[#Cmd + 1] = {Name='loopbring <plr>',Desc='Loop teleports the player to your position'}
Cmd[#Cmd + 1] = {Name='unloopbring <plr>',Desc='Disables loop bringing the player'}
Cmd[#Cmd + 1] = {Name='nodaycycle / alwaysday',Desc='Disables day cycle'}
Cmd[#Cmd + 1] = {Name='daycycle / unalwaysday',Desc='Enables day cycle'}
Cmd[#Cmd + 1] = {Name='showinventory / showinv',Desc='Shows inventory'}
Cmd[#Cmd + 1] = {Name='autoshowinventory / autoshowinv',Desc='Auto shows inventory'}
Cmd[#Cmd + 1] = {Name='unautoshowinventory / unautoshowinv',Desc='Disables auto show inventory'}
Cmd[#Cmd + 1] = {Name='view / spectate <plr>',Desc='Spectates the player'}
Cmd[#Cmd + 1] = {Name='unview / unspectate',Desc='Unspectates the player'}
Cmd[#Cmd + 1] = {Name='antifling',Desc='Prevents you from being flinged'}
Cmd[#Cmd + 1] = {Name='unantifling',Desc='Disables antifling'}
Cmd[#Cmd + 1] = {Name='antitaser / taserbypass',Desc='Prevents you from being tased'}
Cmd[#Cmd + 1] = {Name='unantitaser / untaserbypass',Desc='Disables taser bypass'}
Cmd[#Cmd + 1] = {Name='antishield / antishields',Desc='Removes shields from other players'}
Cmd[#Cmd + 1] = {Name='unantishield / unantishields',Desc='Restores shields from other players'}
Cmd[#Cmd + 1] = {Name='fastpunch',Desc='Activates fast punching'}
Cmd[#Cmd + 1] = {Name='nofastpunch / slowpunch',Desc='Disables fast punching'}
Cmd[#Cmd + 1] = {Name='onepunch / superpunch',Desc='Activates one punching'}
Cmd[#Cmd + 1] = {Name='unonepunch / unoneshotpunch',Desc='Disables one punching'}
Cmd[#Cmd + 1] = {Name='freepunch',Desc='Running or crawling will not affect punching'}
Cmd[#Cmd + 1] = {Name='unfreepunch / nofreepunch',Desc='Disables free punching'}
Cmd[#Cmd + 1] = {Name='superpunch / allpunch',Desc='Enables fast, free, and one punching'}
Cmd[#Cmd + 1] = {Name='nosuperpunch / noallpunch',Desc='Disables super punching'}
Cmd[#Cmd + 1] = {Name='dropitems',Desc='Drops a bunch of items by loop killing you'}
Cmd[#Cmd + 1] = {Name='undropitems',Desc='Disables item dropping'}
Cmd[#Cmd + 1] = {Name='keycard / key / card',Desc='Finds for key card or you spawn a key card and auto pick it up'}
Cmd[#Cmd + 1] = {Name='findkeycard / findkey ',Desc='Finds for a key card'}
Cmd[#Cmd + 1] = {Name='crudeknife / knife',Desc='Adds crude knife to your backpack'}
Cmd[#Cmd + 1] = {Name='superknife / oneshotknife',Desc='Adds one shot knife to your backpack'}
Cmd[#Cmd + 1] = {Name='unsuperknife / normalknife',Desc='Disables one shot knife'}
Cmd[#Cmd + 1] = {Name='hammer',Desc='Adds hammer to your backpack'}
Cmd[#Cmd + 1] = {Name='baseballbat / bat',Desc='Adds one shot bat to your backpack'}
Cmd[#Cmd + 1] = {Name='m9 / pistol',Desc='Adds M9 to your backpack'}
Cmd[#Cmd + 1] = {Name='remington / shotgun',Desc='Adds Remington 870 to your backpack'}
Cmd[#Cmd + 1] = {Name='ak / ak47',Desc='Adds AK-47 to your backpack'}
Cmd[#Cmd + 1] = {Name='m4 / m4a1',Desc='Adds M4A1 to your backpack (Requires SWAT Gamepass)'}
Cmd[#Cmd + 1] = {Name='gun / guns',Desc='Adds all possible guns to your backpack'}
Cmd[#Cmd + 1] = {Name='autogun / autoguns',Desc='Automatically adds all possible guns to your backpack'}
Cmd[#Cmd + 1] = {Name='unautogun / unautoguns',Desc='Disables autoguns'}
Cmd[#Cmd + 1] = {Name='oneshotgun',Desc='Makes your gun one shot'}
Cmd[#Cmd + 1] = {Name='firerate <num>',Desc="Changes the firerate of the gun you're holding"}
Cmd[#Cmd + 1] = {Name='autofire / rapidfire',Desc='Makes your gun shoot really fast'}
Cmd[#Cmd + 1] = {Name='modgun / supergun',Desc="Enables all gun mods for the gun you're holding"}
Cmd[#Cmd + 1] = {Name='unmodgun / unsupergun',Desc="Disables gun mods for the gun you're holding"}
Cmd[#Cmd + 1] = {Name='automodguns / autosuperguns',Desc='Auto enables all gun mods for all your guns'}
Cmd[#Cmd + 1] = {Name='unautomodguns / unautosuperguns',Desc='Disables auto gun mods'}
Cmd[#Cmd + 1] = {Name='gate / frontgate',Desc='Teleports you to the gate'}
Cmd[#Cmd + 1] = {Name='opengate / openfrontgate',Desc='Opens the gate'}
Cmd[#Cmd + 1] = {Name='gateroom',Desc='Teleports you in the gateroom'}
Cmd[#Cmd + 1] = {Name='gatetower',Desc='Teleports you to the tower beside the gate'}
Cmd[#Cmd + 1] = {Name='tower',Desc='Teleports you to the tower on yard'}
Cmd[#Cmd + 1] = {Name='yard',Desc='Teleports you to the yard'}
Cmd[#Cmd + 1] = {Name='armory / guardroom',Desc='Teleports you to the armory'}
Cmd[#Cmd + 1] = {Name='nexus / prison',Desc='Teleports you in the nexus'}
Cmd[#Cmd + 1] = {Name='backnexus',Desc='Teleports you in the back of the nexus'}
Cmd[#Cmd + 1] = {Name='sewer / sewers',Desc='Teleports you in the sewer'}
Cmd[#Cmd + 1] = {Name='cafeteria / cafe',Desc='Teleports you in the cafeteria'}
Cmd[#Cmd + 1] = {Name='roof',Desc='Teleports you to the roof'}
Cmd[#Cmd + 1] = {Name='criminalbase / crimbase',Desc='Teleports you in the criminal base'}
Cmd[#Cmd + 1] = {Name='antifall / antivoid',Desc='Teleports you above if you almost fall to the void'}
Cmd[#Cmd + 1] = {Name='unantifall / unantivoid',Desc='Disables antifall'}
Cmd[#Cmd + 1] = {Name='rejoin / rj',Desc='Rejoin the server'}
Cmd[#Cmd + 1] = {Name='serverhop / shop',Desc='Join another server'}
Cmd[#Cmd + 1] = {Name='prefix / setprefix <text>',Desc='Sets prefix for commands'}
Cmd[#Cmd + 1] = {Name='chatcmd / enablechatcmd',Desc='Enable commands in chat'}
Cmd[#Cmd + 1] = {Name='nochatcmd /disablechatcmd',Desc='Disable commands in chat'}
Cmd[#Cmd + 1] = {Name='notif / notify',Desc='Notifies you when you use a command'}
Cmd[#Cmd + 1] = {Name='unnotif / unnotify',Desc='Disable notifying you whenever you use a command'}
Cmd[#Cmd + 1] = {Name='logs / notifications',Desc='Check command logs'}
Cmd[#Cmd + 1] = {Name='nologs / nonotifications',Desc='Minimize command logs'}
Cmd[#Cmd + 1] = {Name='version / ver',Desc='Checks for current version and updated version'}
Cmd[#Cmd + 1] = {Name='reloadgui / reloadscript',Desc='Reloads GUI and script'}
Cmd[#Cmd + 1] = {Name='destroygui / destroyscript',Desc='Destroys GUI and script'}

for i = 1,#Cmd do
	local clone = CmdExample:Clone()	
	clone.Text = Cmd[i].Name
	clone.Name = 'Cmd'
	local Ins = Instance.new('StringValue', clone)
	Ins.Name = 'Desc'
	Ins.Value = Cmd[i].Desc
	clone.Parent = CmdHandler
	if reload == false and i <= 11 then
		clone.TextTransparency = 1
		local f = TweenService:Create(clone, TweenInfo.new(introSpeed-0.05), {TextTransparency = 0})
		f:Play()
		f.Completed:Wait()
	end
	clone.MouseButton1Click:Connect(function()
		CmdBar:CaptureFocus()
		CmdBar.Text = clone.Text:split(' ')[1]
		CmdBar.CursorPosition = #CmdBar.Text + 1
	end)
end
local Mouse = game.Players.LocalPlayer:GetMouse()
Mouse.Move:Connect(function()
	local Guis = CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y)
	local Gui
	for _, v in pairs(Guis) do
		if v.Parent == CmdHandler then
			Gui = v
		end
	end
	if Gui ~= nil then
		local X = Mouse.X - CmdMain.AbsolutePosition.X
		local Y = Mouse.Y - CmdMain.AbsolutePosition.Y
		if Mouse.X > 200 then
			X = X - 191
		end
		if Mouse.Y > (Mouse.ViewSizeY-96) then
			Y = Y - 57
		end
		CmdDescBox.Visible = true
		CmdDescBox.Position = UDim2.new(0, X, 0, Y)
		CmdDescTitle.Text = Gui.Text
		CmdDescription.Text = Gui.Desc.Value
	else
		CmdDescBox.Visible = false
	end
end)

if reload then
	notif('Reloaded admin commands', true)
	log('[Logs]: Reloaded admin commands')
else
	CmdBar:ReleaseFocus()
	CmdBar.Text = ''
	if logsOpen then
		CmdLogHandler.Visible = true
		local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)})
		tween:Play()
		tween.Completed:Wait()
	end
	log('[Logs]: Loaded admin commands')
end
--//vvv COMMAND FUNCTIONS vvv\\--
-- variables --
local PlrsLoopKilled = {}
local PlrsLoopTased = {}
local GunsAutoModded = {}
local Toggles = {}
local PlrSpectated = nil
local PlrLoopBringing = nil
local punchCooldown
local knifeCooldown
local batCooldown
local SWAT = game:GetService('MarketplaceService'):UserOwnsGamePassAsync(game.Players.LocalPlayer.UserId, 96651)

local function plrName(plr)
	local name = plr.Name
	local disname = plr.DisplayName
	if name ~= disname then
		return name..' ('..disname..')'
	else return name end
end

local function getPlr(str)
	if not str then return end
	local str = string.lower(str)
	local plr
	local finding = true
	for _, Player in ipairs(game.Players:GetChildren()) do
		if finding then
			if string.lower(Player.Name):match('^'..str) or string.lower(Player.DisplayName):match('^'..str) then
				plr = Player
				finding = false
			end
		end
	end
	if plr then return plr else return nil end
end

local function plrDetails()
	return {game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame, workspace.CurrentCamera.CFrame, game.Players.LocalPlayer.TeamColor.Name}
end

local function goTo(plr, dis)
	local Distance = dis or CFrame.new(0,0,0)
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame*Distance
end

local function killPlr(plr)
	if not plr then return end
	pcall(function()
		if workspace:FindFirstChild(plr.Name) then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
			local tool = game.Players.LocalPlayer.Character:FindFirstChild('AK-47') or game.Players.LocalPlayer.Backpack:FindFirstChild('AK-47')
			local event = {
				[1] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [2] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [3] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [4] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [5] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [6] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [7] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [8] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}
			}
			ReplicatedStorage.ShootEvent:FireServer(event, tool)
			tool.Handle:Destroy()
			tool.Parent = game.Players.LocalPlayer.Character
			tool:Destroy()
		else return end
	end)
end

local function tasePlr(plr)
	if not plr then return end
	pcall(function()
		if workspace:FindFirstChild(plr.Name) then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			local team = details[3]

			local tool = game.Players.LocalPlayer.Character:FindFirstChild('Taser') or game.Players.LocalPlayer.Backpack:FindFirstChild('Taser')
			if team ~= 'Bright blue' or not tool then
				workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
				tool = game.Players.LocalPlayer.Character:FindFirstChild('Taser') or game.Players.LocalPlayer.Backpack:FindFirstChild('Taser')
			end

			local event = {
				[1] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Torso
				}}
			ReplicatedStorage.ShootEvent:FireServer(event, tool)
		else return end
	end)
end

local function bringPlr(plr, cf)
	if not plr then return end
	local plrCF = plrDetails()[1]
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
	local char = game.Players.LocalPlayer.Character
	char.Humanoid.Name = 'fuck'
	local c = char.fuck:Clone()
	c.Name = 'Humanoid'
	c.Parent = char
	char.fuck:Destroy()
	workspace.CurrentCamera.CameraSubject = char
	char.Animate.Disabled = true
	wait()
	char.Animate.Disabled = false
	char.Humanoid.DisplayDistanceType = 'None'
	local tool = game.Players.LocalPlayer.Backpack:FindFirstChild('M9') or game.Players.LocalPlayer.Character:FindFirstChild('M9')
	tool.Parent = char
	repeat wait(.1)
		goTo(plr)
	until not plr or tool.Parent == plr.Character
	local counter = 0
	repeat wait(.1)
		counter = counter + 1
		workspace:FindFirstChild(game.Players.LocalPlayer.Name).HumanoidRootPart.CFrame = cf
	until counter > 10
	workspace.Remote.loadchar:InvokeServer()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
end

local function arrestPlr(plr)
	if not plr then return end
	pcall(function()
		if workspace:FindFirstChild(plr.Name) then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			local team = details[3]
			repeat wait(.1)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
				spawn(function()
					workspace.Remote.arrest:InvokeServer(workspace[plr.Name].Head)
				end)()
			until plr.Character:FindFirstChild('Head'):FindFirstChild('handcuffedGui')
			wait()
			workspace.Remote.loadchar:InvokeServer(nil, team)
			game.Players.LocalPlayer.Character.Humanoid.Sit = false
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
		end
	end)
end

local function spamArrest(plr, t)
	for i = 1,t do
		workspace.Remote.arrest:InvokeServer(workspace[plr.Name].Head)
	end
end

local function createSound(sound, source, t)
	for i = 1, t do
		ReplicatedStorage.SoundEvent:FireServer(sound, source)
	end
end

local function godMode()
	game.Players.LocalPlayer.Character.Humanoid.Name = 1
	local l = game.Players.LocalPlayer.Character['1']:Clone()
	l.Parent = game.Players.LocalPlayer.Character
	l.Name = 'Humanoid'
	game.Players.LocalPlayer.Character.Animate.Disabled = true
	wait()
	game.Players.LocalPlayer.Character.Animate.Disabled = false
	game.Players.LocalPlayer.Character['1']:Destroy()
	game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
end

local function onePunch()
	local p = Instance.new('Part', game.Players.LocalPlayer.Character)
	p.Transparency = 1
	p.Size = game.Players.LocalPlayer.Character.Torso.Size
	p.CanCollide = false
	local w = Instance.new('Weld', p)
	w.Part0 = game.Players.LocalPlayer.Character.Torso
	w.Part1 = p
	w.C1 = CFrame.new(0, 0, 2)
	p.Touched:connect(function(h)
		if game.Players:FindFirstChild(h.Parent.Name) and h.Parent ~= game.Players.LocalPlayer and workspace[h.Parent.Name].Humanoid.Health > 0 then
			punchCooldown = true
			for i= 1, 15 do
				ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
			end
		end
	end)
	wait(.1)
	punchCooldown = false
	p:Destroy()
end

local function infStamina()
	local plr = game.Players.LocalPlayer
	for i,v in next, getgc() do 
		if type(v) == 'function' and getfenv(v).script and plr.Character:FindFirstChild('ClientInputHandler') and getfenv(v).script == plr.Character.ClientInputHandler then 
			for i2,v2 in next, debug.getupvalues(v) do 
				if type(v2) == 'number' and Toggles.InfStamina then 
					debug.setupvalue(v, i2, math.huge)
				end
			end
		end
	end
end

local function executeCmd(cmd, args)
	if cmd == 'tase' or cmd == 'taze' then
		local details = plrDetails()
		local team = details[3]
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.TeamColor.Name ~= 'Bright blue' then
					log('[Logs]: Tased '..plrName(plr))
					notif('Tased '..plrName(plr))
					tasePlr(plr)
					workspace.Remote.loadchar:InvokeServer(nil, team)
				else log('[Logs]: Failed to tase '..plrName(plr)) end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'taseall' or cmd == 'tazeall' then
		local details = plrDetails()
		local team = details[3]
		for _, plr in ipairs(game.Players:GetChildren()) do
			if plr.TeamColor.Name ~= 'Bright blue' then
				tasePlr(plr)
			end
		end
		log('[Logs]: Tased all players')
		workspace.Remote.loadchar:InvokeServer(nil, team)
	elseif cmd == 'looptase' or cmd == 'looptaze' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.TeamColor.Name ~= 'Bright blue' then
					if not PlrsLoopTased[plr.UserId] then
						log('[Logs]: Loop tasing '..plrName(plr))
						PlrsLoopTased[plr.UserId] = plr
						local _plr = PlrsLoopKilled[plr.UserId]
						repeat wait(.1)
							if _plr.TeamColor.Name ~= 'Bright blue' and workspace:FindFirstChild(_plr.Name) and workspace[_plr.Name]:FindFirstChild('Humanoid') and workspace[_plr.Name].Humanoid.Health > 0 then
								tasePlr(_plr)
							end
						until PlrsLoopKilled[plr.UserId] == nil
					else log('[Logs]: Already loop tasing '..plrName(plr)) end
				else log('[Logs]: Failed to loop tase '..plrName(plr)) end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'unlooptase' or cmd == 'unlooptaze' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if PlrsLoopTased[plr.UserId] then
					PlrsLoopTased[plr.UserId] = nil
					log('[Logs]: Disabled loop tasing '..plrName(plr))
				else log('[Logs]: Already disabled loop tasing '..plrName(plr)) end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'looptaseall' or cmd == 'looptazeall' then
		if not Toggles.LoopTaseAll then
			Toggles.LoopTaseAll = true
			log('[Logs]: Loop tasing all players')
			repeat wait(.1)
				for _, plr in ipairs(game.Players:GetChildren()) do
					if plr.TeamColor.Name ~= 'Bright blue' then
						tasePlr(plr)
					end
				end
			until not Toggles.LoopTaseAll
		else log('[Logs]: Alreadyoop tasing all players') end
	elseif cmd == 'unlooptaseall' or cmd == 'unlooptazeall' then
		if Toggles.LoopTaseAll then
			Toggles.LoopTaseAll = false
			log('[Logs]: Disabled loop tasing all players')
			PlrsLoopTased = {}
		else log('[Logs]: Already disabled loop tasing all players') end
	elseif cmd == 'arrest' then
		if args[1] then
			if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' or args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				for _, plr in ipairs(game.Players:GetChildren()) do
					if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == 'Really red' then
						arrestPlr(plr)
					end
				end
				log('[Logs]: Arrested all players')
			else
				local plr = getPlr(args[1])
				if plr then
					log('[Logs]: Attempting to arrest '..plrName(plr))
					if plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until plr.TeamColor.Name == 'Really red'
					end
					arrestPlr(plr)
				else log('[Logs]: No player found') end
			end
		else log('[Logs]: No player found') end
	elseif cmd == 'looparrest' or cmd == 'spamarrest' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				local details = plrDetails()
				local plrCF = details[1]
				local camCF = details[2]
				log('[Logs]: Spam arresting '..plrName(plr))
				if game.Players:FindFirstChild(plr.Name) then
					if plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until plr.TeamColor.Name == 'Really red'
					end
					repeat wait(.1)
						goTo(plr)
						for i = 1,100 do
							coroutine.wrap(function()
								spamArrest(plr, math.huge)
							end)()
						end
					until game.Players:FindFirstChild(plr.Name) or not workspace[plr.Name] or plr.TeamColor.Name ~= 'Really red'
					workspace.Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
					workspace.CurrentCamera.CFrame = camCF
				end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'arrestaura' then
		if not Toggles.ArrestAura then
			log('[Logs]: Enabled arrest aura')
			Toggles.ArrestAura = true
			repeat wait(.1)
				for i, v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if v ~= game.Players.LocalPlayer then
							local Distance = (v.Character:FindFirstChildOfClass('Part').Position - game.Players.LocalPlayer.Character:FindFirstChildOfClass('Part').Position).magnitude
							if (not v.Character:FindFirstChild('handcuffedGui')) and Distance <= 10 and Toggles.ArrestAura then
								workspace.Remote.arrest:InvokeServer(workspace[i].Head)
							end
						end
					end)
				end
			until not Toggles.ArrestAura
		else log('[Logs]: Already enabled arrest aura') end
	elseif cmd == 'unarrestaura' or cmd == 'noarrestaura' then
		if Toggles.ArrestAura then
			log('[Logs]: Disabled arrest aura')
			Toggles.ArrestAura = false
		else log('[Logs]: Already disabled arrest aura') end
	elseif cmd == 'kill' then
		local team = plrDetails()[3]
		if args[1] then
			local teamToKill = nil
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				teamToKill = {'Guards', 'Bright blue'} 
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				teamToKill = {'Inmates', 'Bright orange'} 
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				teamToKill = {'Criminals', 'Really red'} 
			elseif args[1] == 'all' or args[1] == 'others' then
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				for _, plr in pairs(game.Players:GetChildren()) do
					if plr.Name ~= game.Players.LocalPlayer.Name and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[Logs]: Killed all players')
				if team ~= 'Really red' then
					workspace.Remote.TeamEvent:FireServer(team)
				else workspace.Remote.loadchar:InvokeServer(nil, team) end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				for _, plr in pairs(game.Players:GetChildren()) do
					if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[Logs]: Killed all enemies')
			else
				local plr = getPlr(args[1])
				if plr then
					if team == plr.TeamColor.Name then
						workspace.Remote.TeamEvent:FireServer('Medium stone grey')
					end
					killPlr(plr)
					log('[Logs]: Killed '..plrName(plr))
					notif('Killed '..plrName(plr))
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else workspace.Remote.loadchar:InvokeServer(nil, team) end
				else log('[Logs]: No player found') end
			end
			if teamToKill and teamToKill ~= nil then
				if team == teamToKill[2] then
					workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				end
				for _, plr in pairs(game.Players:GetChildren()) do
					if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == teamToKill[2] and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[Logs]: Killed all '..teamToKill[1]:lower())
				if team ~= 'Really red' then
					workspace.Remote.TeamEvent:FireServer(team)
				else workspace.Remote.loadchar:InvokeServer(nil, team) end
			end
		end
	elseif cmd == 'loopkill' or cmd == 'lkill' or cmd == 'lk' then
		if args[1] then
			local already
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				if not Toggles.LoopKillGuards then
					Toggles.LoopKillGuards = true
					log('[Logs]: Enabled loop killing guards')
				else 
					log('[Logs]: Already enabled loop killing guards')
					already = true
				end
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if not Toggles.LoopKillInmates then
					Toggles.LoopKillInmates = true
					log('[Logs]: Enabled loop killing inmates')
				else 
					log('[Logs]: Already enabled loop killing inmates') 
					already = true
				end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if not Toggles.LoopKillCrims then
					Toggles.LoopKillCrims = true
					log('[Logs]: Enabled loop killing criminals')
				else 
					log('[Logs]: Already enabled loop killing criminals') 
					already = true
				end
			elseif args[1] == 'all' or args[1] == 'others' then
				if not Toggles.LoopKillAll then
					Toggles.LoopKillAll = true
					log('[Logs]: Enabled loop killing all players')
				else 
					log('[Logs]: Already enabled loop killing all players') 
					already = true
				end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				if not Toggles.LoopKillEnemies then
					Toggles.LoopKillEnemies = true
					log('[Logs]: Enabled loop killing enemies')
				else 
					log('[Logs]: Already enabled loop killing enemies') 
					already = true
				end
			else 
				local plr = getPlr(args[1])
				if plr then
					if not PlrsLoopKilled[plr.UserId] then
						PlrsLoopKilled[plr.UserId] = plr
						log('[Logs]: Loop killing '..plrName(plr))
						local _plr = PlrsLoopKilled[plr.UserId]
						repeat wait(.1)
							if workspace:FindFirstChild(_plr.Name) and workspace[_plr.Name]:FindFirstChild('Humanoid') and workspace[_plr.Name].Humanoid.Health > 0 and not workspace[_plr.Name]:FindFirstChild('ForceField') then
								local team = game.Players.LocalPlayer.TeamColor.Name
								if team == _plr.TeamColor.Name then
									workspace.Remote.TeamEvent:FireServer('Medium stone grey')
								end
								killPlr(_plr)
							end
						until PlrsLoopKilled[plr.UserId] == nil
					else log('[Logs]: Already loop killing '..plrName(plr)) end
				else log('[Logs]: No player found') end
			end
			if not already then
				if Toggles.LoopKillGuards then
					repeat wait(.1)
						local team = game.Players.LocalPlayer.TeamColor.Name
						if team == 'Bright blue' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == 'Bright blue' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillGuards
				elseif Toggles.LoopKillInmates then
					repeat wait(.1)
						local team = game.Players.LocalPlayer.TeamColor.Name
						if team == 'Bright orange' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillInmates 
				elseif Toggles.LoopKillCrims then
					repeat wait(.1)
						local team = game.Players.LocalPlayer.TeamColor.Name
						if team == 'Really red' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillCrims
				elseif Toggles.LoopKillAll then
					repeat wait(.1)
						local team = game.Players.LocalPlayer.TeamColor.Name
						if team ~= 'Medium stone grey' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if plr.Name ~= game.Players.LocalPlayer.Name and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillAll
				elseif Toggles.LoopKillEnemies then
					local team = game.Players.LocalPlayer.TeamColor.Name
					repeat wait(.1)
						for _, plr in pairs(game.Players:GetChildren()) do
							if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillEnemies
				end
			end
		end
	elseif cmd == 'unloopkill' or cmd == 'unlkill' or cmd == 'unlk' then
		if args[1] then
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				if Toggles.LoopKillGuards then
					Toggles.LoopKillGuards = false
					log('[Logs]: Disabled loop killing guards')
				else log('[Logs]: Already disabled loop killing guards') end
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if Toggles.LoopKillInmates then
					Toggles.LoopKillInmates = false
					log('[Logs]: Disabled loop killing inmates')
				else log('[Logs]: Already disabled loop killing inmates') end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if Toggles.LoopKillCrims then
					Toggles.LoopKillCrims = false
					log('[Logs]: Disabled loop killing criminals')
				else log('[Logs]: Already disabled loop killing criminals') end
			elseif args[1] == 'all' or args[1] == 'others' then
				if Toggles.LoopKillAll then
					Toggles.LoopKillAll = false
					log('[Logs]: Disabled loop killing all players')
				else log('[Logs]: Already disabled loop killing all players') end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				if Toggles.LoopKillEnemies then
					Toggles.LoopKillEnemies = false
					log('[Logs]: Disabled loop killing enemies')
				else log('[Logs]: Already disabled loop killing enemies') end
			else 
				local plr = getPlr(args[1])
				if plr then
					if PlrsLoopKilled[plr.UserId] then
						PlrsLoopKilled[plr.UserId] = nil
						log('[Logs]: Disabled loop killing '..plrName(plr))
					else log('[Logs]: Already disabled loop killing '..plrName(plr)) end
				else log('[Logs]: No player found') end
			end
		end
	elseif cmd == 'clearloopkills' or cmd == 'clearloopkill' or cmd == 'clearlks' or cmd == 'clearlk' then
		Toggles.LoopKillAll = false
		Toggles.LoopKillGuards = false
		Toggles.LoopKillInmates = false
		Toggles.LoopKillCrims = false
		Toggles.LoopKillEnemies = false
		PlrsLoopKilled = {}
		log('[Logs]: Cleared loop killing all players')
		notif('Cleared loop killing all players') 
	elseif cmd == 'killaura' or cmd == 'aura' then
		if not Toggles.KillAura then
			log('[Logs]: Enabled kill aura')
			Toggles.KillAura = true
			repeat wait(.1)
				for _, v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if v ~= game.Players.LocalPlayer then
							local Distance = (v.Character:FindFirstChildOfClass('Part').Position - game.Players.LocalPlayer.Character:FindFirstChildOfClass('Part').Position).magnitude
							if Distance <= 10 and Toggles.KillAura then
								for i = 1,25 do
									ReplicatedStorage.meleeEvent:FireServer(v)
								end
							end
						end
					end)
				end
			until not Toggles.KillAura
		else log('[Logs]: Already enabled kill aura') end
	elseif cmd == 'unkillaura' or cmd == 'unaura' or cmd == 'nokillaura' or cmd == 'noaura' then
		if Toggles.KillAura then
			log('[Logs]: Disabled kill aura')
			Toggles.KillAura = false
		else log('[Logs]: Already disabled kill aura') end
	elseif cmd == 'inmate' or cmd == 'inmates' or cmd == 'prisoner' or cmd == 'prisoners' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright orange' then
			workspace.Remote.TeamEvent:FireServer('Bright orange')
			log('[Logs]: Joined inmates team')
		else log('[Logs]: Already joined inmates team') end
	elseif cmd == 'guard' or cmd == 'guards' or cmd == 'police' or cmd == 'cop' or cmd == 'cops' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright blue' then
			workspace.Remote.TeamEvent:FireServer('Bright blue')
			wait(.1)
			if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright blue' then
				log('[Logs]: Cannot join guards team')
			else log('[Logs]: Joined guards team') end
		else log('[Logs]: Already joined guards team') end
	elseif cmd == 'criminal' or cmd == 'crim' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					if plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until plr.TeamColor.Name == 'Really red'
						log('[Logs]: Made '..plrName(plr)..' a criminal')
					else 
						notif(plrName(plr)..' is already a criminal') 
						log('[Logs]: '..plrName(plr)..' is already a criminal') 
					end
				else 
					if game.Players.LocalPlayer.TeamColor.Name  ~= 'Really red' then
						local details = plrDetails()
						local plrCF = details[1]
						local camCF = details[2]
						local team = details[3]
						if team == 'Bright orange' then
							repeat wait(.1)
								local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
								if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame ~= CF then 
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF 
								end
							until game.Players.LocalPlayer.TeamColor.Name == 'Really red'
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
						else
							workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
							workspace.CurrentCamera.CFrame = camCF
						end
						log('[Logs]: Joined criminals team')
					else log('[Logs]: Already joined criminals team') end
				end
			else log('[Logs]: No player found') end
		else
			if game.Players.LocalPlayer.TeamColor.Name  ~= 'Really red' then
				local details = plrDetails()
				local plrCF = details[1]
				local camCF = details[2]
				local team = details[3]
				if team == 'Bright orange' then
					repeat wait(.1)
						local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
						if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame ~= CF then 
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF 
						end
					until game.Players.LocalPlayer.TeamColor.Name == 'Really red'
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				else
					workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
					workspace.CurrentCamera.CFrame = camCF
				end
				log('[Logs]: Joined criminals team')
			else log('[Logs]: Already joined criminals team') end
		end
	elseif cmd == 'criminals' or cmd == 'crims' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Really red' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			local team = details[3]
			if team == 'Bright orange' then
				repeat wait(.1)
					local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
					if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame ~= CF then 
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF 
					end
				until game.Players.LocalPlayer.TeamColor.Name == 'Really red'
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			else
				workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
			end
			log('[Logs]: Joined criminals team')
		else log('[Logs]: Already joined criminals team') end
	elseif cmd == 'neutral' or cmd == 'neutrals' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Medium stone grey' then
			workspace.Remote.TeamEvent:FireServer('Medium stone grey')
			log('[Logs]: Joined neutral team')
		else log('[Logs]: Already joined neutral team') end
	elseif cmd == 'red' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright red' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright red')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom red team')
		else log('[Logs]: Already joined custom red team') end
	elseif cmd == 'orange' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Neon orange' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Neon orange')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom orange team')
		else log('[Logs]: Already joined custom orange team') end
	elseif cmd == 'yellow' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright yellow' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright yellow')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom yellow team')
		else log('[Logs]: Already joined custom yellow team') end
	elseif cmd == 'green' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright green' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright green')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom green team')
		else log('[Logs]: Already joined custom green team') end
	elseif cmd == 'blue' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Deep blue' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Deep blue')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom blue team')
		else log('[Logs]: Already joined custom blue team') end
	elseif cmd == 'purple' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Royal purple' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Royal purple')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom purple team')
		else log('[Logs]: Already joined custom purple team') end
	elseif cmd == 'pink' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Hot pink' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Hot pink')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom pink team')
		else log('[Logs]: Already joined custom pink team') end
	elseif cmd == 'white' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'White' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'White')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom white team')
		else log('[Logs]: Already joined custom white team') end
	elseif cmd == 'grey' or cmd == 'gray' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Ghost grey' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Ghost grey')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom grey team')
		else log('[Logs]: Already joined custom grey team') end
	elseif cmd == 'brown' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Brown' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Brown')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom brown team')
		else log('[Logs]: Already joined custom brown team') end
	elseif cmd == 'black' then
		if game.Players.LocalPlayer.TeamColor.Name  ~= 'Brown' then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer(nil, 'Really black')
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Joined custom black team')
		else log('[Logs]: Already joined custom black team') end
	elseif cmd == 'makecriminal' or cmd == 'makecrim' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					if plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until (not game.Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red'
						if game.Players:FindFirstChild(plr.Name) then
							log('[Logs]: Made '..plrName(plr)..' a criminal')
						end
					else 
						notif(plrName(plr)..' is already a criminal') 
						log('[Logs]: '..plrName(plr)..' is already a criminal') 
					end
				else 
					if game.Players.LocalPlayer.TeamColor.Name  ~= 'Really red' then
						local details = plrDetails()
						local plrCF = details[1]
						local camCF = details[2]
						local team = details[3]
						if team == 'Bright orange' then
							repeat wait(.1)
								local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
								if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame ~= CF then 
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF 
								end
							until game.Players.LocalPlayer.TeamColor.Name == 'Really red'
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
						else
							workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
							workspace.CurrentCamera.CFrame = camCF
						end
						log('[Logs]: Joined criminals team')
					else log('[Logs]: Already joined criminals team') end
				end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'makecriminalall' or cmd == 'makecrimall' then
		log('[Logs]: Making all players criminals...')
		for _, plr in ipairs(game.Players:GetChildren()) do
			if plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name ~= 'Really red' then
				repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until not plr or plr.TeamColor.Name == 'Really red'
			else continue end
		end
	elseif cmd == 'lag' then
		if args[1] then
			if typeof(tonumber(args[1])) == 'number' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
				local tool = game.Players.LocalPlayer.Character:FindFirstChild('Remington 870') or game.Players.LocalPlayer.Backpack:FindFirstChild('Remington 870')
				Toggles.Lag = true
				log('Lagging server for '..args[1]..' seconds')
				for i = 1, (tonumber(args[1])*3) do
					if not Toggles.Lag then break end
					local event = {
						[1] = {
							['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
							['Distance'] = 0, 
							['Cframe'] = CFrame.new(), 
							['Hit'] = workspace[game.Players.LocalPlayer.Name].Head
						}
					}
					ReplicatedStorage.ShootEvent:FireServer(event, tool)
				end
			else log('[Logs]: Input a valid duration') end
		else log('[Logs]: Input a valid duration') end
	elseif cmd == 'unlag' then
		if Toggles.Lag then
			log('[Logs]: Stopping lag')
			Toggles.Lag = false
			local tool = game.Players.LocalPlayer.Character:FindFirstChild('Remington 870') or game.Players.LocalPlayer.Backpack:FindFirstChild('Remington 870')
			tool.Handle:Destroy()
			tool.Parent = game.Players.LocalPlayer.Character
			tool:Destroy()
		else log('[Logs]: Already stopping lag') end
	elseif cmd == 'crash' or cmd == 'crashserver' then
		if not Toggles.CrashServer then
			log('[Logs]: Crashing server')
			Toggles.CrashServer = true
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
			local tool = game.Players.LocalPlayer.Character:FindFirstChild('Remington 870') or game.Players.LocalPlayer.Backpack:FindFirstChild('Remington 870')
			repeat wait(.1)
				local event = {
					[1] = {
						['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
						['Distance'] = 0, 
						['Cframe'] = CFrame.new(), 
						['Hit'] = workspace[game.Players.LocalPlayer.Name].Head
					}
				}
				ReplicatedStorage.ShootEvent:FireServer(event, tool)
			until not Toggles.CrashServer
		else log('[Logs]: Already crashing server') end
	elseif cmd == 'uncrash' or cmd == 'uncrashserver' then
		if Toggles.CrashServer then
			log('[Logs]: Uncrashing server')
			Toggles.CrashServer = false
			local tool = game.Players.LocalPlayer.Character:FindFirstChild('Remington 870') or game.Players.LocalPlayer.Backpack:FindFirstChild('Remington 870')
			tool.Handle:Destroy()
			tool.Parent = game.Players.LocalPlayer.Character
			tool:Destroy()
		else log('[Logs]: Already uncrashing server') end
	elseif cmd == 'fpslag' or cmd == 'lagspike' then
		if not Toggles.FPSLag then
			if SWAT then
				log('[Logs]: FPS spiking all players')
				Toggles.FPSLag = true
				repeat wait(.1)
					if game.Players.LocalPlayer.TeamColor.Name  ~= 'Bright blue' then
						repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until game.Players.LocalPlayer.TeamColor.Name  == 'Bright blue'
					end
					spawn(function()
						workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP)
					end)
				until not Toggles.FPSLag
			else log('[Logs]: You need the SWAT gamepass to use this command') end
		else log('[Logs]: Already FPS spiking all players') end
	elseif cmd == 'unfpslag' or cmd == 'unlagspike ' then
		if Toggles.FPSLag then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			log('[Logs]: Disabled FPS spiking all players')
			Toggles.FPSLag = false
			repeat wait(.1) workspace.Remote.loadchar:InvokeServer() until not workspace[game.Players.LocalPlayer.Name]:FindFirstChild('vest') 
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
		else log('[Logs]: Already disabled FPS spiking all players') end
	elseif cmd == 'infstamina' then
		if not Toggles.InfStamina then
			local shitexecutor
			local getgcollector = getgc or debug.getregistry
			local setupvalue = debug.setupvalue or setupvalue or setupval
			local getupvalues = debug.getupvalues or getupvalues or getupvals
			for _, v in next, {getgcollector, setupvalue, getupvalues} do
				if typeof(v) ~= 'function' then
					shitexecutor = true
					log("[Logs]: Your executor doesn't support this command")
					break
				end
			end
			if not shitexecutor then
				Toggles.InfStamina = true
				log('[Logs]: Enabled infinite stamina')
				infStamina()
			end
		else log('[Logs]: Already enabled infinite stamina') end
	elseif cmd == 'uninfstamina' or cmd == 'noinfstamina' then
		if Toggles.InfStamina then
			Toggles.InfStamina = false
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			workspace.Remote.loadchar:InvokeServer()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[Logs]: Disabled infinite stamina')
		else log('[Logs]: Already disabled infinite stamina') end
	elseif cmd == 'earbang' or cmd == 'earrape' then
		if args[1] and tonumber(args[1]) then
			if not Toggles.Earbang then
				Toggles.Earbang = true
				log('[Logs]: Enabled earbang')
				repeat wait(.1) 
					for _ ,plr in pairs(game.Players:GetChildren()) do
						if not Toggles.Earbang then break end
						if workspace:FindFirstChild(plr.Name) or workspace[plr.Name]:FindFirstChild('Head') then
							local h = plr.Character.Head
							local s = workspace['Prison_guardspawn'].spawn.Sound
							createSound(s, h, tonumber(args[1]))
						end
					end
				until not Toggles.Earbang
			else log('[Logs]: Already enabled earbang') end
		else log('[Logs]: Input a valid number') end
	elseif cmd == 'noearbang' or cmd == 'unearbang' or cmd == 'noearape' or cmd == 'unearrape' then
		if Toggles.Earbang then
			Toggles.Earbang = false
			log('[Logs]: Disabled earbang')
		else log('[Logs]: Already disabled earbang') end
	elseif cmd == 'reset' or cmd == 'oof ' then
		game.Players.LocalPlayer.Character:BreakJoints()
		log('[Logs]: Successfully reset')
	elseif cmd == 'respawn' or cmd == 'res' then
		workspace.Remote.loadchar:InvokeServer()
		log('[Logs]: Successfully respawned')
	elseif cmd == 'refresh' or cmd == 're' then
		local details = plrDetails()
		local plrCF = details[1]
		local camCF = details[2]
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
		workspace.CurrentCamera.CFrame = camCF
		log('[Logs]: Successfully refreshed')
	elseif cmd == 'autorefresh' or cmd == 'autore' then
		if not Toggles.AutoRefresh then
			log('[Logs]: Enabled auto refresh')
			Toggles.AutoRefresh = true
			local func 
			func = game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
				if Toggles.AutoRefresh then
					local details = plrDetails()
					local plrCF = details[1]
					local camCF = details[2]
					workspace.Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
					workspace.CurrentCamera.CFrame = camCF
				else func:Disconnect() end
			end)
		else log('[Logs]: Already enabled auto refresh') end
	elseif cmd == 'unautorefresh' or cmd == 'unautore' then
		if Toggles.AutoRefresh then
			log('[Logs]: Disabled auto refresh')
			Toggles.AutoRefresh = false
		else log('[Logs]: Already disabled auto refresh') end
	elseif cmd == 'god' or cmd == 'godmode' then
		if not Toggles.GodMode then
			log('[Logs]: Enabled god mode')
			Toggles.GodMode = true
			repeat wait(.1)
				godMode()
				wait(5)
				local details = plrDetails()
				local plrCF = details[1]
				local camCF = details[2]
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
			until not Toggles.GodMode
		else log('[Logs]: Already enabled god mode') end
	elseif cmd == 'ungod' or cmd == 'ungodmode' then
		if Toggles.GodMode then
			log('[Logs]: Disabled god mode')
			Toggles.GodMode = false
			if not game.Players.LocalPlayer.Character:FindFirstChild('ForceField') then
				local details = plrDetails()
				local plrCF = details[1]
				local camCF = details[2]
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
			end
		else log('[Logs]: Already disabled god mode') end
	elseif cmd == 'swatgod' or cmd == 'swatgodmode' then
		if not Toggles.SwatGodMode then
			if SWAT then
				log('[Logs]: Enabled swat god mode')
				Toggles.SwatGodMode = true
				repeat wait(.1)
					if game.Players.LocalPlayer.TeamColor.Name ~= 'Bright blue' then
						workspace.Remote.TeamEvent:FireServer('Bright blue')
					end
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP)
					if workspace[game.Players.LocalPlayer.Name]:FindFirstChild('vest') then workspace[game.Players.LocalPlayer.Name].vest:Destroy() end
				until not Toggles.SwatGodMode
			else log('[Logs]: You need the SWAT gamepass to use this command') end
		else log('[Logs]: Already enabled swat god mode') end
	elseif cmd == 'unswatgod' or cmd == 'unswatgodmode' then
		if Toggles.SwatGodMode then
			Toggles.SwatGodMode = false
			log('[Logs]: Disabled swat god mode')
		else log('[Logs]: Already disabled swat god mode') end
	elseif cmd == 'goto' or cmd == 'to' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					goTo(plr)
					log('[Logs]: Teleported to '..plrName(plr))
				else log("[Logs]: You can't teleport to yourself") end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'bring' then
		local details = plrDetails()
		local plrCF = details[1]
		local teamToBring = nil
		if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
			teamToBring = {'Guards', 'Bright blue'} 
		elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
			teamToBring = {'Inmates', 'Bright orange'} 
		elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
			teamToBring = {'Criminals', 'Really red'} 
		elseif args[1] == 'all' or args[1] == 'others' then
			for _, plr in ipairs(game.Players:GetChildren()) do
				if workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr.Name ~= game.Players.LocalPlayer.Name then
					bringPlr(plr, plrCF)
				end
			end
			log('[Logs]: Brought all players')
		elseif args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					bringPlr(plr, plrCF)
					log('[Logs]: Brought '..plrName(plr))
				else log("[Logs]: You can't bring yourself") end
			else log('[Logs]: No player found') end
		end
		if teamToBring and teamToBring ~= nil then
			for _, plr in ipairs(game.Players:GetChildren()) do
				if workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr.Name ~= game.Players.LocalPlayer.Name and plr.TeamColor.Name == teamToBring[2] then
					bringPlr(plr, plrCF)
				end
			end
			log('[Logs]: Brought all '..teamToBring[1]:lower())
		end
	elseif cmd == 'loopbring'then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					if PlrLoopBringing ~= plr then
						PlrLoopBringing = plr
						log('[Logs]: Loop bringing '..plrName(plr))
						repeat wait(.1)
							local details = plrDetails()
							local plrCF = details[1]
							bringPlr(plr, plrCF)
							wait(.1)
						until PlrLoopBringing ~= plr
					else log('[Logs]: Already loop bringing '..plrName(plr)) end
				else log("[Logs]: You can't loop bring yourself") end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'unloopbring'then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if PlrLoopBringing then
					if PlrLoopBringing == plr then
						PlrLoopBringing = nil
						log('[Logs]: Disabled loop bringing '..plrName(plr))
					else log('[Logs]: You are not loop bringing '..plrName(plr)) end
				else log('[Logs]: You are not loop bringing '..plrName(plr)) end
			else log('[Logs]: No player found') end
		else 
			if PlrLoopBringing then
				PlrLoopBringing = nil
				log('[Logs]: Disabled loop bringing')
			else log('[Logs]: You are not loop bringing anyone') end
		end
	elseif cmd == 'nodaycycle' or cmd == 'alwaysday' then
		if not Toggles.AlwaysDay then
			log('[Logs]: Disabled day cycle')
			Toggles.AlwaysDay = true
			repeat wait(.1)
				game.Lighting.Brightness = 2
				game.Lighting.ClockTime = 14
				game.Lighting.FogEnd = 100000
				game.Lighting.GlobalShadows = false
				game.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
			until not Toggles.AlwaysDay
		else log('[Logs]: Already disabled day cycle') end
	elseif cmd == 'daycycle' or cmd == 'unalwaysday' then
		if Toggles.AlwaysDay then
			log('[Logs]: Enabled day cycle')
			Toggles.AlwaysDay = false
		else log('[Logs]: Already enabled day cycle') end
	elseif cmd == 'showinventory' or cmd == 'showinv' then
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		log('[Logs]: Showed inventory')
	elseif cmd == 'autoshowinventory' or cmd == 'autoshowinv' then
		if not Toggles.AutoShowInv then
			log('[Logs]: Enabled auto show inventory')
			Toggles.AutoShowInv = true
			repeat wait(.1)
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			until not Toggles.AutoShowInv
		else log('[Logs]: Already enabled auto show inventory') end
	elseif cmd == 'unautoshowinventory' or cmd == 'unautoshowinv' then
		if Toggles.AutoShowInv then
			log('[Logs]: Disabled auto show inventory')
			Toggles.AutoShowInv = false
		else log('[Logs]: Already disabled auto show inventory') end
	elseif cmd == 'view' or cmd == 'spectate' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr.Name ~= game.Players.LocalPlayer.Name then
					if PlrSpectated ~= plr then
						PlrSpectated = plr
						log('[Logs]: Spectating '..plrName(plr))
						repeat wait(.1)
							if PlrSpectated and workspace.CurrentCamera.CameraSubject ~= plr.Character then
								workspace.CurrentCamera.CameraSubject = plr.Character
							end
						until PlrSpectated ~= plr
					else log('[Logs]: Already spectating '..plrName(plr)) end
				else log("[Logs]: You can't spectate yourself") end
			else log('[Logs]: No player found') end
		end
	elseif cmd == 'unview' or cmd == 'unspectate' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if PlrSpectated then
					if plr == PlrSpectated then
						PlrSpectated = nil
						workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
						log('[Logs]: Stopped spectating '..plrName(plr))
					else log('[Logs]: You are not spectating '..plrName(plr)) end
				else log('[Logs]: You are not spectating '..plrName(plr)) end
			else log('[Logs]: No player found') end
		else 	
			if PlrSpectated then
				PlrSpectated = nil
				workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
				log('[Logs]: Stopped spectating')
			else log('[Logs]: You are not spectating anyone') end
		end
	elseif cmd == 'antifling' then
		if not Toggles.AntiFling then
			log('[Logs]: Enabled antifling')
			Toggles.AntiFling = true
			repeat wait(.1)
				for _, plr in pairs(game.Players:GetChildren()) do
					if plr:FindFirstChild('Character') then
						for _, v in pairs(plr.Character:GetDescendants()) do
							if v:IsA('BasePart') and v.CanCollide then
								v.CanCollide = false
							else continue end
						end
					else continue end
				end
			until not Toggles.AntiFling
		else log('[Logs]: Already enabled antifling') end
	elseif cmd == 'unantifling' or cmd == 'noantifling' then
		if Toggles.AntiFling then
			log('[Logs]: Disabled antifling')
			Toggles.AntiFling = false
			spawn(function()
				for _, plr in pairs(game.Players:GetChildren()) do
					if workspace:FindFirstChild(plr.Name) and not Toggles.AntiFling then
						spawn(function()
							for _, v in pairs(workspace[plr.Name]:GetChildren()) do
								if v:IsA('BasePart') and not v.CanCollide and not Toggles.AntiFling then
									v.CanCollide = true
								end
							end
						end)
					end
				end
			end)
		else log('[Logs]: Already disabled antifling') end
	elseif cmd == 'antitaser' or cmd == 'taserbypass' then
		if not Toggles.TaserBypass then
			local team = plrDetails()[3]
			if team ~= 'Bright blue' then
				log('[Logs]: Enabled taser bypass')
				Toggles.TaserBypass = true
				repeat wait(.1)
					local animations = game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()
					for _, v in next, animations do
						if v.Animation.AnimationId == 'rbxassetid://279227693' or v.Animation.AnimationId == 'rbxassetid://279229192' then
							v:Stop()
							game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
							game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
							game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
						else continue end
					end
				until not Toggles.TaserBypass
			else log("[Logs]: You can't enable taser bypass") end
		else log('[Logs]: Already enabled taser bypass') end
	elseif cmd == 'unantitaser' or cmd == 'untaserbypass' or cmd == 'noantitaser' or cmd == 'notaserbypass' then
		if Toggles.TaserBypass then
			log('[Logs]: Disabled taser bypass')
			Toggles.TaserBypass = false
		else log('[Logs]: Already disabled taser bypass') end
	elseif cmd == 'antishield' or cmd == 'antishields' or cmd == 'noshields' or cmd == 'noshield' then
		if not Toggles.AntiShield then
			local team = plrDetails()[3]
			log('[Logs]: Enabled anti shields')
			Toggles.AntiShield = true
			repeat wait(.1)
				for _, plr in pairs(game.Players:GetChildren()) do
					if workspace:FindFirstChild(plr.Name) and workspace[plr.Name].Torso:FindFirstChild('ShieldFolder') and workspace[plr.Name].Torso.ShieldFolder:FindFirstChild('shield') then
						plr.Character.Torso.ShieldFolder.shield.Transparency = 1
						plr.Character.Torso.ShieldFolder.shield.Mesh.MeshId = ''
						plr.Character.Torso.ShieldFolder.shield.CanCollide = false
						plr.Character.Torso.ShieldFolder.shield.Size = Vector3.new(0,0,0)
					else continue end
				end
			until not Toggles.AntiShield
		else log('[Logs]: Already enabled anti sheilds') end
	elseif cmd == 'unantishield' or cmd == 'unantishields' or cmd == 'shields' or cmd == 'shield' then
		if Toggles.AntiShield then
			log('[Logs]: Disabled anti sheilds')
			Toggles.AntiShield = false
			for _, plr in pairs(game.Players:GetChildren()) do
				if workspace:FindFirstChild(plr.Name) and workspace[plr.Name].Torso:FindFirstChild('ShieldFolder') and workspace[plr.Name].Torso.ShieldFolder:FindFirstChild('shield') then
					workspace[plr.Name].Torso.ShieldFolder.shield.Transparency = 0
					workspace[plr.Name].Torso.ShieldFolder.shield.Mesh.MeshId = 'rbxassetid://82265009'
					workspace[plr.Name].Torso.ShieldFolder.shield.CanCollide = true
					plr.Character.Torso.ShieldFolder.shield.Size = Vector3.new(2.6, 4.2, 0.4)
				end
			end
		else log('[Logs]: Already disabled anti sheilds') end
	elseif cmd == 'fastpunch' or cmd == 'speedpunch' then
		if not Toggles.FastPunch then
			log('[Logs]: Enabled fast punching')
			Toggles.FastPunch = true
			repeat wait(.1)
				if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting ~= false then
					getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
				end
			until not Toggles.FastPunch
		else log('[Logs]: Already enabled fast punching') end
	elseif cmd == 'unfastpunch' or cmd == 'unspeedpunch' or cmd == 'slowpunch' or cmd == 'nofastpunch' then
		if Toggles.FastPunch then
			Toggles.FastPunch = false
			log('[Logs]: Disabled fast punching')
		else log('[Logs]: Already disabled fast punching') end
	elseif cmd == 'onepunch' or cmd == 'oneshotpunch' then
		if not Toggles.OnePunch then
			log('[Logs]: Enabled one punching')
			Toggles.OnePunch = true
			Mouse.KeyDown:connect(function(k)
				if k:lower() == 'f' and Toggles.OnePunch and not punchCooldown then
					onePunch()
				end	
			end)
		else log('[Logs]: Already enabled one punching') end
	elseif cmd == 'unonepunch' or cmd == 'unoneshotpunch' or cmd == 'noonepunch' or cmd == 'nooneshotpunch' then
		if Toggles.OnePunch then
			Toggles.OnePunch = false
			log('[Logs]: Disabled one punching')
		else log('[Logs]: Already disabled one punching') end
	elseif cmd == 'freepunch' then
		if not Toggles.FreePunch then
			log('[Logs]: Enabled free punching')
			Toggles.FreePunch = true
			Mouse.KeyDown:connect(function(k)
				if Toggles.FreePunch then
					if k:lower() == 'f' then
						if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning ~= false then
							getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning = false
							wait(.1)
							getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning = true
						end
						if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching ~= false then
							getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching = false
							wait(.1)
							getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching = true
						end
					end				
				end
			end)
		else log('[Logs]: Already enabled free punching') end
	elseif cmd == 'unfreepunch' or cmd == 'nofreepunch' then
		if Toggles.FreePunch then
			Toggles.FreePunch = false
			log('[Logs]: Disabled free punching')
		else log('[Logs]: Already disabled free punching') end
	elseif cmd == 'superpunch' or cmd == 'allpunch' then
		if not Toggles.OnePunch then
			log('[Logs]: Enabled super punching')
			Toggles.FastPunch = false
			Toggles.FreePunch = false
			Toggles.OnePunch = false
			Toggles.SuperPunch = true
			Mouse.KeyDown:connect(function(k)
				if k:lower() == 'f' and Toggles.SuperPunch and not punchCooldown then
					onePunch()
					if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting ~= false then
						getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
					end
					if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning ~= false then
						getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning = false
						wait(.1)
						getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isRunning = true
					end
					if getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching ~= false then
						getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching = false
						wait(.1)
						getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isCrouching = true
					end
				end	
			end)
		else log('[Logs]: Already enabled super punching') end
	elseif cmd == 'unsuperpunch' or cmd == 'nosuperpunch' or cmd == 'unallpunch' or cmd == 'noallpunch' or cmd == 'normalpunch' then
		if Toggles.SuperPunch then
			Toggles.SuperPunch = false
			log('[Logs]: Disabled super punching')
		else log('[Logs]: Already disabled super punching') end
	elseif cmd == 'dropitems' then
		if not Toggles.DropItems then
			Toggles.DropItems = true
			local plrCF
			local team
			pcall(function()
				local details = plrDetails()
				plrCF = details[1]
				team = details[3]
			end)
			if not plrCF and not team then
				local plr = game.Players.LocalPlayer
				repeat wait(.1) until plr:FindFirstChild('Character') and plr.Character:FindFirstChild('HumanoidRootPart')
				plrCF = plr.Character.HumanoidRootPart
				team = plr.TeamColor.Name
			end
			if team ~= 'Bright blue' then
				log('[Logs]: Switching to guard team, please wait...')
				repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until game.Players.LocalPlayer.TeamColor.Name == 'Bright blue'
			end
			log('[Logs]: Enabled item dropping')
			spawn(function()
				if Toggles.DropItems then
					repeat wait(.1)
						game.Players.LocalPlayer.Character:BreakJoints()
						workspace.Remote.loadchar:InvokeServer()
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
						wait(.1)
					until not Toggles.DropItems
					return end
			end)
		else log('[Logs]: Already enabled item dropping') end
	elseif cmd == 'undropitems' then
		if Toggles.DropItems then
			Toggles.DropItems = false
			log('[Logs]: Disabled item dropping')
		else log('[Logs]: Already disabled item dropping') end
	elseif cmd == 'key' or cmd == 'keycard' or cmd == 'card' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Key card') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Key card') then
			local details = plrDetails()
			local plrCF = details[1]
			local camCF = details[2]
			local team = details[3]
			if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
				log('[Logs]: Obtained key card') 
			else 
				log('[Logs]: Switching to guard team, please wait...')
				if team ~= 'Bright blue' then
					repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until game.Players.LocalPlayer.TeamColor.Name == 'Bright blue'
				end
				repeat wait(.1)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-365.976562, 84.2401199, 1987.99207)
					game.Players.LocalPlayer.Character:BreakJoints()
					workspace.Remote.loadchar:InvokeServer()
				until workspace.Prison_ITEMS.single:FindFirstChild('Key card')
				workspace.Remote.loadchar:InvokeServer(nil, team)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
				log('[Logs]: Obtained key card')
			end
		else log('[Logs]: You already obtained a key card') end
	elseif cmd == 'findkey' or cmd == 'findkeycard' or cmd == 'findcard' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Key card') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Key card') then
			if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
				log('[Logs]: Obtained key card') 
			else 
				log('[Logs]: Finding key card...')
				spawn(function()
					repeat wait(.1) until workspace.Prison_ITEMS.single:FindFirstChild('Key card')
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
					log('[Logs]: Obtained key card')
				end)
			end
		else log('[Logs]: You already obtained a key card') end
	elseif cmd == 'crudeknife' or cmd == 'knife' or cmd == 'shank' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Crude Knife') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Crude Knife') then
			local team = plrDetails()[3]
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			log('[Logs]: Obtained crude knife')
		else log('[Logs]: You already obtained a knife') end
	elseif cmd == 'superknife' or cmd == 'oneshotknife' or cmd == 'supershank' then
		local obtained
		if not game.Players.LocalPlayer.Character:FindFirstChild('Crude Knife') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Crude Knife') then
			local team = plrDetails()[3]
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			obtained = true
		end
		Toggles.SuperKnife = true
		if obtained then log('[Logs]: Obtained super knife') else log('[Logs]: Enabled super knife') end
		local tool = game.Players.LocalPlayer.Character:FindFirstChild('Crude Knife') or game.Players.LocalPlayer.Backpack:FindFirstChild('Crude Knife')
		tool.Activated:Connect(function()
			if Toggles.SuperKnife and not knifeCooldown then
				local handle = game.Players.LocalPlayer.Character['Crude Knife'].Handle
				handle.Touched:connect(function(h)
					if Toggles.SuperKnife and not knifeCooldown then
						if game.Players:FindFirstChild(h.Parent.Name) and h.Parent ~= game.Players.LocalPlayer and workspace[h.Parent.Name].Humanoid.Health > 0 then
							knifeCooldown = true
							for i = 1,15 do
								ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
							end
							knifeCooldown = false
						else knifeCooldown = false end
					end
				end)
			end
		end)
	elseif cmd == 'unsuperknife' or cmd == 'unoneshotknife' or cmd == 'unsupershank' or cmd == 'normalknife' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Crude Knife') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Crude Knife') then
			Toggles.SuperKnife = false
			log('[Logs]: Already disabled super knife')
		else 
			if Toggles.SuperKnife then
				Toggles.SuperKnife = false
				log('[Logs]: Disabled super knife')
			else log('[Logs]: Already disabled super knife') end
		end
	elseif cmd == 'hammer' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Hammer') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Hammer') then
			local team = plrDetails()[3]
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Hammer'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Hammer'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			log('[Logs]: Obtained a hammer')
		else log('[Logs]: You already obtained a hammer') end
	elseif cmd == 'baseballbat' or cmd == 'bat' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Bat') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Bat') then
			local plr = game.Players.LocalPlayer
			local tool = Instance.new('Tool')
			tool.Name = 'Bat'
			tool.GripPos = Vector3.new(0, -1.15, 0)
			local handle = Instance.new('Part', tool)
			handle.Name = 'Handle'
			handle.Size = Vector3.new(0.4, 5, 0.4)
			local anim = Instance.new('Animation', tool)
			anim.AnimationId = 'rbxassetid://218504594'
			local track = plr.Character.Humanoid.Animator:LoadAnimation(anim)
			tool.Parent = plr.Backpack
			tool.Activated:Connect(function()
				if not batCooldown then
					track:Play()
					handle.Touched:Connect(function(h)
						if not batCooldown then
							if game.Players:FindFirstChild(h.Parent.Name) and h.Parent ~= game.Players.LocalPlayer and workspace[h.Parent.Name].Humanoid.Health > 0 then
								batCooldown = true
								for i = 1,15 do
									ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
								end
								batCooldown = false
							else batCooldown = false end
						end
					end)
				end
			end)
			log('[Logs]: Obtained a baseball bat')
		else log('[Logs]: You already obtained baseball bat') end
	elseif cmd == 'm9' or cmd == 'pistol' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('M9') and not game.Players.LocalPlayer.Backpack:FindFirstChild('M9') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
			log('[Logs]: Obtained M9')
		else log('[Logs]: You already obtained M9') end
	elseif cmd == 'remington870' or cmd == 'remington' or cmd == 'shotgun' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('Remington 870') and not game.Players.LocalPlayer.Backpack:FindFirstChild('Remington 870') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
			log('[Logs]: Obtained Remington 870')
		else log('[Logs]: You already obtained Remington 870') end
	elseif cmd == 'ak47' or cmd == 'ak' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('AK-47') and not game.Players.LocalPlayer.Backpack:FindFirstChild('AK-47') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
			log('[Logs]: Obtained AK-47')
		else log('[Logs]: You already obtained AK-47') end
	elseif cmd == 'm4a1' or cmd == 'm4' or cmd == 'ar' then
		if not game.Players.LocalPlayer.Character:FindFirstChild('M4A1') and not game.Players.LocalPlayer.Backpack:FindFirstChild('M4A1') then
			if SWAT then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
				log('[Logs]: Obtained M4A1')
			else 
				notif('You need the SWAT gamepass to use this command')  
				log('[Logs]: You need the SWAT gamepass to use this command')  
			end
		else log('[Logs]: You already obtained M4A1') end
	elseif cmd == 'gun' or cmd == 'guns' then
		local inv = #game.Players.LocalPlayer.Backpack:GetChildren()
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
		if SWAT then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
		end
		if #game.Players.LocalPlayer.Backpack:GetChildren() ~= inv then
			log('[Logs]: Obtained all guns')
		else log('[Logs]: Already obtained all guns') end
	elseif cmd == 'autogun' or cmd == 'autoguns' then
		if not Toggles.AutoGuns then
			Toggles.AutoGuns = true
			log('[Logs]: Enabled auto guns')
			repeat wait(.1)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
				if SWAT then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
				end
			until not Toggles.AutoGuns
		else log('[Logs]: Already enabled auto guns') end
	elseif cmd == 'unautogun' or cmd == 'unautoguns' then
		if Toggles.AutoGuns then
			Toggles.AutoGuns = false
			log('[Logs]: Disabled auto guns')
		else log('[Logs]: Already disabled auto guns') end
	elseif cmd == 'oneshotgun' then
		local plr = game.Players.LocalPlayer
		if plr.Character:FindFirstChildOfClass('Tool') then
			local tool = plr.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				local req = require(tool.GunStates)
				req.Spread = 0
				req.Bullets = 25
				req.Damage = math.huge
				log('[Logs]: Made '..tool.Name..' one shot')
			else log('[Logs]: Equip a gun before using this command') end
		else log('[Logs]: Equip a gun before using this command') end
	elseif cmd == 'firerate' then
		local plr = game.Players.LocalPlayer
		if plr.Character:FindFirstChildOfClass('Tool') then
			local tool = plr.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if args[1] and tonumber(args[1]) then
					local req = require(tool.GunStates)
					req.FireRate = tonumber(args[1])
					log('[Logs]: Set fire rate for '..tool.Name..' to '..args[1])
				else log('[Logs]: Input a valid number') end
			else log('[Logs]: Equip a gun before using this command') end
		else log('[Logs]: Equip a gun before using this command') end
	elseif cmd == 'autofire' or cmd == 'rapidfire' then
		local plr = game.Players.LocalPlayer
		if plr.Character:FindFirstChildOfClass('Tool') then
			local tool = plr.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				local req = require(tool.GunStates)
				req.FireRate = 0
				req.AutoFire = true
				log('[Logs]: Made '..tool.Name..' rapid fire')
			else log('[Logs]: Equip a gun before using this command') end
		else log('[Logs]: Equip a gun before using this command') end
	elseif cmd == 'modgun' or cmd == 'supergun' then
		local plr = game.Players.LocalPlayer
		if plr.Character:FindFirstChildOfClass('Tool') then
			local tool = plr.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if not GunsAutoModded[tool.Name] then
					repeat wait(.1)
						if game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) then
							local tool = game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) 
							local req = require(tool.GunStates)
							if tool.Name == 'Remington 870' then
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = 0.225
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							else
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = -math.huge
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							end
							if req.CurrentAmmo <= 0 then
								tool.Handle:Destroy()
								repeat wait(.1) until not tool:FindFirstChild('Handle')
								tool.Parent = game.Players.LocalPlayer.Character
								tool:Destroy()
								workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
								tool = game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name)
								tool.Parent = game.Players.LocalPlayer.Character
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = -math.huge
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							end
						end
					until not GunsAutoModded[tool.Name]
					log('[Logs]: Enabled gun mods for '..tool.Name)
				else log('[Logs]: Already enabled gun mods for '..tool.Name) end
			else log('[Logs]: Equip a gun before using this command') end
		else log('[Logs]: Equip a gun before using this command') end
	elseif cmd == 'unmodgun' or cmd == 'unsupergun'  then
		local plr = game.Players.LocalPlayer
		if plr.Character:FindFirstChildOfClass('Tool') then
			local tool = plr.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if GunsAutoModded[tool.Name] then
					GunsAutoModded[tool.Name] = nil
					tool.Handle:Destroy()
					local toolPar = tool.Parent
					repeat wait(.1) until not tool:FindFirstChild('Handle')
					tool.Parent = plr.Character
					tool:Destroy()				
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
					plr.Backpack[tool.Name].Parent = toolPar
					log('[Logs]: Disabled gun mods for '..tool.Name)
				else log('[Logs]: Already disabled gun mods for '..tool.Name) end
			else log('[Logs]: Equip a gun before using this command') end
		else log('[Logs]: Equip a gun before using this command') end
	elseif cmd == 'automodguns' or cmd == 'autosuperguns' then
		if not Toggles.AutoModGuns then
			local plr = game.Players.LocalPlayer
			Toggles.AutoModGuns = true
			log('[Logs]: Enabled auto mod guns')
			spawn(function()
				if plr.Character:FindFirstChildOfClass('Tool') and plr.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then
					local tool = plr.Character:FindFirstChildOfClass('Tool')
					if not GunsAutoModded[tool.Name] then
						GunsAutoModded[tool.Name] = true
						repeat wait(.1)
							if game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) then
								local tool = game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) 
								local req = require(tool.GunStates)
								if tool.Name == 'Remington 870' then
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = 0.225
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								else
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = -math.huge
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								end
								if req.CurrentAmmo <= 0 then
									tool.Handle:Destroy()
									repeat wait(.1) until not tool:FindFirstChild('Handle')
									tool.Parent = game.Players.LocalPlayer.Character
									tool:Destroy()
									workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
									tool = game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name)
									tool.Parent = game.Players.LocalPlayer.Character
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = -math.huge
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								end
							end
						until not GunsAutoModded[tool.Name] or not Toggles.AutoModGuns
					end
				end
			end)
			repeat wait(.1)
				for _, tool in pairs(plr.Backpack:GetChildren()) do
					if tool:FindFirstChild('GunStates') and not GunsAutoModded[tool.Name] then
						GunsAutoModded[tool.Name] = true
						spawn(function()
							repeat wait(.1)
								if game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) then
									local tool = game.Players.LocalPlayer.Character:FindFirstChild(tool.Name) or game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name) 
									local req = require(tool.GunStates)
									if tool.Name == 'Remington 870' then
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = 0.225
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									else
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = -math.huge
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									end
									if req.CurrentAmmo <= 0 then
										tool.Handle:Destroy()
										repeat wait(.1) until not tool:FindFirstChild('Handle')
										tool.Parent = game.Players.LocalPlayer.Character
										tool:Destroy()
										workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
										tool = game.Players.LocalPlayer.Backpack:FindFirstChild(tool.Name)
										tool.Parent = game.Players.LocalPlayer.Character
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = -math.huge
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									end
								end
							until not GunsAutoModded[tool.Name] or not Toggles.AutoModGuns
						end)
					end
				end
			until not Toggles.AutoModGuns
		else log('[Logs]: Already enabled auto mod guns') end
	elseif cmd == 'unautomodguns' or cmd == 'unautosuperguns' then
		if Toggles.AutoModGuns then
			Toggles.AutoModGuns = false
			GunsAutoModded = {}
			local plr = game.Players.LocalPlayer
			if plr.Character:FindFirstChildOfClass('Tool') and plr.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then
				local tool = plr.Character:FindFirstChildOfClass('Tool')
				tool.Handle:Destroy()
				local toolPar = tool.Parent
				repeat wait(.1) until not tool:FindFirstChild('Handle')
				tool.Parent = plr.Character
				tool:Destroy()				
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
				plr.Backpack[tool.Name].Parent = toolPar
			end
			for _, tool in pairs(plr.Backpack:GetChildren()) do
				if tool:FindFirstChild('GunStates') then
					tool.Handle:Destroy()
					local toolPar = tool.Parent
					repeat wait(.1) until not tool:FindFirstChild('Handle')
					tool.Parent = plr.Character
					tool:Destroy()				
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
					plr.Backpack[tool.Name].Parent = toolPar
				end
			end
			log('[Logs]: Disabled auto mod guns')
		else log('[Logs]: Already disabled auto mod guns') end
	elseif cmd == 'gate' or cmd == 'frontgate' then
		local dest = CFrame.new(492.763, 98.039917, 2216.74878)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the gate')
			else log('[Logs]: Failed to teleport to the gate') end
		else log('[Logs]: Already teleported to the gate') end
	elseif cmd == 'opengate' or cmd == 'openfrontgate' then
		if not Toggles.GateOpen then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons['Prison Gate']['Prison Gate'])
			spawn(function()
				Toggles.GateOpen = true
				wait(13)
				Toggles.GateOpen = false
			end)
			log('[Logs]: Opened gate')
		else log('[Logs]: Already opened gate') end
	elseif cmd == 'gateroom' then
		local dest = CFrame.new(504.324646, 102.039917, 2246.05103)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to gate room')
			else log('[Logs]: Failed to teleport to the gate room') end
		else log('[Logs]: Already teleported to the gate room') end
	elseif cmd == 'gatetower' then
		local dest =  CFrame.new(502.72168, 125.039917, 2321.00098)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to gate tower')
			else log('[Logs]: Failed to teleport to the gate tower') end
		else log('[Logs]: Already teleported to the gate tower') end
	elseif cmd == 'tower' then
		local dest = CFrame.new(823.014832, 130.039886, 2589.46802)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the tower')
			else log('[Logs]: Failed to teleport to the tower') end
		else log('[Logs]: Already teleported to the tower') end
	elseif cmd == 'yard' then
		local dest = CFrame.new(780.596985, 97.9999237, 2468.43457)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the yard')
			else log('[Logs]: Failed to teleport to the yard') end
		else log('[Logs]: Already teleported to the yard') end
	elseif cmd == 'armory' or cmd == 'guardroom' then
		local dest = CFrame.new(836.632568, 99.9899826, 2260.18994)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the armory')
			else log('[Logs]: Failed to teleport to the armory') end
		else log('[Logs]: Already teleported to the armory') end
	elseif cmd == 'nexus' or cmd == 'prison' then
		local dest = CFrame.new(915.108398, 99.9899826, 2378.2648)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the nexus')
			else log('[Logs]: Failed to teleport to the nexus') end
		else log('[Logs]: Already teleported to the nexus') end
	elseif cmd == 'backnexus' then
		local dest = CFrame.new(980.860535, 99.9899826, 2316.87769)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the back of the nexus')
			else log('[Logs]: Failed to teleport to the back of the nexus') end
		else log('[Logs]: Already teleported to the back of the nexus') end
	elseif cmd == 'sewer' or cmd == 'sewers' then
		local dest = CFrame.new(916.570679, 78.7003937, 2323.39136)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the sewers')
			else log('[Logs]: Failed to teleport to the sewers') end
		else log('[Logs]: Already teleported to the back of the sewers') end
	elseif cmd == 'cafeteria' or cmd == 'cafe' then
		local dest = CFrame.new(919.365601, 99.9899368, 2285.1748)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the cafeteria')
			else log('[Logs]: Failed to teleport to the cafeteria') end
		else log('[Logs]: Already teleported to the cafeteria') end
	elseif cmd == 'roof' then
		local dest = CFrame.new(917.232056, 139.926025, 2314.79761)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the roof')
			else log('[Logs]: Failed to teleport to the roof') end
		else log('[Logs]: Already teleported to the roof') end
	elseif cmd == 'crimbase' or cmd == 'criminalbase' or cmd == 'base' then
		local dest = CFrame.new(-943.724854, 94.1287613, 2064.69312)
		if game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position ~= dest.Position then
			pcall(function() 
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = dest
			end)
			if game.Players.LocalPlayer.Character.Head.CFrame.X == game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X then
				log('[Logs]: Teleported to the criminal base')
			else log('[Logs]: Failed to teleport to the criminal base') end
		else log('[Logs]: Already teleported to the criminal base') end
	elseif cmd == 'antivoid' or cmd == 'antifall' then
		if not Toggles.AntiVoid then
			Toggles.AntiVoid = true
			log('[Logs]: Enabled anti void')
			local plr = game.Players.LocalPlayer
			repeat wait(.1)
				if plr:FindFirstChild('Character') and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character.umanoidRootPart.Position.Y < 1 then
					local plrCF = plrDetails()[1]
					plr.Character.HumanoidRootPart.CFrame = CFrame.new(780.596985, 97.9999237, 2468.43457)
				end
			until not Toggles.AntiVoid
		else log('[Logs]: Already enabled anti void') end
	elseif cmd == 'unantivoid' or cmd == 'unantifall' then
		if Toggles.AntiVoid then
			Toggles.AntiVoid = false
			log('[Logs]: Disabled anti void')
		else log('[Logs]: Already disabled anti void') end
	elseif cmd == 'rejoin' or cmd == 'rj' then
		log('[Logs]: Rejoining server')
		notif('Rejoining server...')
		TeleportService:Teleport(game.PlaceId, game.Players.LocalPlayer)
	elseif cmd == 'serverhop' or cmd == 'shop' then
		log('[Logs]: Joining new server')
		notif('Joining new server...')
		local httprequest =  (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
		if httprequest then
			local servers = {}
			local req = httprequest({Url = string.format('https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100', game.PlaceId)})
			local body = HttpService:JSONDecode(req.Body)
			if body and body.data then
				for i, v in next, body.data do
					if type(v) == 'table' and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
						table.insert(servers, 1, v.id)
					end 
				end
			end
			if #servers > 0 then
				TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
			else
				log('[Logs]: Failed to server hop')
				notif('Failed to server hop')
			end
		else TeleportService:Teleport(game.PlaceId) end
	elseif cmd == 'prefix' or cmd == 'setprefix' then
		if args[1] then
			if prefix ~= args[1] then
				prefix = args[1]
				_G.settings.prefix = args[1]
				save()
				if ChatCmd then CmdBar.PlaceholderText = 'Command Bar ('..args[1]..')' end
				log('[Logs]: Set prefix to '..args[1])
			else log('[Logs]: Already set prefix to '..args[1]) end
		else 
			log('[Logs]: Prefix is '..prefix)
			notif('Prefix is '..prefix)
		end
	elseif cmd == 'notify' or cmd == 'notif' then
		if not notifs then
			notifs = true
			_G.settings.notifs = true
			save()
			log('[Logs]: Enabled notifications')
			notif('Enabled notifications')
		else log('[Logs]: Already enabled notifications') end
	elseif cmd == 'unnotify' or cmd == 'unnotif' then
		if not notifs then
			notif('Disabled notifications')
			notifs = false
			_G.settings.notifs = false
			save()
			log('[Logs]: Disabled notifications')
		else log('[Logs]: Already disabled notifications') end
	elseif cmd == 'chatcmd' then
		if not ChatCmd then
			ChatCmd = true
			_G.settings.ChatCmd = true
			save()
			CmdBar.PlaceholderText = 'Command Bar ('..prefix..')'
			log('[Logs]: Enabled chat commands')
			notif('Enabled chat commands')
		else log('[Logs]: Already enabled chat commands') end
	elseif cmd == 'unchatcmd' or cmd == 'nochatcmd' then
		if ChatCmd then
			notif('Disabled notifications')
			ChatCmd = false
			_G.settings.ChatCmd = false
			save()
			CmdBar.PlaceholderText = 'Command Bar'
			log('[Logs]: Disabled chat commands')
			notif('Disabled chat commands')
		else log('[Logs]: Already disabled chat commands') end
	elseif cmd == 'logs' or cmd == 'notifications' or cmd == 'notifs' then
		toggleLogs(true)
	elseif cmd == 'nologs' or cmd == 'nonotifications' or cmd == 'nonotifs' then
		toggleLogs(false)
	elseif cmd == 'version' or cmd == 'ver' then
		if pcall(function() loadstring(game:HttpGet(('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/version'),true))() end) then
			if ver ~= _Version then
				notif('Please update: Current version: '..ver..', Updated version: '.._Version)
				log('[Logs]: Please update: Current version: '..ver..', Updated version: '.._Version)
			else 
				notif('Current version: '..ver)
				log('[Logs]: Current version: '..ver)
			end
		end
	elseif cmd == 'reloadgui' or cmd == 'reloadscript' then
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/source'),true))() 
	elseif cmd == 'destroygui' or cmd == 'destroyscript' then
		CmdGUI:Remove()
	end
end
--//vvv GUI FUNCTIONS vvv\\--
CmdBar.Changed:Connect(function()
	if CmdGUI.Parent ~= nil then
		if CmdBar.Text ~= '' then
			local args = string.split(CmdBar.Text, ' ')
			local cmd
			if args[2] then cmd = args[1] else cmd = CmdBar.Text end
			CmdHandler.CanvasPosition = canvasPos
			for _, v in pairs(CmdHandler:GetChildren()) do
				if v:IsA('TextButton') then
					if not string.find(string.lower(v.Text),string.lower(cmd)) then
						v.Visible = false
					else 
						if v.Visible == false then v.Visible = true end
					end
				end
			end
		else
			for _, v in pairs(CmdHandler:GetChildren()) do
				if v:IsA('TextButton') then
					if not v.Visible then
						v.Visible = true
					end
				end
			end
		end
	end
end)

CmdBar.FocusLost:Connect(function(_, __)
	if _ then 
		local args = string.split(CmdBar.Text, ' ')
		local cmd = args[1]:lower()
		table.remove(args, 1)
		CmdBar.Text = ''
		executeCmd(cmd, args)
	end
end)
--//vvv CHAT FUNCTIONS vvv\\--
local chatbox = game.WaitForChild(game.Players.LocalPlayer.PlayerGui, 'Chat').Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
local function chatboxEnter()
	if ChatCmd then
		local p = string.match(chatbox.Text, '^%s*(.)')
		if p == prefix then
			local txt = chatbox.Text:gsub('%'..prefix, ''):split(' ')[1]:lower()
			if txt ~= '' then
				CmdHandler.CanvasPosition = canvasPos
				for _, v in pairs(CmdHandler:GetChildren()) do
					if v:IsA('TextButton') then
						if not string.find(string.lower(v.Text),string.lower(txt)) then
							v.Visible = false
						else 
							if v.Visible == false then v.Visible = true end
						end
					end
				end
			else
				for _, v in pairs(CmdHandler:GetChildren()) do
					if v:IsA('TextButton') then
						if not v.Visible then
							v.Visible = true
						end
					end
				end
			end
		else 
			for _, v in pairs(CmdHandler:GetChildren()) do
				if v:IsA('TextButton') then
					if not v.Visible then
						v.Visible = true
					end
				end
			end
		end
	end
end
local chatenterfunc = chatbox.Focused:Connect(function()
	chatbox:GetPropertyChangedSignal('Text'):Connect(chatboxEnter)
end)

local function chatboxLeft()
	if ChatCmd then
		for _, v in pairs(CmdHandler:GetChildren()) do
			if v:IsA('TextButton') then
				if not v.Visible then
					v.Visible = true
				end
			end
		end
		return
	end
end
local chatleftfunc = chatbox.FocusLost:Connect(chatboxLeft)

local function executeChatCmd(d)
	if ChatCmd then
		local plr = game.Players:FindFirstChild(d.FromSpeaker)
		local c = d.Message
		if plr == game.Players.LocalPlayer then
			local p = string.match(c, '^%s*(.)')
			if p == prefix then
				local args = c:gsub('%'..prefix, ''):split(' ')
				local cmd = args[1]:lower()
				table.remove(args, 1)
				executeCmd(cmd, args)
			end
		end
	else return end
end
local chatexecutefunc = ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(executeChatCmd)

local destroygui
destroygui = CmdGUI:GetPropertyChangedSignal('Parent'):Connect(function()
	GunsAutoModded = {}
	PlrsLoopKilled = {}
	PlrsLoopTased = {}
	Toggles = {}
	ChatCmd = false
	pcall(function()
		chatenterfunc:Disconnect()
		chatleftfunc:Disconnect()
		chatexecutefunc:Disconnect()
		dragging:Disconnect()
	end)
	CmdGUI:Destroy()
	destroygui:Disconnect()
end)
