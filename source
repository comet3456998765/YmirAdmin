---//vvv SERVICES vvv\\---
local ver = '2.4.0'
local fag = game.Players.LocalPlayer
local UserInputService = game:GetService('UserInputService')
local RunService = (game:GetService('RunService'));
local CoreGui = game:GetService('CoreGui')
local HttpService = game:GetService('HttpService')
local TweenService = game:GetService('TweenService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local TeleportService = game:GetService('TeleportService')

local Functions = {}
local function addFunction(func) table.insert(Functions, func) end

local function ls(s)
	loadstring(game:HttpGet((s), true))()
end
---//vvv INSTANCES vvv\\---
local CmdGUI = Instance.new('ScreenGui')
CmdGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
CmdGUI.Name = 'YmirAdmin_GUI'
local par
if get_hidden_gui or gethui then
	local hiddenui = get_hidden_gui or gethui
	par = hiddenui()
elseif CoreGui:FindFirstChild('RobloxGui')then
	par = CoreGui.RobloxGui
else
	if (not is_sirhurt_closure) and (syn and syn.protect_gui) then syn.protect_gui(CmdGUI) end
	par = CoreGui
end

local CmdMain = Instance.new('Frame')
CmdMain.Name = 'YmirAdmin_Main'
CmdMain.Parent = CmdGUI
CmdMain.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdMain.BorderColor3 = Color3.fromRGB(31, 31, 31)
CmdMain.BorderSizePixel = 0
CmdMain.Position = UDim2.new(0.5, 0, 0.5, 0)
CmdMain.Size = UDim2.new(0,0,0,0)
CmdMain.AnchorPoint = Vector2.new(0.5, 0.5)

local CmdBox = Instance.new('Frame')
CmdBox.Name = 'YmirAdmin_Box'
CmdBox.Parent = CmdMain
CmdBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdBox.BorderColor3 = Color3.fromRGB(140, 140, 140)
CmdBox.BorderSizePixel = 0
CmdBox.Position = UDim2.new(0, 0, 0.632000029, 0)
CmdBox.Size = UDim2.new(0.996109784, 0, 0.36981371, 0)
CmdBox.Visible = false

local CmdNotif = Instance.new('TextLabel')
CmdNotif.Name = 'YmirAdmin_NotifText'
CmdNotif.Parent = CmdBox
CmdNotif.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdNotif.BackgroundTransparency = 1.000
CmdNotif.Position = UDim2.new(0.0128824329, 0, 0.201365471, 0)
CmdNotif.Size = UDim2.new(0.986970961, 0, 0.820274472, 0)
CmdNotif.Visible = false
CmdNotif.ZIndex = 10
CmdNotif.Font = Enum.Font.SourceSans
CmdNotif.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdNotif.TextSize = 14.000
CmdNotif.TextWrapped = true

local CmdLogHandler = Instance.new('ScrollingFrame')
CmdLogHandler.Name = 'YmirAdmin_LogHandler'
CmdLogHandler.Parent = CmdBox
CmdLogHandler.Active = true
CmdLogHandler.Visible = false
CmdLogHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdLogHandler.BorderSizePixel = 0
CmdLogHandler.Position = UDim2.new(0.0331288725, 0, 0.207801834, 0)
CmdLogHandler.Size = UDim2.new(0.966870666, 0, 0.785972178, 0)
CmdLogHandler.CanvasSize = UDim2.new(0.1, 0, 0.1, 0)
CmdLogHandler.AutomaticCanvasSize = 'Y'
CmdLogHandler.ScrollingDirection = 'Y'
CmdLogHandler.ScrollBarThickness = 6

local CmdLogExample = Instance.new('TextLabel')
CmdLogExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdLogExample.BackgroundTransparency = 1.000
CmdLogExample.Size = UDim2.new(0.928425848, 0, 0.14037393, 0)
CmdLogExample.Font = Enum.Font.SourceSans
CmdLogExample.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdLogExample.TextSize = 14.000
CmdLogExample.TextWrapped = true
CmdLogExample.TextXAlignment = Enum.TextXAlignment.Left
CmdLogExample.AutomaticSize = 'Y'

local CmdBoxTitle = Instance.new('TextLabel')
CmdBoxTitle.Name = 'YmirAdmin_BoxTitle'
CmdBoxTitle.Parent = CmdBox
CmdBoxTitle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdBoxTitle.Position = UDim2.new(0.0128824329, 0, 0, 0)
CmdBoxTitle.Size = UDim2.new(0.987117469, 0, 0.207801759, 0)
CmdBoxTitle.Font = Enum.Font.SourceSansBold
CmdBoxTitle.Text = 'Logs'
CmdBoxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdBoxTitle.TextSize = 14.000

local CmdHandler = Instance.new('ScrollingFrame')
CmdHandler.Name = 'YmirAdmin_CmdHandler'
CmdHandler.Parent = CmdMain
CmdHandler.Active = true
CmdHandler.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
CmdHandler.BorderSizePixel = 0
CmdHandler.Position = UDim2.new(0.0299999993, 0, 0.207689703, 0)
CmdHandler.Size = UDim2.new(0, 194, 0, 213)
CmdHandler.CanvasSize = UDim2.new(0, 0, 0, 0)
CmdHandler.AutomaticCanvasSize = 'Y'
CmdHandler.ScrollingDirection = 'Y'
CmdHandler.Visible = false

local CmdExample = Instance.new('TextButton')
CmdExample.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdExample.BackgroundTransparency = 1.000
CmdExample.Size = UDim2.new(0, 194, 0, 18)
CmdExample.ZIndex = 10
CmdExample.Font = Enum.Font.SourceSans
CmdExample.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdExample.TextSize = 14.000
CmdExample.TextXAlignment = Enum.TextXAlignment.Left

local CmdBar = Instance.new('TextBox')
CmdBar.Name = 'YmirAdmin_CmdBar'
CmdBar.Parent = CmdMain
CmdBar.BackgroundColor3 = Color3.fromRGB(53, 53, 53)
CmdBar.BorderSizePixel = 0
CmdBar.Position = UDim2.new(0.0299999993, 0, 0.0876345932, 0)
CmdBar.Size = UDim2.new(0, 187, 0, 22)
CmdBar.Font = Enum.Font.SourceSans
CmdBar.PlaceholderText = 'Command Bar'
CmdBar.Text = ''
CmdBar.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdBar.TextSize = 14.000
CmdBar.TextXAlignment = Enum.TextXAlignment.Left
CmdBar.ClearTextOnFocus = false
CmdBar.Visible = false
CmdBar.BackgroundTransparency = 1
CmdBar.TextTransparency = 1

local CmdTitle = Instance.new('TextLabel')
CmdTitle.Name = 'YmirAdmin_Title'
CmdTitle.Parent = CmdMain
CmdTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdTitle.BackgroundTransparency = 1.000
CmdTitle.Size = UDim2.new(0, 200, 0, 23)
CmdTitle.Font = Enum.Font.SourceSansBold
CmdTitle.Text = 'Ymir Admin '..ver
CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdTitle.TextSize = 14.000
CmdTitle.TextTransparency = 1

local CmdDescBox = Instance.new('Frame')
CmdDescBox.Name = 'YmirAdmin_DescBox'
CmdDescBox.Parent = CmdMain
CmdDescBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
CmdDescBox.BackgroundTransparency = 0.2500
CmdDescBox.Position = UDim2.new(-0.00237113237, 0, 0.307555377, 0)
CmdDescBox.Size = UDim2.new(0, 194, 0, 71)
CmdDescBox.Visible = false

local CmdDescTitle = Instance.new('TextLabel')
CmdDescTitle.Name = 'YmirAdmin_DescTitle'
CmdDescTitle.Parent = CmdDescBox
CmdDescTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdDescTitle.BackgroundTransparency = 1.000
CmdDescTitle.Size = UDim2.new(0, 191, 0, 23)
CmdDescTitle.Font = Enum.Font.SourceSansBold
CmdDescTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdDescTitle.TextSize = 13.500

local CmdDescription = Instance.new('TextLabel')
CmdDescription.Name = 'YmirAdmin_Description'
CmdDescription.Parent = CmdDescBox
CmdDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CmdDescription.BackgroundTransparency = 1.000
CmdDescription.Position = UDim2.new(0, 0, 0.324, 0)
CmdDescription.Size = UDim2.new(0, 191, 0, 48)
CmdDescription.ZIndex = 10
CmdDescription.Font = Enum.Font.SourceSans
CmdDescription.Text = ''
CmdDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
CmdDescription.TextSize = 14.000
CmdDescription.TextWrapped = true

Instance.new('UIListLayout', CmdLogHandler).SortOrder = Enum.SortOrder.LayoutOrder
Instance.new('UIListLayout', CmdHandler).SortOrder = Enum.SortOrder.LayoutOrder
--//vvv SAVE AND LOAD vvv\\--
_G.settings = {
	prefix = '.',
	ChatCmd = true,
	notifs = true,
	logsOpen = false,
	mainPos = {x1 = CmdMain.Position.X.Scale, x2 = CmdMain.Position.X.Offset, x3 = CmdMain.Position.Y.Scale, x4 = CmdMain.Position.Y.Offset},
	KillTool = 'AK-47',
	Whitelisted = {}
}
local file = 'YmirAdminSettings.pl'
local function load()
	if (readfile and isfile and isfile(file)) then
		_G.settings = HttpService:JSONDecode(readfile(file))
	end
end

local function save()
	spawn(function()
		local json
		if (writefile) then
			json = HttpService:JSONEncode(_G.settings)
			writefile(file, json)
		end
	end)
end

load()
wait()
local prefix = _G.settings.prefix
local ChatCmd = _G.settings.ChatCmd
local notifs = _G.settings.notifs
local logsOpen = _G.settings.logsOpen
local mainPos =  _G.settings.mainPos
CmdMain.Position =  UDim2.new(mainPos.x1, mainPos.x2, mainPos.x3, mainPos.x4)
if ChatCmd then
	CmdBar.PlaceholderText = 'Command Bar ('..prefix..')'
end
---//vvv DESTROY CLONES vvv\\---
local introSpeed = 0.2
local reload = false
if par:FindFirstChild('YmirAdmin_GUI') then
	reload = true 
	local oldGUI = par['YmirAdmin_GUI']
	if not oldGUI[CmdMain.Name][CmdBox.Name].Visible then 
		oldGUI[CmdMain.Name][CmdBox.Name]:GetPropertyChangedSignal('Visible'):Wait()
	end
	local oldMain = oldGUI[CmdMain.Name]
	CmdMain.Position = oldMain.Position
	CmdMain.Size = oldMain.Size
	local oldHandler = oldMain[CmdHandler.Name]
	CmdHandler.CanvasPosition = oldHandler.CanvasPosition
	local oldBox = oldMain[CmdBox.Name]
	CmdBox.Position = oldBox.Position
	local oldNotif = oldBox[CmdNotif.Name]
	CmdNotif.Visible = oldNotif.Visible
	local oldNotifHandler = oldBox[CmdLogHandler.Name]:Clone()
	CmdLogHandler:Destroy()
	oldNotifHandler.Parent = CmdBox
	CmdLogHandler = oldNotifHandler
	CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y)
	oldGUI:Destroy()
	CmdGUI.Parent = par
	CmdHandler.Visible = true
	CmdBox.Visible = true
	CmdBar.Visible = true
	CmdTitle.TextTransparency = 0
	CmdBar.TextTransparency = 0
	CmdBar.BackgroundTransparency = 0
else --//vvv INTRO vvv\\---
	CmdGUI.Parent = par
	local f1 = TweenService:Create(CmdMain, TweenInfo.new(), {Size = UDim2.new(0, 200, 0, 269)})
	f1:Play()
	f1.Completed:Wait()
	wait(.1)
	local f2 = TweenService:Create(CmdTitle, TweenInfo.new(introSpeed), {TextTransparency = 0})
	f2:Play()
	f2.Completed:Wait()
	wait(.1)
	CmdBar.Visible = true
	local f3 = TweenService:Create(CmdBar, TweenInfo.new(introSpeed), {BackgroundTransparency = 0})
	local f4 = TweenService:Create(CmdBar, TweenInfo.new(introSpeed), {TextTransparency = 0})
	f3:Play()
	f4:Play()
	f4.Completed:Wait()
	wait(.1)
	CmdHandler.Visible = true
	CmdBox.Visible = true
end
---//vvv VARIABLES vvv\\---
local notified = false
---//vvv COMMAND LOGGING vvv\\---
local function notif(txt, notimer)
	if notifs and not logsOpen then
		local counter = 0
		CmdNotif.Visible = true
		CmdLogHandler.Visible = false
		if not notified then
			CmdNotif.Text = txt
			if not notimer then wait(0.5) end
			notified = true
			local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)})
			tween:Play()
			notified = true
			tween.Completed:Wait()
			wait(3)
			if not logsOpen then
				tween = TweenService:Create(CmdMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
				tween:Play()
				notified = false
			end
		else 
			local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
			tween:Play()
			notified = false
			tween.Completed:Wait()
			CmdNotif.Text = txt
			tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In), {Position = UDim2.new(0.967000008, 0, 0.632000029, 0)})
			tween:Play()
			notified = true
			tween.Completed:Wait()
			wait(3)
			if not logsOpen then
				tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0.632000029, 0)})
				tween:Play()
				notified = false
			end
		end
	end
end


local function log(txt)
	spawn(function()
		local clone = CmdLogExample:Clone()
		clone.Text = txt
		clone.Name = 'Log'
		clone.TextTransparency = 1
		clone.Parent = CmdLogHandler
		CmdLogHandler.CanvasPosition = Vector2.new(0, CmdLogHandler.AbsoluteCanvasSize.Y)
		local f = TweenService:Create(clone, TweenInfo.new(introSpeed), {TextTransparency = 0})
		f:Play()
	end)
end

local function toggleLogs(tog)
	_G.settings.logsOpen = tog
	save()
	if tog then
		logsOpen = true
		CmdLogHandler.Visible = true
		CmdBox:TweenPosition(UDim2.new(1, 0, 0.632000029, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5)
	else
		logsOpen = false
		local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingDirection.In, Enum.EasingStyle.Quart, 0.5), {Position = UDim2.new(0, 0, 0.632000029, 0)})
		tween:Play()
		tween.Completed:Wait()
		CmdLogHandler.Visible = false
	end
	CmdNotif.Visible = false
end
---//vvv GUI DRAGGING vvv\\---
local dragging
local dragInput
local dragStart
local startPos
local lastMousePos
local lastGoalPos

local function Lerp(a, b, m)
	return a + (b - a) * m
end;

local function Update(dt)
	if not (startPos) then return end;
	if not (dragging) and (lastGoalPos) then
		CmdMain.Position = UDim2.new(startPos.X.Scale, Lerp(CmdMain.Position.X.Offset, lastGoalPos.X.Offset, dt * 8), startPos.Y.Scale, Lerp(CmdMain.Position.Y.Offset, lastGoalPos.Y.Offset, dt * 8))
		_G.settings.mainPos = {x1 = CmdMain.Position.X.Scale, x2 = CmdMain.Position.X.Offset, x3 = CmdMain.Position.Y.Scale, x4 = CmdMain.Position.Y.Offset}
		save()
		return 
	end;

	local delta = (lastMousePos - UserInputService:GetMouseLocation())
	local xGoal = (startPos.X.Offset - delta.X);
	local yGoal = (startPos.Y.Offset - delta.Y);
	lastGoalPos = UDim2.new(startPos.X.Scale, xGoal, startPos.Y.Scale, yGoal)
	CmdMain.Position = UDim2.new(startPos.X.Scale, Lerp(CmdMain.Position.X.Offset, xGoal, dt * 8), startPos.Y.Scale, Lerp(CmdMain.Position.Y.Offset, yGoal, dt * 8))
end;

addFunction(CmdMain.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = CmdMain.Position
		lastMousePos = UserInputService:GetMouseLocation()

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end))

addFunction(CmdMain.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end))

addFunction(RunService.Heartbeat:Connect(Update))
---//vvv COMMANDS vvv\\---
local Cmd = {}
Cmd[#Cmd + 1] = {Name='whitelist / wl <plr>',Desc='Whitelist the player from getting tased/killed/arrested and etc.'}
Cmd[#Cmd + 1] = {Name='unwhitelist / unwl <plr>',Desc='Unwhitelists the player'}
Cmd[#Cmd + 1] = {Name='getwhitelist / getwl',Desc='Logs whitelisted players in the current server'}
Cmd[#Cmd + 1] = {Name='tase / taze <plr / team / all>',Desc='Tases the player/team/all if you choose one of them'}
Cmd[#Cmd + 1] = {Name='looptase / looptaze <plr / team / all>',Desc='Loop tases the player/team/all if you choose one of them'}
Cmd[#Cmd + 1] = {Name='unlooptase / unlooptaze <plr / team / all>',Desc='Disables loop tasing the player/team/all if you choose one of them'}
Cmd[#Cmd + 1] = {Name='clearlooptase / clearlooptaze',Desc='Removes all loop tases'}
Cmd[#Cmd + 1] = {Name='arrest <plr / all>',Desc='Arrests the player or all criminals if you choose all'}
Cmd[#Cmd + 1] = {Name='clickarrest',Desc="Arrests the player you click if you're near them"}
Cmd[#Cmd + 1] = {Name='noclickarrest / unclickarrest',Desc='Disables click arrest'}
Cmd[#Cmd + 1] = {Name='spamarrest <plr>',Desc='Spam arrests the player (Causes lag)'}
Cmd[#Cmd + 1] = {Name='unspamarrest [plr]',Desc='Stops spam arresting'}
Cmd[#Cmd + 1] = {Name='arrestaura',Desc='Arrests everyone who is near you'}
Cmd[#Cmd + 1] = {Name='noarrestaura / unarrestaura',Desc='Disables arrest aura'}
Cmd[#Cmd + 1] = {Name='killtool / killgun <gun>',Desc='Set the gun that you will use for killing players via command'}
Cmd[#Cmd + 1] = {Name='kill <plr / team / enemies / all>',Desc='Kills the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='loopkill / lk <plr / team / enemies / all>',Desc='Loop kills the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='unloopkill / unlk <plr / team / enemies / all>',Desc='Disables loop killing the player/team/all/enemies if you choose one of them'}
Cmd[#Cmd + 1] = {Name='clearloopkill / clearloopkills',Desc='Removes all loop kills'}
Cmd[#Cmd + 1] = {Name='clickkill',Desc='Kills the player you click'}
Cmd[#Cmd + 1] = {Name='noclickkill / unclickkill',Desc='Disables click kill'}
Cmd[#Cmd + 1] = {Name='killaura / aura',Desc='Kills everyone who is near you'}
Cmd[#Cmd + 1] = {Name='nokillaura / noaura',Desc='Disables kill aura'}
Cmd[#Cmd + 1] = {Name='inmate / inmates',Desc='Join the inmate team'}
Cmd[#Cmd + 1] = {Name='guard / guards',Desc='Join the guard team'}
Cmd[#Cmd + 1] = {Name='criminal / crim [plr / all]',Desc='Join the criminal team, make player a criminal or all players if you choose all'}
Cmd[#Cmd + 1] = {Name='neutral / neutrals',Desc='Join the neutral team'}
Cmd[#Cmd + 1] = {Name='red',Desc='Join the custom red team'}
Cmd[#Cmd + 1] = {Name='orange',Desc='Join the custom orange team'}
Cmd[#Cmd + 1] = {Name='yellow',Desc='Join the custom yellow team'}
Cmd[#Cmd + 1] = {Name='green',Desc='Join the custom green team'}
Cmd[#Cmd + 1] = {Name='blue',Desc='Join the custom blue team'}
Cmd[#Cmd + 1] = {Name='purple',Desc='Join the custom purple team'}
Cmd[#Cmd + 1] = {Name='pink',Desc='Join the custom pink team'}
Cmd[#Cmd + 1] = {Name='white',Desc='Join the custom white team'}
Cmd[#Cmd + 1] = {Name='grey',Desc='Join the custom grey team'}
Cmd[#Cmd + 1] = {Name='brown',Desc='Join the custom brown team'}
Cmd[#Cmd + 1] = {Name='black',Desc='Join the custom black team'}
Cmd[#Cmd + 1] = {Name='makecriminal / makecrim <plr / all>',Desc='Makes player join the criminal team or all players if you choose all'}
Cmd[#Cmd + 1] = {Name='lag <duration>',Desc='Lags for an amount of time'}
Cmd[#Cmd + 1] = {Name='unlag',Desc='Stops lag'}
Cmd[#Cmd + 1] = {Name='crash / crashserver',Desc='Lags and crashes the server'}
Cmd[#Cmd + 1] = {Name='uncrash / uncrashserver',Desc="Stops crashing the server"}
Cmd[#Cmd + 1] = {Name='fpslag / lagspike',Desc="Makes all players' FPS decrease (Requires SWAT gamepass)"}
Cmd[#Cmd + 1] = {Name='unfpslag / unlagspike',Desc='Stops FPS spiking'}
Cmd[#Cmd + 1] = {Name='infstamina',Desc="Enables infinite stamina"}
Cmd[#Cmd + 1] = {Name='uninfstamina / noinfstamina',Desc='Disables infinite stamina'}
Cmd[#Cmd + 1] = {Name='earbang / earrape [intensity]',Desc='Makes the whole server except you hear a loud noise'}
Cmd[#Cmd + 1] = {Name='noearbang / noearrape',Desc='Disables earbang'}
Cmd[#Cmd + 1] = {Name='reset / oof',Desc='Reset your character'}
Cmd[#Cmd + 1] = {Name='respawn / res',Desc='Respawns you on a spawn location'}
Cmd[#Cmd + 1] = {Name='refresh / re',Desc='Respawns you on your old location'}
Cmd[#Cmd + 1] = {Name='autorefresh / autore',Desc='Automatically respawn on your old location when you die'}
Cmd[#Cmd + 1] = {Name='unautorefresh / unautore',Desc='Disables autorefresh'}
Cmd[#Cmd + 1] = {Name='god / godmode',Desc='Grants immunity via reanimation'}
Cmd[#Cmd + 1] = {Name='ungod / ungodmode',Desc='Disables god mode'}
Cmd[#Cmd + 1] = {Name='swatgod',Desc='Grants immunity by spamming swat vest (Guard team only and requires SWAT gamepass)'}
Cmd[#Cmd + 1] = {Name='unswatgod',Desc='Disables swat god mode'}
Cmd[#Cmd + 1] = {Name='goto / to <plr>',Desc='Teleports you to the player'}
Cmd[#Cmd + 1] = {Name='bring <plr / team / all>',Desc='Teleports the player/team/all/enemies to you if you choose one of them'}
Cmd[#Cmd + 1] = {Name='loopbring <plr>',Desc='Loop teleports the player to your position'}
Cmd[#Cmd + 1] = {Name='unloopbring [plr]',Desc='Stops loop bringing'}
Cmd[#Cmd + 1] = {Name='nodaycycle / alwaysday',Desc='Disables day cycle'}
Cmd[#Cmd + 1] = {Name='daycycle / unalwaysday',Desc='Enables day cycle'}
Cmd[#Cmd + 1] = {Name='showinventory / showinv',Desc='Shows inventory'}
Cmd[#Cmd + 1] = {Name='autoshowinventory / autoshowinv',Desc='Auto shows inventory'}
Cmd[#Cmd + 1] = {Name='unautoshowinventory / unautoshowinv',Desc='Disables auto show inventory'}
Cmd[#Cmd + 1] = {Name='view / spectate <plr>',Desc='Spectates the player'}
Cmd[#Cmd + 1] = {Name='unview / unspectate [plr]',Desc='Stops spectating'}
Cmd[#Cmd + 1] = {Name='fling <plr>',Desc='Flings the player'}
Cmd[#Cmd + 1] = {Name='loopfling <plr>',Desc='Loop flings the player'}
Cmd[#Cmd + 1] = {Name='unloopfling [plr]',Desc='Stops loopflinging'}
Cmd[#Cmd + 1] = {Name='antifling',Desc='Prevents you from being flinged'}
Cmd[#Cmd + 1] = {Name='unantifling',Desc='Disables antifling'}
Cmd[#Cmd + 1] = {Name='antitaser / taserbypass',Desc='Prevents you from being tased'}
Cmd[#Cmd + 1] = {Name='unantitaser / untaserbypass',Desc='Disables taser bypass'}
Cmd[#Cmd + 1] = {Name='antishield / antishields',Desc='Removes shields from other players'}
Cmd[#Cmd + 1] = {Name='unantishield / unantishields',Desc='Restores shields from other players'}
Cmd[#Cmd + 1] = {Name='fastpunch',Desc='Activates fast punching'}
Cmd[#Cmd + 1] = {Name='nofastpunch / slowpunch',Desc='Disables fast punching'}
Cmd[#Cmd + 1] = {Name='onepunch / oneshotpunch',Desc='Activates one punching'}
Cmd[#Cmd + 1] = {Name='unonepunch / unoneshotpunch',Desc='Disables one punching'}
Cmd[#Cmd + 1] = {Name='freepunch',Desc='Running or crawling will not affect punching'}
Cmd[#Cmd + 1] = {Name='unfreepunch / nofreepunch',Desc='Disables free punching'}
Cmd[#Cmd + 1] = {Name='superpunch / allpunch',Desc='Enables fast, free, and one punching'}
Cmd[#Cmd + 1] = {Name='nosuperpunch / noallpunch',Desc='Disables super punching'}
Cmd[#Cmd + 1] = {Name='dropitems',Desc='Drops a bunch of items by loop killing you'}
Cmd[#Cmd + 1] = {Name='undropitems',Desc='Disables item dropping'}
Cmd[#Cmd + 1] = {Name='keycard / key [plr]',Desc='Finds for key card or you spawn a key card and auto pick it up, or give keycard to a player'}
Cmd[#Cmd + 1] = {Name='findkeycard / findkey ',Desc='Finds for a key card'}
Cmd[#Cmd + 1] = {Name='unfindkeycard / unfindkey ',Desc='Stops finding for a key card'}
Cmd[#Cmd + 1] = {Name='crudeknife / knife',Desc='Adds crude knife to your backpack'}
Cmd[#Cmd + 1] = {Name='superknife / oneshotknife',Desc='Adds one shot knife to your backpack'}
Cmd[#Cmd + 1] = {Name='unsuperknife / normalknife',Desc='Disables one shot knife'}
Cmd[#Cmd + 1] = {Name='hammer',Desc='Adds hammer to your backpack'}
Cmd[#Cmd + 1] = {Name='baseballbat / bat',Desc='Adds one shot bat to your backpack'}
Cmd[#Cmd + 1] = {Name='m9 / pistol',Desc='Adds M9 to your backpack'}
Cmd[#Cmd + 1] = {Name='remington / shotgun',Desc='Adds Remington 870 to your backpack'}
Cmd[#Cmd + 1] = {Name='ak / ak47',Desc='Adds AK-47 to your backpack'}
Cmd[#Cmd + 1] = {Name='m4 / m4a1',Desc='Adds M4A1 to your backpack (Requires SWAT Gamepass)'}
Cmd[#Cmd + 1] = {Name='shield',Desc='Adds shield to your backpack (Requires SWAT Gamepass)'}
Cmd[#Cmd + 1] = {Name='gun / guns',Desc='Adds all possible guns to your backpack'}
Cmd[#Cmd + 1] = {Name='autogun / autoguns',Desc='Automatically adds all possible guns to your backpack'}
Cmd[#Cmd + 1] = {Name='unautogun / unautoguns',Desc='Disables autoguns'}
Cmd[#Cmd + 1] = {Name='oneshotgun',Desc='Makes your gun one shot'}
Cmd[#Cmd + 1] = {Name='firerate <num>',Desc="Changes the firerate of the gun you're holding"}
Cmd[#Cmd + 1] = {Name='autofire / rapidfire',Desc='Makes your gun shoot really fast'}
Cmd[#Cmd + 1] = {Name='modgun / supergun',Desc="Enables all gun mods for the gun you're holding"}
Cmd[#Cmd + 1] = {Name='unmodgun / unsupergun',Desc="Disables gun mods for the gun you're holding"}
Cmd[#Cmd + 1] = {Name='automodguns / autosuperguns',Desc='Auto enables all gun mods for all your guns'}
Cmd[#Cmd + 1] = {Name='unautomodguns / unautosuperguns',Desc='Disables auto gun mods'}
Cmd[#Cmd + 1] = {Name='gate / frontgate',Desc='Teleports you to the gate'}
Cmd[#Cmd + 1] = {Name='opengate / openfrontgate',Desc='Opens the gate'}
Cmd[#Cmd + 1] = {Name='gateroom',Desc='Teleports you in the gateroom'}
Cmd[#Cmd + 1] = {Name='gatetower',Desc='Teleports you to the tower beside the gate'}
Cmd[#Cmd + 1] = {Name='tower',Desc='Teleports you to the tower on yard'}
Cmd[#Cmd + 1] = {Name='yard',Desc='Teleports you to the yard'}
Cmd[#Cmd + 1] = {Name='armory / guardroom',Desc='Teleports you to the armory'}
Cmd[#Cmd + 1] = {Name='nexus / prison',Desc='Teleports you in the nexus'}
Cmd[#Cmd + 1] = {Name='backnexus',Desc='Teleports you in the back of the nexus'}
Cmd[#Cmd + 1] = {Name='sewer / sewers',Desc='Teleports you in the sewer'}
Cmd[#Cmd + 1] = {Name='cafeteria / cafe',Desc='Teleports you in the cafeteria'}
Cmd[#Cmd + 1] = {Name='roof',Desc='Teleports you to the roof'}
Cmd[#Cmd + 1] = {Name='neutralspawn',Desc='Teleports you to the neutral spawn'}
Cmd[#Cmd + 1] = {Name='criminalbase / crimbase',Desc='Teleports you in the criminal base'}
Cmd[#Cmd + 1] = {Name='antifall / antivoid',Desc='Teleports you above if you almost fall to the void'}
Cmd[#Cmd + 1] = {Name='unantifall / unantivoid',Desc='Disables antifall'}
Cmd[#Cmd + 1] = {Name='antiafk',Desc='Prevents you from being kicked for being AFK'}
Cmd[#Cmd + 1] = {Name='unantiafk',Desc='Disables anti-afk'}
Cmd[#Cmd + 1] = {Name='rejoin / rj',Desc='Rejoin the server'}
Cmd[#Cmd + 1] = {Name='serverhop / shop',Desc='Join a different server'}
Cmd[#Cmd + 1] = {Name='prefix / setprefix [text]',Desc='View or set prefix for commands'}
Cmd[#Cmd + 1] = {Name='chatcmd / enablechatcmd',Desc='Enable commands in chat'}
Cmd[#Cmd + 1] = {Name='nochatcmd / disablechatcmd',Desc='Disable commands in chat'}
Cmd[#Cmd + 1] = {Name='notifs / notifications',Desc='Enable notifications you whenever you use a command'}
Cmd[#Cmd + 1] = {Name='nonotifs / nonotifications',Desc='Disable notifications'}
Cmd[#Cmd + 1] = {Name='logs / openlogs',Desc='Open command logs'}
Cmd[#Cmd + 1] = {Name='nologs / closelogs',Desc='Minimize command logs'}
Cmd[#Cmd + 1] = {Name='version / ver',Desc='Checks for current version and updated version'}
Cmd[#Cmd + 1] = {Name='reload / reloadscript',Desc='Reloads script'}
Cmd[#Cmd + 1] = {Name='destroy / destroyscript',Desc='Destroys script'}

for i = 1, #Cmd do
	local clone = CmdExample:Clone()	
	clone.Text = Cmd[i].Name
	clone.Name = 'Cmd'
	local desc = Instance.new('StringValue', clone)
	desc.Name = 'Desc'
	desc.Value = Cmd[i].Desc
	clone.Parent = CmdHandler
	if Cmd[i].Disabled then
		local disabled = Instance.new('BoolValue', clone)
		disabled.Name = 'Disabled'
		disabled.Value = true
		clone.Text = clone.Text..' ⚠️'
		clone.TextColor3 = Color3.new(0.988235, 1, 0.176471)
	else 
		clone.MouseButton1Click:Connect(function()
			CmdBar:CaptureFocus()
			CmdBar.Text = clone.Text:split(' ')[1]
			CmdBar.CursorPosition = #CmdBar.Text + 1
		end)
	end
	if reload == false and i <= 11 then
		clone.TextTransparency = 1
		local f = TweenService:Create(clone, TweenInfo.new(introSpeed-0.05), {TextTransparency = 0})
		f:Play()
		f.Completed:Wait()
	end
end
local Mouse = fag:GetMouse()
addFunction(Mouse.Move:Connect(function()
	local Guis = CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y)
	local Gui
	for _, v in pairs(Guis) do
		if v.Parent == CmdHandler then
			Gui = v
		end
	end
	if Gui ~= nil then
		local X = Mouse.X - CmdMain.AbsolutePosition.X
		local Y = Mouse.Y - CmdMain.AbsolutePosition.Y
		if Mouse.X > 200 then
			X = X - 191
		end
		if Mouse.Y > (Mouse.ViewSizeY-96) then
			Y = Y - 57
		end
		CmdDescBox.Visible = true
		CmdDescBox.Position = UDim2.new(0, X, 0, Y)
		CmdDescTitle.Text = Gui.Text
		if Gui:FindFirstChild('Disabled') then
			CmdDescTitle.TextColor3 = Color3.new(0.988235, 1, 0.176471)
			CmdDescription.Text = 'Command is temporarily disabled until further notice.'
		else 
			CmdDescTitle.TextColor3 = Color3.new(1, 1, 1)
			CmdDescription.Text = Gui.Desc.Value
		end
	else
		CmdDescBox.Visible = false
	end
end))

CmdBar:ReleaseFocus()
CmdBar.Text = ''
if logsOpen then
	CmdLogHandler.Visible = true
	local tween = TweenService:Create(CmdBox, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, 0, 0.632000029, 0)})
	tween:Play()
	tween.Completed:Wait()
end
if reload then
	notif('Reloaded admin commands', true)
	log('[ ✅ ]: Reloaded admin commands')
else
	log('[ ✅ ]: Loaded admin commands')
end
--//vvv COMMAND FUNCTIONS vvv\\--
-- variables --
local LoopKilled = {}
local LoopTased = {}
local Whitelisted = _G.settings.Whitelisted 
local ModdedGuns = {}
local Toggles = {}
local Spectating = nil
local Bringing = nil
local Flinging = nil
local SpamArresting = nil
local KillTool = _G.settings.KillTool
local punchCooldown
local knifeCooldown 
local batCooldown
local SWAT = game:GetService('MarketplaceService'):UserOwnsGamePassAsync(fag.UserId, 96651)

local function plrName(plr)
	local name = plr.Name
	local disname = plr.DisplayName
	if name ~= disname then
		return name..' ('..disname..')'
	else return name end
end

local function getPlr(str)
	if not str then return end
	local str = string.lower(str)
	local plr
	local finding = true
	for _, Player in ipairs(game.Players:GetChildren()) do
		if finding then
			if string.lower(Player.Name):match('^'..str) or string.lower(Player.DisplayName):match('^'..str) then
				plr = Player
				finding = false
			end
		end
	end
	if plr then return plr else return nil end
end

local function getPos()
	return fag.Character.HumanoidRootPart.CFrame
end

local function getCam()
	return workspace.CurrentCamera.CFrame
end

local function getTeam()
	return fag.TeamColor.Name
end

local function goTo(plr, dis)
	pcall(function()
		local Distance = dis or CFrame.new(0,0,0)
		fag.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame*Distance
	end)
end

local function killPlr(plr)
	if not plr then return end
	pcall(function()
		if workspace:FindFirstChild(plr.Name) then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[KillTool].ITEMPICKUP)
			local tool = fag.Character:FindFirstChild(KillTool) or fag.Backpack:FindFirstChild(KillTool)
			local event = {
				[1] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [2] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [3] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [4] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [5] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [6] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [7] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [8] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [9] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				}, [10] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Head
				},
			}
			ReplicatedStorage.ShootEvent:FireServer(event, tool)
			tool.Handle:Destroy()
			tool.Parent = fag.Character
			tool:Destroy()
		else return end
	end)
end

local function tasePlr(plr)
	if not plr then return end
	pcall(function()
		if workspace:FindFirstChild(plr.Name) then
			local plrCF = getPos()
			local camCF = getCam()
			local team = getTeam()

			local tool = fag.Character:FindFirstChild('Taser') or fag.Backpack:FindFirstChild('Taser')
			if team ~= 'Bright blue' or not tool then
				repeat wait(.1) workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue') until getTeam() == 'Bright blue'
				fag.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
				tool = fag.Character:FindFirstChild('Taser') or fag.Backpack:FindFirstChild('Taser')
			end

			local event = {
				[1] = {
					['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
					['Distance'] = 0, 
					['Cframe'] = CFrame.new(), 
					['Hit'] = workspace[plr.Name].Torso
				}
			}
			ReplicatedStorage.ShootEvent:FireServer(event, tool)
			ReplicatedStorage.ReloadEvent:FireServer(tool)
		else return end
	end)
end

local function tasePlrs(plrs)
	if not plrs then return end
	pcall(function()
		local plrCF = getPos()
		local camCF = getCam()
		local team = getTeam()
		local tool = fag.Character:FindFirstChild('Taser') or fag.Backpack:FindFirstChild('Taser')
		if team ~= 'Bright blue' or not tool then
			repeat wait(.1) workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue') until getTeam() == 'Bright blue'
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			tool = fag.Character:FindFirstChild('Taser') or fag.Backpack:FindFirstChild('Taser')
		end

		local event = {}
		for _,v in pairs(plrs) do
			event[#event+1] = {
				["RayObject"] = Ray.new(),
				["Distance"] = 0,
				["Cframe"] = CFrame.new(),
				["Hit"] = v.Character.Head
			}
		end
		ReplicatedStorage.ShootEvent:FireServer(event, tool)
		ReplicatedStorage.ReloadEvent:FireServer(tool)
	end)
end

local function bringPlr(plr, cf)
	if not plr then return end
	local plrCF = getPos()
	workspace.Remote.loadchar:InvokeServer()
	fag.Character.HumanoidRootPart.CFrame = plrCF
	workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
	local char = fag.Character
	char.Humanoid.Name = 'fuck'
	local c = char.fuck:Clone()
	c.Name = 'Humanoid'
	c.Parent = char
	char.fuck:Destroy()
	workspace.CurrentCamera.CameraSubject = char
	char.Animate.Disabled = true
	wait()
	char.Animate.Disabled = false
	char.Humanoid.DisplayDistanceType = 'None'
	local tool = fag.Backpack:FindFirstChild('M9') or fag.Character:FindFirstChild('M9')
	tool.Parent = char
	repeat wait(.1)
		goTo(plr)
	until not plr or tool.Parent ~= fag.Character
	local counter = 0
	repeat wait(.1)
		counter = counter + 1
		workspace:FindFirstChild(fag.Name).HumanoidRootPart.CFrame = cf
	until counter > 10
	workspace.Remote.loadchar:InvokeServer()
	fag.Character.HumanoidRootPart.CFrame = plrCF
end

local function flingPlr(plr)
	if not plr then return end
	local plrCF = getPos()
	local char = fag.Character
	char.ClientInputHandler.Disabled = true
	local fling =Instance.new('BodyAngularVelocity',char.HumanoidRootPart)
	fling.AngularVelocity = Vector3.new(0, 99999, 0)
	fling.MaxTorque = Vector3.new(0,math.huge,0)
	fling.P = math.huge
	for _,v in next, char:GetDescendants() do
		if v:IsA('BasePart') then 
			v.CanCollide = false 
			v.Massless = true
			v.Velocity = Vector3.new(0, 0, 0)
		end
	end
	spawn(function()
		repeat
			fling.AngularVelocity = Vector3.new(0, 99999, 0)
			wait(.2)
			fling.AngularVelocity = Vector3.new(0, 0, 0)
			wait(.1)
		until not plr or not workspace[plr.Name] or not workspace[plr.Name]:FindFirstChild('Humanoid') or workspace[plr.Name].Humanoid.Health <= 0
	end)
	repeat
		char.Humanoid.Sit = false
		goTo(plr)
		RunService.Heartbeat:Wait()
	until not plr or not workspace[plr.Name] or not workspace[plr.Name]:FindFirstChild('Humanoid') or workspace[plr.Name].Humanoid.Health <= 0
	workspace.Remote.loadchar:InvokeServer()
	fag.Character.HumanoidRootPart.CFrame = plrCF
end

local function arrestPlr(plr)
	if not plr then return end
	pcall(function()
		if not workspace:FindFirstChild(plr.Name) then repeat wait() until workspace:FindFirstChild(plr.Name) or not plr end
		if plr then
			local plrCF = getPos()
			local camCF = getCam()
			local team = getTeam()
			repeat wait(.1)
				goTo(plr, CFrame.new(0, 0, 1))
				workspace.Remote.arrest:InvokeServer(workspace[plr.Name].Head)
			until workspace[plr.Name].Head:FindFirstChild('handcuffedGui')
			wait()
			workspace.Remote.loadchar:InvokeServer(nil, team)
			fag.Character.Humanoid.Sit = false
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
		end
	end)
end

local function spamArrest(plr, t)
	for i = 1,t do
		workspace.Remote.arrest:InvokeServer(workspace[plr.Name].Head)
	end
end

local function createSound(sound, source, t)
	for i = 1, t do
		ReplicatedStorage.SoundEvent:FireServer(sound, source)
	end
end

local function godMode()
	local char = fag.Character
	local folderName = 'reanimFolder'
	local reanimName = 'reanim'
	local hum = char.Humanoid
	local cam = workspace.CurrentCamera
	local funcs = {}
	local vt3 = Vector3.new
	local cf = CFrame.new
	function addfunc(func)
		table.insert(funcs, func)
	end
	--//
	for _, v in next, char:GetDescendants() do
		if v:IsA('BasePart') then
			addfunc(RunService.Heartbeat:Connect(function()
				pcall(function()
					v.Velocity = vt3(0,-30,0)
					sethiddenproperty(fag,'MaximumSimulationRadius',math.huge)
					sethiddenproperty(fag,'SimulationRadius',999999999)
					fag.ReplicationFocus = workspace
				end)
			end))
		end
	end
	--//
	local folder = Instance.new('Folder', char)
	folder.Name = folderName

	char.Archivable = true
	local reanim = char:Clone()
	reanim.Name = reanimName

	for _, v in next, reanim:GetDescendants() do
		if v:IsA('BasePart') or v:IsA('Decal') then v.Transparency = 1  end
	end

	fag.Character = nil
	fag.Character = char
	hum.AutoRotate = false
	hum.WalkSpeed = 0
	hum.JumpPower = 0
	char.Torso.Anchored = true
	wait(5.65)
	char.Torso.Anchored = false
	log('[ ✅ ]: Enabled god mode')
	hum.Health = 0
	reanim.Parent = folder
	reanim.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame*CFrame.new(0,5,0)

	function create(part, par, pos, rot)
		Instance.new('Attachment',part)
		Instance.new('AlignPosition',part)
		Instance.new('AlignOrientation',part)
		Instance.new('Attachment',par)
		part.Attachment.Name = part.Name
		par.Attachment.Name = part.Name
		part.AlignPosition.Attachment0 = part[part.Name]
		part.AlignOrientation.Attachment0 = part[part.Name]
		part.AlignPosition.Attachment1 = par[part.Name]
		part.AlignOrientation.Attachment1 = par[part.Name]
		par[part.Name].Position = pos or vt3()
		part[part.Name].Orientation = rot or vt3()
		part.AlignPosition.MaxForce = 999999999
		part.AlignPosition.MaxVelocity = math.huge
		part.AlignPosition.ReactionForceEnabled = false
		part.AlignPosition.Responsiveness = math.huge
		part.AlignOrientation.Responsiveness = math.huge
		part.AlignPosition.RigidityEnabled = false
		part.AlignOrientation.MaxTorque = 999999999
		part.Massless=true
	end

	function setpos(part, par, pos)
		Instance.new('Attachment',part)
		Instance.new('AlignPosition',part)
		Instance.new('Attachment',par)
		part.Attachment.Name = part.Name
		par.Attachment.Name = part.Name
		part.AlignPosition.Attachment0 = part[part.Name]
		part.AlignPosition.Attachment1 = par[part.Name]
		par[part.Name].Position = pos or vt3()
		part.AlignPosition.MaxForce = 999999999
		part.AlignPosition.MaxVelocity = math.huge
		part.AlignPosition.ReactionForceEnabled = false
		part.AlignPosition.Responsiveness = math.huge
		part.Massless=true
	end

	for _, v in next, char:GetDescendants() do
		if v:IsA('BasePart') then
			addfunc(RunService.Stepped:Connect(function()
				v.CanCollide = false
			end))
		end
	end

	for _, v in next, char:GetDescendants() do
		if v:IsA('Accessory') then	
			create(v.Handle, reanim[v.Name].Handle)
		end
	end

	create(char['Head'],reanim['Head'])
	create(char['Torso'],reanim['Torso'])
	setpos(char['HumanoidRootPart'],reanim['Torso'],vt3(0,0,0))
	create(char['Right Arm'],reanim['Right Arm'])
	create(char['Left Arm'],reanim['Left Arm'])
	create(char['Right Leg'],reanim['Right Leg'])
	create(char['Left Leg'],reanim['Left Leg'])

	addfunc(UserInputService.JumpRequest:Connect(function()
		if reanim.Humanoid.FloorMaterial ~= Enum.Material.Air then 
			reanim.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			reanim.Humanoid.Sit = false 
		end 
	end))

	local crouch = false
	local crouchCD = false
	local fighting = false
	local fight = 'left'

	char.ClientInputHandler.Disabled = true
	reanim.ClientInputHandler.Disabled = true

	local anim1 = Instance.new('Animation'); anim1.Name = 'fightL'; anim1.AnimationId = 'rbxassetid://484200742'; local fightL = reanim.Humanoid.Animator:LoadAnimation(anim1)
	local anim2 = Instance.new('Animation'); anim2.Name = 'fightR'; anim2.AnimationId = 'rbxassetid://484926359'; local fightR = reanim.Humanoid.Animator:LoadAnimation(anim2) 
	local anim3 = Instance.new('Animation'); anim3.Name = 'crouchI'; anim3.AnimationId = 'rbxassetid://481089053'; local crouchI = reanim.Humanoid.Animator:LoadAnimation(anim3) 
	local anim4 = Instance.new('Animation'); anim4.Name = 'crouchW'; anim4.AnimationId = 'rbxassetid://481088553'; local crouchW = reanim.Humanoid.Animator:LoadAnimation(anim4)
	addfunc(Mouse.KeyDown:Connect(function(k)
		if k == 'f' and not fighting and reanim.Humanoid.WalkSpeed == 16 then
			fighting = true
			for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do
				if v.Animation.Name:match('fight') then v:Stop() end
			end
			if fight == 'left' then
				fightL:Play()
				fight = 'right'
			else
				fightR:Play()
				fight = 'left'
			end
			local p = Instance.new('Part', reanim)
			p.Transparency = 1
			p.Size = fag.Character.Torso.Size
			p.CanCollide = false
			local w = Instance.new('Weld', p)
			w.Part0 = reanim.Torso
			w.Part1 = p
			w.C1 = CFrame.new(0, 0, 2)
			local punchCD
			local func
			func = p.Touched:connect(function(h)
				if not punchCD and game.Players:FindFirstChild(h.Parent.Name) and h.Parent ~= fag and workspace[h.Parent.Name].Humanoid.Health > 0 then
					punchCD = true
					game.ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
					local sound = h.Parent.Head.punchSound:Clone()
					sound.Parent = h.Parent.Head
					sound:Play()
					game.ReplicatedStorage.SoundEvent:FireServer(h.Parent.Head.punchSound, h.Parent.Head)
					func:Disconnect()
				else func:Disconnect() end
			end)
			wait(.65)
			fighting = false
		end
		if k == 'c' and not crouchCD then
			if not crouch then
				crouchI:Play()
				game:GetService("TweenService"):Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,-4,0)}):Play()
				reanim.Humanoid.WalkSpeed = 5
				crouch = true
				crouchCD = true; wait(.2); crouchCD = false
			else 
				for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do
					if v.Animation.Name:match('crouch') then v:Stop() end
				end
				game:GetService("TweenService"):Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,0,0)}):Play()
				reanim.Humanoid.WalkSpeed = 16
				crouch = false
				crouchCD = true; wait(.2); crouchCD = false
			end
		end
	end))

	addfunc(UserInputService.InputBegan:Connect(function(k)
		if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then
			reanim.Humanoid.WalkSpeed = 24
		end
	end))

	addfunc(UserInputService.InputEnded:Connect(function(k)
		if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then
			reanim.Humanoid.WalkSpeed = 16
		end
	end))

	addfunc(RunService.RenderStepped:Connect(function()
		if crouch and reanim.HumanoidRootPart.Velocity.Magnitude < 2 then
			for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do
				if v.Animation.Name == 'crouchW' then v:Stop() end
			end
		end
	end))

	addfunc(RunService.RenderStepped:Connect(function()
		reanim.Humanoid:Move(hum.MoveDirection,false)
		if crouch and not crouchW.IsPlaying then
			crouchW:Play()
		end
		for _,v in next, hum:GetPlayingAnimationTracks() do v:Stop() end
	end))

	cam.CameraSubject = reanim.Humanoid

	addfunc(RunService.RenderStepped:Connect(function()
		if not workspace:FindFirstChild(fag.Name) or not workspace[fag.Name]:FindFirstChild(folderName) then
			for _,v in pairs(funcs) do
				v:Disconnect()
			end
		end
	end))
end

local function onePunch()
	local p = Instance.new('Part', fag.Character)
	p.Transparency = 1
	p.Size = fag.Character.Torso.Size
	p.CanCollide = false
	local w = Instance.new('Weld', p)
	w.Part0 = fag.Character.Torso
	w.Part1 = p
	w.C1 = CFrame.new(0, 0, 2)
	p.Touched:connect(function(h)
		if game.Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= fag and workspace[h.Parent.Name].Humanoid.Health > 0 then
			punchCooldown = true
			for i= 1, 15 do
				ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
			end
		end
	end)
	wait(.1)
	punchCooldown = false
	p:Destroy()
end

local function infStamina()
	for i,v in next, getgc() do 
		if type(v) == 'function' and getfenv(v).script and fag.Character:FindFirstChild('ClientInputHandler') and getfenv(v).script == fag.Character.ClientInputHandler then 
			for i2,v2 in next, debug.getupvalues(v) do 
				if type(v2) == 'number' and Toggles.InfStamina then 
					debug.setupvalue(v, i2, math.huge)
				end
			end
		end
	end
end

local function executeCmd(cmd, args)
	local plrCF = getPos() or game.Players.Character.HumanoidRootPart.CFrame
	local camCF = getCam()
	local team = getTeam()
	if cmd == 'whitelist' or cmd == 'wl' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if not Whitelisted[plr.Name] then
						Whitelisted[plr.Name] = true
						_G.settings.Whitelisted[plr.Name] = true
						save()
						log('[ ✅ ]: Whitelisted '..plrName(plr))
						notif('Whitelisted '..plrName(plr))
					else 
						log('[ ❌ ]: Already whitelisted '..plrName(plr)) 
						notif('Already whitelisted '..plrName(plr)) 
					end
				else 
					log('[ ❌ ]: Cannot whitelist yourself') 
					notif('Cannot whitelist yourself') 
				end
			else 
				log('[ ❌ ]: No player found') 
			end
		end
	elseif cmd == 'unwhitelist' or cmd == 'unwl' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if Whitelisted[plr.Name] then
						Whitelisted[plr.Name] = nil
						_G.settings.Whitelisted[plr.Name] = nil
						save()
						log('[ ✅ ]: Unwhitelisted '..plrName(plr))
						notif(' Unwhitelisted '..plrName(plr))
					else 
						log('[ ❌ ]: Already unwhitelisted '..plrName(plr)) 
						notif(' Already unwhitelisted '..plrName(plr))
					end
				else 
					log('[ ❌ ]: Cannot unwhitelist yourself') 
					notif('Cannot unwhitelist yourself') 
				end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'getwhitelist' or cmd == 'getwl' then
		local str = ''
		for i, v in pairs(Whitelisted) do
			if not i or not v then continue end
			local plr = getPlr(i)
			if plr then
				local name = plrName(plr)
				if str == '' then str = '· '..name else
					str = str..'\n · '..name
				end
			else continue end
		end
		if str ~= '' then 
			log('[ 📄 ]: Whitelisted players:\n'..str)
			executeCmd('logs') 
		else 
			log('[ 📄 ]: No players in the server are whitelisted') 
			notif('No players in the server are whitelisted') 
		end
	elseif cmd == 'tase' or cmd == 'taze' then
		if args[1] then
			local teamToTase = nil
			if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				teamToTase = {'Inmates', 'Bright orange'} 
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				teamToTase = {'Criminals', 'Really red'} 
			elseif args[1] == 'all' or args[1] == 'others' then
				local plrTable = {}
				for _, plr in pairs(game.Players:GetChildren()) do
					local currentTeam = getTeam()
					if currentTeam ~= 'Bright blue' then
						workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF
					end
					if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Bright blue' and plr ~= fag and workspace:FindFirstChild(plr.Name) then
						table.insert(plrTable, plr)
					else continue end
				end
				tasePlrs(plrTable)
				log('[ ✅ ]: Tased all players')
				if fag.TeamColor.Name ~= team then
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else 
						workspace.Remote.loadchar:InvokeServer(nil, team)
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF 
					end
				end
			else
				local plr = getPlr(args[1])
				if plr then
					if plr.TeamColor.Name ~= 'Bright blue' then
						tasePlr(plr)
						log('[ ✅ ]: Tased '..plrName(plr))
						if fag.TeamColor.Name ~= team then
							if team ~= 'Really red' then
								workspace.Remote.TeamEvent:FireServer(team)
							else
								workspace.Remote.loadchar:InvokeServer(nil, team)
								fag.Character.HumanoidRootPart.CFrame = plrCF
								workspace.CurrentCamera.CFrame = camCF 
							end
						end
					else log('[ ❌ ]: Cannot tase player') end
				else log('[ ❌ ]: No player found') end
			end
			if teamToTase and teamToTase ~= nil then
				local plrTable = {}
				for _, plr in pairs(game.Players:GetChildren()) do
					local currentTeam = getTeam()
					if currentTeam ~= 'Bright blue' then
						workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
					end
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == teamToTase[2] and workspace:FindFirstChild(plr.Name) then
						table.insert(plrTable, plr)
					else continue end
				end
				tasePlrs(plrTable)
				log('[ ✅ ]: Tased all '..teamToTase[1]:lower())
				if fag.TeamColor.Name ~= team then
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else
						workspace.Remote.loadchar:InvokeServer(nil, team)
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF 
					end
				end
			end
		end
	elseif cmd == 'looptase' or cmd == 'looptaze' then
		if args[1] then
			local team = getTeam()
			local already
			if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if not Toggles.LoopTaseInmates then
					Toggles.LoopTaseInmates = true
					log('[ ✅ ]: Enabled loop tasing inmates')
				else 
					log('[ ❌ ]: Already enabled loop tasing inmates') 
					already = true
				end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if not Toggles.LoopTaseCrims then
					Toggles.LoopTaseCrims = true
					log('[ ✅ ]: Enabled loop tasing criminals')
				else 
					log('[ ❌ ]: Already enabled loop tasing criminals') 
					already = true
				end
			elseif args[1] == 'all' or args[1] == 'others' then
				if not Toggles.LoopTaseAll then
					Toggles.LoopTaseAll = true
					log('[ ✅ ]: Enabled loop tasing all players')
				else 
					log('[ ❌ ]: Already enabled loop tasing all players') 
					already = true
				end
			else
				local plr = getPlr(args[1])
				if plr then
					if plr.TeamColor.Name ~= 'Bright blue' then
						if not LoopTased[plr.UserId] then
							LoopTased[plr.UserId] = plr
							log('[ ✅ ]: Loop tasing '..plrName(plr))
							local _plr = LoopTased[plr.UserId]
							repeat wait(.1)
								local team = getTeam()
								if team ~= 'Bright blue' then
									workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
								end
								if not Whitelisted[plr.Name] and plr ~= fag and workspace:FindFirstChild(plr.Name) then
									tasePlr(_plr)
								end
							until LoopTased[plr.UserId] == nil
						else log('[ ❌ ]: Already loop tasing '..plrName(plr)) end
					else log('[ ❌ ]: Cannot tase player') end
				else log('[ ❌ ]: No player found') end
			end
			if not already then
				if Toggles.LoopTaseInmates then
					repeat wait(.1)
						local team = getTeam()
						if team ~= 'Bright blue' then
							workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
						end
						local plrTable = {}
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) then
								table.insert(plrTable, plr)
							else continue end
						end
						tasePlrs(plrTable)
						wait(5)
					until not Toggles.LoopTaseInmates 
				elseif Toggles.LoopTaseCrims then
					repeat wait(.1)
						local team = getTeam()
						if team ~= 'Bright blue' then
							workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
						end
						local plrTable = {}
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) then
								table.insert(plrTable, plr)
							else continue end
						end
						tasePlrs(plrTable)
						wait(5)
					until not Toggles.LoopTaseCrims
				elseif Toggles.LoopTaseAll then
					repeat wait(.1)
						local team = getTeam()
						if team ~= 'Bright blue' then
							local newPos = getPos()
							local newCam = getCam()
							workspace.Remote.loadchar:InvokeServer(nil, 'Bright blue')
							fag.Character.HumanoidRootPart.CFrame = newPos
							workspace.CurrentCamera.CFrame = newCam
						end
						local plrTable = {}
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr.TeamColor.Name ~= 'Bright blue' and plr ~= fag and workspace:FindFirstChild(plr.Name) then
								table.insert(plrTable, plr)
							else continue end
						end
						tasePlrs(plrTable)
						wait(5)
					until not Toggles.LoopTaseAll
				end
			end
		end
	elseif cmd == 'unlooptase' or cmd == 'unlooptaze' then
		if args[1] then
			if args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if Toggles.LoopTaseInmates then
					Toggles.LoopTaseInmates = false
					log('[ ✅ ]: Disabled loop tasing inmates')
				else log('[ ❌ ]: Already disabled loop tasing inmates') end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if Toggles.LoopTaseCrims then
					Toggles.LoopTaseCrims = false
					log('[ ✅ ]: Disabled loop tasing criminals')
				else log('[ ❌ ]: Already disabled loop tasing criminals') end
			elseif args[1] == 'all' or args[1] == 'others' then
				if Toggles.LoopTaseAll then
					Toggles.LoopTaseAll = false
					log('[ ✅ ]: Disabled loop tasing all players')
				else log('[ ❌ ]: Already disabled loop tasing all players') end
			else 
				local plr = getPlr(args[1])
				if plr then
					if LoopTased[plr.UserId] then
						LoopTased[plr.UserId] = nil
						log('[ ✅ ]: Disabled loop tasing '..plrName(plr))
					else log('[ ❌ ]: Already disabled loop tasing '..plrName(plr)) end
				else log('[ ❌ ]: No player found') end
			end
		end
	elseif cmd == 'clearlooptase' or cmd == 'clearlooptaze' or cmd == 'clearlooptases' or cmd == 'clearlooptazes' then
		Toggles.LoopTaseAll = false
		Toggles.LoopTaseInmates = false
		Toggles.LoopTaseCrims = false
		LoopTased = {}
		log('[ ✅ ]: Cleared loop tasing all players')
		notif('Cleared loop tasing all players') 
	elseif cmd == 'arrest' then
		if args[1] then
			if args[1] == 'all' or args[1] == 'other' or args[1] == 'others' or args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				for _, plr in ipairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Really red' then
						arrestPlr(plr)
					else continue end
				end
				log('[ ✅ ]: Arrested all players')
			else
				local plr = getPlr(args[1])
				if plr then
					if plr.TeamColor.Name ~= 'Really red' then
						log('[ ✅ ]: Attempting to arrest '..plrName(plr))
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until plr.TeamColor.Name == 'Really red'
					end
					arrestPlr(plr)
					log('[ ✅ ]: Arrested '..plrName(plr))
				else log('[ ❌ ]: No player found') end
			end
		else log('[ ❌ ]: No player found') end
	elseif cmd == 'spamarrest' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if SpamArresting ~= plr then
						SpamArresting = plr
						log('[ ✅ ]: Spam arresting '..plrName(plr))
						if plr.TeamColor.Name ~= 'Really red' then
							repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until plr.TeamColor.Name == 'Really red' or SpamArresting ~= plr
						end
						repeat wait(.1)
							goTo(plr)
							for i = 1,100 do
								spawn(function()
									spamArrest(plr, math.huge)
								end)
							end
						until not game.Players:FindFirstChild(plr.Name) or not workspace[plr.Name] or plr.TeamColor.Name ~= 'Really red' or SpamArresting ~= plr
						workspace.Remote.loadchar:InvokeServer()
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF
					else log('[ ❌ ]: Already spam arresting '..plrName(plr)) end
				else log("[ ❌ ]: You can't spam arrest yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'unspamarrest' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if SpamArresting then
					if SpamArresting == plr then
						SpamArresting = nil
						log('[ ✅ ]: Disabled loop spam arresting '..plrName(plr))
					else log('[ ❌ ]: You are not spam arresting '..plrName(plr)) end
				else log('[ ❌ ]: You are not spam arresting '..plrName(plr)) end
			else log('[ ❌ ]: No player found') end
		else 
			if SpamArresting then
				SpamArresting = nil
				log('[ ✅ ]: Disabled spam arresting')
			else log('[ ❌ ]: You are not spam arresting anyone') end
		end
	elseif cmd == 'clickarrest' then
		if not Toggles.ClickArrest then
			Toggles.ClickArrest = true
			log('[ ✅ ]: Enabled click arrest')
			notif('Enabled click arrest')
			local func
			func = Mouse.Button1Down:Connect(function()
				if not Toggles.ClickArrest then func:Disconnect() end
				local hit = Mouse.Target
				if hit:IsA('BasePart') and hit.Parent and getPlr(hit.Parent.Name) then
					local plr = getPlr(hit.Parent.Name) 
					if not Whitelisted[plr.Name] and plr ~= fag and not hit.Parent:FindFirstChild('handcuffedGui') then
						workspace.Remote.arrest:InvokeServer(hit.Parent.Head)
					end
				else return end
			end)
		else 
			log('[ ❌ ]: Already enabled click arrest') 
			notif('Already enabled click arrest')
		end
	elseif cmd == 'unclickarrest' or cmd == 'noclickarrest' then
		if Toggles.ClickArrest then
			Toggles.ClickArrest = false
			log('[ ✅ ]: Disabled click arrest')
		else log('[ ❌ ]: Already disabled click arrest') end
	elseif cmd == 'arrestaura' then
		if not Toggles.ArrestAura then
			log('[ ✅ ]: Enabled arrest aura')
			Toggles.ArrestAura = true
			repeat wait(.1)
				for i, v in pairs(game.Players:GetPlayers()) do
					if not Whitelisted[v.Name] and v ~= fag and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Head') and not v.Character:FindFirstChild('handcuffedGui') then
						local Distance = (v.Character:FindFirstChildOfClass('Part').Position - fag.Character:FindFirstChildOfClass('Part').Position).magnitude
						if Distance <= 10 and Toggles.ArrestAura then
							workspace.Remote.arrest:InvokeServer(workspace[v.Name].Head)
						end
					else continue end
				end
			until not Toggles.ArrestAura
		else log('[ ❌ ]: Already enabled arrest aura') end
	elseif cmd == 'unarrestaura' or cmd == 'noarrestaura' then
		if Toggles.ArrestAura then
			log('[ ✅ ]: Disabled arrest aura')
			Toggles.ArrestAura = false
		else log('[ ❌ ]: Already disabled arrest aura') end
	elseif cmd == 'killtool' or cmd == 'killgun' or cmd == 'killweapon' then
		if args[1] then
			local already
			if args[1] == 'ak' or args[1] == 'ak47' or args[1] == 'ak-47' then
				if KillTool ~= 'AK-47' then KillTool = 'AK-47' 
				else 
					log('[ ❌ ]: Already set'..KillTool..'as kill tool')
					already = true
				end
			elseif args[1] == 'm4' or args[1] == 'm4a1' then
				if KillTool ~= 'M4A1' then KillTool = 'M4A1' 
				else 
					log('[ ❌ ]: Already set'..KillTool..'as kill tool')
					already = true
				end
			elseif args[1] == 'm9' or args[1] == 'pistol' then
				if KillTool ~= 'M9' then KillTool = 'M9' 
				else 
					log('[ ❌ ]: Already set'..KillTool..'as kill tool')
					already = true
				end
			elseif args[1] == 'remington' or args[1] == 'shotgun' or cmd == 'remington870' then
				if KillTool ~= 'Remington 870' then KillTool = 'Remington 870' 
				else 
					log('[ ❌ ]: Already set'..KillTool..'as kill tool')
					already = true
				end
			else log('[ ❌ ]: Input a valid gun') end
			if not already then
				_G.settings.KillTool = KillTool
				save()
				log('[ ✅ ]: Set '..KillTool..' as kill tool')
			end
		end
	elseif cmd == 'kill' then
		local team = getTeam()
		if args[1] then
			local teamToKill = nil
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				teamToKill = {'Guards', 'Bright blue'} 
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				teamToKill = {'Inmates', 'Bright orange'} 
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				teamToKill = {'Criminals', 'Really red'} 
			elseif args[1] == 'all' or args[1] == 'others' then
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				for _, plr in pairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[ ✅ ]: Killed all players')
				if fag.TeamColor.Name ~= team then
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else
						workspace.Remote.loadchar:InvokeServer(nil, team)
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF 
					end
				end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				for _, plr in pairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[ ✅ ]: Killed all enemies')
			else
				local plr = getPlr(args[1])
				if plr then
					if team == plr.TeamColor.Name then
						workspace.Remote.TeamEvent:FireServer('Medium stone grey')
					end
					killPlr(plr)
					log('[ ✅ ]: Killed '..plrName(plr))
					notif('Killed '..plrName(plr))
					if fag.TeamColor.Name ~= team then
						if team ~= 'Really red' then
							workspace.Remote.TeamEvent:FireServer(team)
						else
							workspace.Remote.loadchar:InvokeServer(nil, team)
							fag.Character.HumanoidRootPart.CFrame = plrCF
							workspace.CurrentCamera.CFrame = camCF 
						end
					end
				else log('[ ❌ ]: No player found') end
			end
			if teamToKill and teamToKill ~= nil then
				if team == teamToKill[2] then
					workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				end
				for _, plr in pairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == teamToKill[2] and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
						killPlr(plr)
					else continue end
				end
				log('[ ✅ ]: Killed all '..teamToKill[1]:lower())
				if fag.TeamColor.Name ~= team then
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else
						workspace.Remote.loadchar:InvokeServer(nil, team)
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF 
					end
				end
			end
		end
	elseif cmd == 'loopkill' or cmd == 'lkill' or cmd == 'lk' then
		if args[1] then
			local already
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				if not Toggles.LoopKillGuards then
					Toggles.LoopKillGuards = true
					log('[ ✅ ]: Enabled loop killing guards')
				else 
					log('[ ❌ ]: Already enabled loop killing guards')
					already = true
				end
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if not Toggles.LoopKillInmates then
					Toggles.LoopKillInmates = true
					log('[ ✅ ]: Enabled loop killing inmates')
				else 
					log('[ ❌ ]: Already enabled loop killing inmates') 
					already = true
				end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if not Toggles.LoopKillCrims then
					Toggles.LoopKillCrims = true
					log('[ ✅ ]: Enabled loop killing criminals')
				else 
					log('[ ❌ ]: Already enabled loop killing criminals') 
					already = true
				end
			elseif args[1] == 'all' or args[1] == 'others' then
				if not Toggles.LoopKillAll then
					Toggles.LoopKillAll = true
					log('[ ✅ ]: Enabled loop killing all players')
				else 
					log('[ ❌ ]: Already enabled loop killing all players') 
					already = true
				end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				if not Toggles.LoopKillEnemies then
					Toggles.LoopKillEnemies = true
					log('[ ✅ ]: Enabled loop killing enemies')
				else 
					log('[ ❌ ]: Already enabled loop killing enemies') 
					already = true
				end
			else 
				local plr = getPlr(args[1])
				if plr then
					if not LoopKilled[plr.UserId] then
						LoopKilled[plr.UserId] = plr
						log('[ ✅ ]: Loop killing '..plrName(plr))
						local _plr = LoopKilled[plr.UserId]
						repeat wait(.1)
							if workspace:FindFirstChild(_plr.Name) and workspace[_plr.Name]:FindFirstChild('Humanoid') and workspace[_plr.Name].Humanoid.Health > 0 and not workspace[_plr.Name]:FindFirstChild('ForceField') then
								local team = getTeam()
								if team == _plr.TeamColor.Name then
									workspace.Remote.TeamEvent:FireServer('Medium stone grey')
								end
								killPlr(_plr)
							end
						until LoopKilled[plr.UserId] == nil
					else log('[ ❌ ]: Already loop killing '..plrName(plr)) end
				else log('[ ❌ ]: No player found') end
			end
			if not already then
				if Toggles.LoopKillGuards then
					repeat wait(.1)
						local team = getTeam()
						if team == 'Bright blue' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Bright blue' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillGuards
				elseif Toggles.LoopKillInmates then
					repeat wait(.1)
						local team = getTeam()
						if team == 'Bright orange' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Bright orange' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillInmates 
				elseif Toggles.LoopKillCrims then
					repeat wait(.1)
						local team = getTeam()
						if team == 'Really red' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name == 'Really red' and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillCrims
				elseif Toggles.LoopKillAll then
					repeat wait(.1)
						local team = getTeam()
						if team ~= 'Medium stone grey' then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillAll
				elseif Toggles.LoopKillEnemies then
					local team = getTeam()
					repeat wait(.1)
						for _, plr in pairs(game.Players:GetChildren()) do
							if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name ~= team and workspace:FindFirstChild(plr.Name) and workspace[plr.Name]:FindFirstChild('Humanoid') and workspace[plr.Name].Humanoid.Health > 0 and not workspace[plr.Name]:FindFirstChild('ForceField') then
								killPlr(plr)
							end
						end
					until not Toggles.LoopKillEnemies
				end
			end
		end
	elseif cmd == 'unloopkill' or cmd == 'unlkill' or cmd == 'unlk' then
		if args[1] then
			if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
				if Toggles.LoopKillGuards then
					Toggles.LoopKillGuards = false
					log('[ ✅ ]: Disabled loop killing guards')
				else log('[ ❌ ]: Already disabled loop killing guards') end
			elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
				if Toggles.LoopKillInmates then
					Toggles.LoopKillInmates = false
					log('[ ✅ ]: Disabled loop killing inmates')
				else log('[ ❌ ]: Already disabled loop killing inmates') end
			elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
				if Toggles.LoopKillCrims then
					Toggles.LoopKillCrims = false
					log('[ ✅ ]: Disabled loop killing criminals')
				else log('[ ❌ ]: Already disabled loop killing criminals') end
			elseif args[1] == 'all' or args[1] == 'others' then
				if Toggles.LoopKillAll then
					Toggles.LoopKillAll = false
					log('[ ✅ ]: Disabled loop killing all players')
				else log('[ ❌ ]: Already disabled loop killing all players') end
			elseif args[1] == 'enemies' or args[1] == 'enemy' then
				if Toggles.LoopKillEnemies then
					Toggles.LoopKillEnemies = false
					log('[ ✅ ]: Disabled loop killing enemies')
				else log('[ ❌ ]: Already disabled loop killing enemies') end
			else 
				local plr = getPlr(args[1])
				if plr then
					if LoopKilled[plr.UserId] then
						LoopKilled[plr.UserId] = nil
						log('[ ✅ ]: Disabled loop killing '..plrName(plr))
					else log('[ ❌ ]: Already disabled loop killing '..plrName(plr)) end
				else log('[ ❌ ]: No player found') end
			end
		end
	elseif cmd == 'clearloopkills' or cmd == 'clearloopkill' or cmd == 'clearlks' or cmd == 'clearlk' then
		Toggles.LoopKillAll = false
		Toggles.LoopKillGuards = false
		Toggles.LoopKillInmates = false
		Toggles.LoopKillCrims = false
		Toggles.LoopKillEnemies = false
		LoopKilled = {}
		log('[ ✅ ]: Cleared loop killing all players')
		notif('Cleared loop killing all players') 
	elseif cmd == 'clickkill' then
		if not Toggles.ClickKill then
			log('[ ✅ ]: Enabled click kill')
			Toggles.ClickKill = true
			local func
			func = Mouse.Button1Down:Connect(function()
				if not Toggles.ClickKill then func:Disconnect() end
				local hit = Mouse.Target
				if hit:IsA('BasePart') and hit.Parent and getPlr(hit.Parent.Name) then
					local plr = getPlr(hit.Parent.Name) 
					if not Whitelisted[plr.Name] and hit.Parent:FindFirstChild('Humanoid') and hit.Parent.Humanoid.Health > 0 then
						local team = getTeam()
						if team == plr.TeamColor.Name then
							workspace.Remote.TeamEvent:FireServer('Medium stone grey')
						end
						killPlr(plr)
						if fag.TeamColor.Name ~= team then
							if team ~= 'Really red' then
								workspace.Remote.TeamEvent:FireServer(team)
							else
								workspace.Remote.loadchar:InvokeServer(nil, team)
								fag.Character.HumanoidRootPart.CFrame = plrCF
								workspace.CurrentCamera.CFrame = camCF 
							end
						end
					end
				else return end
			end)
		else log('[ ❌ ]: Already enabled clickill') end
	elseif cmd == 'noclickkill' or cmd == 'unclickkill' then
		if Toggles.ClickKill then
			log('[ ✅ ]: Disabled click kill')
			Toggles.ClickKill = false
		else log('[ ❌ ]: Already disabled click kill') end 
	elseif cmd == 'killaura' or cmd == 'aura' then
		if not Toggles.KillAura then
			log('[ ✅ ]: Enabled kill aura')
			Toggles.KillAura = true
			repeat wait(.1)
				for _, v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if not Whitelisted[v.Name] and v ~= fag and workspace:FindFirstChild(v.Name) and workspace[v.Name]:FindFirstChild('Humanoid') and workspace[v.Name].Humanoid.Health > 0 then
							local Distance = (v.Character:FindFirstChildOfClass('Part').Position - fag.Character:FindFirstChildOfClass('Part').Position).magnitude
							if Distance <= 10 and Toggles.KillAura then
								for i = 1,25 do
									ReplicatedStorage.meleeEvent:FireServer(v)
								end
							end
						end
					end)
				end
			until not Toggles.KillAura
		else log('[ ❌ ]: Already enabled kill aura') end
	elseif cmd == 'unkillaura' or cmd == 'unaura' or cmd == 'nokillaura' or cmd == 'noaura' then
		if Toggles.KillAura then
			log('[ ✅ ]: Disabled kill aura')
			Toggles.KillAura = false
		else log('[ ❌ ]: Already disabled kill aura') end
	elseif cmd == 'inmate' or cmd == 'inmates' or cmd == 'prisoner' or cmd == 'prisoners' then
		local team = getTeam()
		if team  ~= 'Bright orange' then
			workspace.Remote.TeamEvent:FireServer('Bright orange')
			log('[ ✅ ]: Joined inmates team')
		else log('[ ❌ ]: Already joined inmates team') end
	elseif cmd == 'guard' or cmd == 'guards' or cmd == 'police' or cmd == 'cop' or cmd == 'cops' then
		local team = getTeam()
		if team  ~= 'Bright blue' then
			workspace.Remote.TeamEvent:FireServer('Bright blue')
			wait(.1)
			if team ~= 'Bright blue' then
				log('[ ❌ ]: Cannot join guards team')
			else log('[ ✅ ]: Joined guards team') end
		else log('[ ❌ ]: Already joined guards team') end
	elseif cmd == 'criminal' or cmd == 'crim' then
		local team = getTeam()
		if args[1] then
			if args[1] == 'all' then
				for _, plr in ipairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until not plr or plr.TeamColor.Name == 'Really red'
					else continue end
				end
				log('[ ✅ ]: Made all players criminals...')
			else 
				local plr = getPlr(args[1])
				if plr then
					if plr ~= fag then
						if plr.TeamColor.Name ~= 'Really red' then
							repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until (not game.Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red'
							if game.Players:FindFirstChild(plr.Name) then
								log('[ ✅ ]: Made '..plrName(plr)..' a criminal')
							end
						else 
							notif(plrName(plr)..' is already a criminal') 
							log('[ ❌ ]: '..plrName(plr)..' is already a criminal') 
						end
					else 
						if team ~= 'Really red' then
							if team == 'Bright orange' then
								repeat wait(.1)
									local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
									if fag.Character.HumanoidRootPart.CFrame ~= CF then 
										fag.Character.HumanoidRootPart.CFrame = CF 
									end
								until fag.TeamColor.Name == 'Really red'
								fag.Character.HumanoidRootPart.CFrame = plrCF
							else
								workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
								fag.Character.HumanoidRootPart.CFrame = plrCF
								workspace.CurrentCamera.CFrame = camCF
							end
							log('[ ✅ ]: Joined criminals team')
						else log('[ ❌ ]: Already joined criminals team') end
					end
				else log('[ ❌ ]: No player found') end
			end
		else
			if team  ~= 'Really red' then
				if team == 'Bright orange' then
					repeat wait(.1)
						local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
						if fag.Character.HumanoidRootPart.CFrame ~= CF then 
							fag.Character.HumanoidRootPart.CFrame = CF 
						end
					until fag.TeamColor.Name == 'Really red'
					fag.Character.HumanoidRootPart.CFrame = plrCF
				else
					workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
					fag.Character.HumanoidRootPart.CFrame = plrCF
					workspace.CurrentCamera.CFrame = camCF
				end
				log('[ ✅ ]: Joined criminals team')
			else log('[ ❌ ]: Already joined criminals team') end
		end
	elseif cmd == 'criminals' or cmd == 'crims' then
		local team = getTeam()
		if team  ~= 'Really red' then
			if team == 'Bright orange' then
				repeat wait(.1)
					local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
					if fag.Character.HumanoidRootPart.CFrame ~= CF then 
						fag.Character.HumanoidRootPart.CFrame = CF 
					end
				until fag.TeamColor.Name == 'Really red'
				fag.Character.HumanoidRootPart.CFrame = plrCF
			else
				workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
				fag.Character.HumanoidRootPart.CFrame = plrCF
				workspace.CurrentCamera.CFrame = camCF
			end
			log('[ ✅ ]: Joined criminals team')
		else log('[ ❌ ]: Already joined criminals team') end
	elseif cmd == 'neutral' or cmd == 'neutrals' then
		local team = getTeam()
		if team  ~= 'Medium stone grey' then
			workspace.Remote.TeamEvent:FireServer('Medium stone grey')
			log('[ ✅ ]: Joined neutral team')
		else log('[ ❌ ]: Already joined neutral team') end
	elseif cmd == 'red' then
		local team = getTeam()
		if team ~= 'Bright red' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright red')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom red team')
		else log('[ ❌ ]: Already joined custom red team') end
	elseif cmd == 'orange' then
		local team = getTeam()
		if team ~= 'Neon orange' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Neon orange')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom orange team')
		else log('[ ❌ ]: Already joined custom orange team') end
	elseif cmd == 'yellow' then
		local team = getTeam()
		if team ~= 'Bright yellow' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright yellow')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom yellow team')
		else log('[ ❌ ]: Already joined custom yellow team') end
	elseif cmd == 'green' then
		local team = getTeam()
		if team ~= 'Bright green' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Bright green')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom green team')
		else log('[ ❌ ]: Already joined custom green team') end
	elseif cmd == 'blue' then
		local team = getTeam()
		if team ~= 'Deep blue' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Deep blue')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom blue team')
		else log('[ ❌ ]: Already joined custom blue team') end
	elseif cmd == 'purple' then
		local team = getTeam()
		if team ~= 'Royal purple' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Royal purple')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom purple team')
		else log('[ ❌ ]: Already joined custom purple team') end
	elseif cmd == 'pink' then
		local team = getTeam()
		if team ~= 'Hot pink' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Hot pink')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom pink team')
		else log('[ ❌ ]: Already joined custom pink team') end
	elseif cmd == 'white' then
		local team = getTeam()
		if team ~= 'White' then
			workspace.Remote.loadchar:InvokeServer(nil, 'White')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom white team')
		else log('[ ❌ ]: Already joined custom white team') end
	elseif cmd == 'grey' or cmd == 'gray' then
		local team = getTeam()
		if team ~= 'Ghost grey' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Ghost grey')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom grey team')
		else log('[ ❌ ]: Already joined custom grey team') end
	elseif cmd == 'brown' then
		local team = getTeam()
		if team ~= 'Brown' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Brown')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom brown team')
		else log('[ ❌ ]: Already joined custom brown team') end
	elseif cmd == 'black' then
		local team = getTeam()
		if team ~= 'Brown' then
			workspace.Remote.loadchar:InvokeServer(nil, 'Really black')
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Joined custom black team')
		else log('[ ❌ ]: Already joined custom black team') end
	elseif cmd == 'makecriminal' or cmd == 'makecrim' then
		local team = getTeam()
		if args[1] then
			if args[1] == 'all' then
				log('[ ✅ ]: Making all players criminals...')
				for _, plr in ipairs(game.Players:GetChildren()) do
					if not Whitelisted[plr.Name] and plr ~= fag and plr.TeamColor.Name ~= 'Really red' then
						repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until not plr or plr.TeamColor.Name == 'Really red'
					else continue end
				end
			else 
				local plr = getPlr(args[1])
				if plr then
					if plr ~= fag then
						if plr.TeamColor.Name ~= 'Really red' then
							repeat wait(.1) bringPlr(plr, CFrame.new(-919, 96, 2138)) until (not game.Players:FindFirstChild(plr.Name)) or plr.TeamColor.Name == 'Really red'
							if game.Players:FindFirstChild(plr.Name) then
								log('[ ✅ ]: Made '..plrName(plr)..' a criminal')
							end
						else 
							notif(plrName(plr)..' is already a criminal') 
							log('[ ❌ ]: '..plrName(plr)..' is already a criminal') 
						end
					else 
						if team ~= 'Really red' then
							if team == 'Bright orange' then
								repeat wait(.1)
									local CF = CFrame.new(-975.127686, 109.323769, 2045.06262)
									if fag.Character.HumanoidRootPart.CFrame ~= CF then 
										fag.Character.HumanoidRootPart.CFrame = CF 
									end
								until fag.TeamColor.Name == 'Really red'
								fag.Character.HumanoidRootPart.CFrame = plrCF
							else
								workspace.Remote.loadchar:InvokeServer(nil, 'Really red')
								fag.Character.HumanoidRootPart.CFrame = plrCF
								workspace.CurrentCamera.CFrame = camCF
							end
							log('[ ✅ ]: Joined criminals team')
						else log('[ ❌ ]: Already joined criminals team') end
					end
				else log('[ ❌ ]: No player found') end
			end
		end
	elseif cmd == 'lag' then
		if args[1] then
			if typeof(tonumber(args[1])) == 'number' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
				local tool = fag.Character:FindFirstChild('Remington 870') or fag.Backpack:FindFirstChild('Remington 870')
				Toggles.Lag = true
				log('Lagging server for '..args[1]..' seconds')
				for i = 1, (tonumber(args[1])*3) do
					if not Toggles.Lag then break end
					local event = {
						[1] = {
							['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
							['Distance'] = 0, 
							['Cframe'] = CFrame.new(), 
							['Hit'] = workspace[fag.Name].Head
						}
					}
					ReplicatedStorage.ShootEvent:FireServer(event, tool)
				end
			else log('[ ❌ ]: Input a valid duration') end
		else log('[ ❌ ]: Input a valid duration') end
	elseif cmd == 'unlag' then
		if Toggles.Lag then
			log('[ ✅ ]: Stopping lag')
			Toggles.Lag = false
			local tool = fag.Character:FindFirstChild('Remington 870') or fag.Backpack:FindFirstChild('Remington 870')
			tool.Handle:Destroy()
			tool.Parent = fag.Character
			tool:Destroy()
		else log('[ ❌ ]: Already stopping lag') end
	elseif cmd == 'crash' or cmd == 'crashserver' then
		if not Toggles.CrashServer then
			log('[ ✅ ]: Crashing server')
			Toggles.CrashServer = true
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
			local tool = fag.Character:FindFirstChild('Remington 870') or fag.Backpack:FindFirstChild('Remington 870')
			repeat wait(.1)
				local event = {
					[1] = {
						['RayObject'] = Ray.new(Vector3.new(), Vector3.new()), 
						['Distance'] = 0, 
						['Cframe'] = CFrame.new(), 
						['Hit'] = workspace[fag.Name].Head
					}
				}
				ReplicatedStorage.ShootEvent:FireServer(event, tool)
			until not Toggles.CrashServer
		else log('[ ❌ ]: Already crashing server') end
	elseif cmd == 'uncrash' or cmd == 'uncrashserver' then
		if Toggles.CrashServer then
			log('[ ✅ ]: Uncrashing server')
			Toggles.CrashServer = false
			local tool = fag.Character:FindFirstChild('Remington 870') or fag.Backpack:FindFirstChild('Remington 870')
			tool.Handle:Destroy()
			tool.Parent = fag.Character
			tool:Destroy()
		else log('[ ❌ ]: Already uncrashing server') end
	elseif cmd == 'fpslag' or cmd == 'lagspike' then
		if not Toggles.FPSLag then
			if SWAT then
				log('[ ✅ ]: FPS spiking all players')
				Toggles.FPSLag = true
				repeat wait(.1)
					local team = getTeam()
					if team ~= 'Bright blue' then
						repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until fag.TeamColor.Name  == 'Bright blue'
					end
					spawn(function()
						for i = 1,100 do
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP)
						end
					end)
				until not Toggles.FPSLag
			else log('[ ❌ ]: You need the SWAT gamepass to use this command') end
		else log('[ ❌ ]: Already FPS spiking all players') end
	elseif cmd == 'unfpslag' or cmd == 'unlagspike ' then
		if Toggles.FPSLag then
			log('[ ✅ ]: Disabled FPS spiking all players')
			Toggles.FPSLag = false
			repeat wait(.1) workspace.Remote.loadchar:InvokeServer() until not workspace[fag.Name]:FindFirstChild('vest') 
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
		else log('[ ❌ ]: Already disabled FPS spiking all players') end
	elseif cmd == 'infstamina' then
		if not Toggles.InfStamina then
			local shitexecutor
			local getgcollector = getgc or debug.getregistry
			local setupvalue = debug.setupvalue or setupvalue or setupval
			local getupvalues = debug.getupvalues or getupvalues or getupvals
			for _, v in next, {getgcollector, setupvalue, getupvalues} do
				if typeof(v) ~= 'function' then
					shitexecutor = true
					log("[ ❌ ]: Your executor doesn't support this command")
					break
				end
			end
			if not shitexecutor then
				Toggles.InfStamina = true
				log('[ ✅ ]: Enabled infinite stamina')
				infStamina()
			end
		else log('[ ❌ ]: Already enabled infinite stamina') end
	elseif cmd == 'uninfstamina' or cmd == 'noinfstamina' then
		if Toggles.InfStamina then
			Toggles.InfStamina = false
			workspace.Remote.loadchar:InvokeServer()
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
			log('[ ✅ ]: Disabled infinite stamina')
		else log('[ ❌ ]: Already disabled infinite stamina') end
	elseif cmd == 'earbang' or cmd == 'earrape' then
		local intensity = 5
		if args[1] then
			if not tonumber(args[1]) then
				intensity = nil
				log('[ ❌ ]: Input a valid number') 
			end
		end
		if intensity and not Toggles.Earbang then
			Toggles.Earbang = true
			log('[ ✅ ]: Enabled earbang (Intensity level: '..intensity..')')
			repeat wait(.1) 
				for _ ,plr in pairs(game.Players:GetChildren()) do
					if not Toggles.Earbang then break end
					if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) or workspace[plr.Name]:FindFirstChild('Head') then
						local h = plr.Character.Head
						local s = workspace['Prison_guardspawn'].spawn.Sound
						createSound(s, h, tonumber(args[1]))
					end
				end
			until not Toggles.Earbang
		else log('[ ❌ ]: Already enabled earbang') end
	elseif cmd == 'noearbang' or cmd == 'unearbang' or cmd == 'noearape' or cmd == 'unearrape' then
		if Toggles.Earbang then
			Toggles.Earbang = false
			log('[ ✅ ]: Disabled earbang')
		else log('[ ❌ ]: Already disabled earbang') end
	elseif cmd == 'reset' or cmd == 'oof ' then
		fag.Character:BreakJoints()
		log('[ ✅ ]: Successfully reset')
	elseif cmd == 'respawn' or cmd == 'res' then
		workspace.Remote.loadchar:InvokeServer()
		log('[ ✅ ]: Successfully respawned')
	elseif cmd == 'refresh' or cmd == 're' then
		local newPos = getPos()
		local newCam = getCam()
		workspace.Remote.loadchar:InvokeServer()
		fag.Character.HumanoidRootPart.CFrame = newPos
		workspace.CurrentCamera.CFrame = newCam
		log('[ ✅ ]: Successfully refreshed')
	elseif cmd == 'autorefresh' or cmd == 'autore' then
		if not Toggles.AutoRefresh then
			log('[ ✅ ]: Enabled auto refresh')
			Toggles.AutoRefresh = true
			repeat wait(.1)
				if fag.Character.Humanoid.Health <= 0 then
					local newPos = getPos()
					local newCam = getCam()
					workspace.Remote.loadchar:InvokeServer()
					fag.Character.HumanoidRootPart.CFrame = newPos
					workspace.CurrentCamera.CFrame = newCam
				end
			until not Toggles.AutoRefresh
		else log('[ ❌ ]: Already enabled auto refresh') end
	elseif cmd == 'unautorefresh' or cmd == 'unautore' then
		if Toggles.AutoRefresh then
			log('[ ✅ ]: Disabled auto refresh')
			Toggles.AutoRefresh = false
		else log('[ ❌ ]: Already disabled auto refresh') end
	elseif cmd == 'god' or cmd == 'godmode' then
		if not fag.Character:FindFirstChild('reanimFolder') then
			log('[ 🔄 ]: Enabling god mode, please wait...')
			godMode()
		else log('[ ❌ ]: Already enabled god mode') end
	elseif cmd == 'ungod' or cmd == 'ungodmode' then
		if fag.Character:FindFirstChild('reanimFolder') then
			log('[ ✅ ]: Disabled god mode')
			workspace.Remote.loadchar:InvokeServer()
			fag.Character.HumanoidRootPart.CFrame = plrCF
			workspace.CurrentCamera.CFrame = camCF
		else log('[ ❌ ]: Already disabled god mode') end
	elseif cmd == 'swatgod' or cmd == 'swatgodmode' then
		if not Toggles.SwatGodMode then
			if SWAT then
				log('[ ✅ ]: Enabled swat god mode')
				Toggles.SwatGodMode = true
				repeat wait(.1)
					if fag.TeamColor.Name ~= 'Bright blue' then
						workspace.Remote.TeamEvent:FireServer('Bright blue')
					end
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes['Riot Police'].ITEMPICKUP)
					if workspace[fag.Name]:FindFirstChild('vest') then workspace[fag.Name].vest:Destroy() end
				until not Toggles.SwatGodMode
			else log('[ ❌ ]: You need the SWAT gamepass to use this command') end
		else log('[ ❌ ]: Already enabled swat god mode') end
	elseif cmd == 'unswatgod' or cmd == 'unswatgodmode' then
		if Toggles.SwatGodMode then
			Toggles.SwatGodMode = false
			log('[ ✅ ]: Disabled swat god mode')
		else log('[ ❌ ]: Already disabled swat god mode') end
	elseif cmd == 'goto' or cmd == 'to' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					goTo(plr)
					log('[ ✅ ]: Teleported to '..plrName(plr))
				else log("[ ❌ ]: You can't teleport to yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'bring' then
		local teamToBring = nil
		if args[1] == 'guards' or args[1] == 'guard' or args[1] == 'cops' or args[1] == 'cop' then
			teamToBring = {'Guards', 'Bright blue'} 
		elseif args[1] == 'inmates' or args[1] == 'inmate' or args[1] == 'prisoners' or args[1] == 'prisoner' then
			teamToBring = {'Inmates', 'Bright orange'} 
		elseif args[1] == 'criminals' or args[1] == 'criminal' or args[1] == 'crims' or args[1] == 'crim' then
			teamToBring = {'Criminals', 'Really red'} 
		elseif args[1] == 'all' or args[1] == 'others' then
			for _, plr in ipairs(game.Players:GetChildren()) do
				if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= fag then
					bringPlr(plr, plrCF)
				end
			end
			log('[ ✅ ]: Brought all players')
		elseif args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					bringPlr(plr, plrCF)
					log('[ ✅ ]: Brought '..plrName(plr))
				else log("[ ❌ ]: You can't bring yourself") end
			else log('[ ❌ ]: No player found') end
		end
		if teamToBring and teamToBring ~= nil then
			for _, plr in ipairs(game.Players:GetChildren()) do
				if not Whitelisted[plr.Name] and workspace:FindFirstChild(plr.Name) and (not workspace[plr.Name].Humanoid.Sit) and plr ~= fag and plr.TeamColor.Name == teamToBring[2] then
					bringPlr(plr, plrCF)
				end
			end
			log('[ ✅ ]: Brought all '..teamToBring[1]:lower())
		end
	elseif cmd == 'loopbring' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if Bringing ~= plr then
						Bringing = plr
						log('[ ✅ ]: Loop bringing '..plrName(plr))
						repeat wait(.1)
							bringPlr(plr, plrCF)
							wait(.1)
						until Bringing ~= plr
					else log('[ ❌ ]: Already loop bringing '..plrName(plr)) end
				else log("[ ❌ ]: You can't loop bring yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'unloopbring' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if Bringing then
					if Bringing == plr then
						Bringing = nil
						log('[ ✅ ]: Disabled loop bringing '..plrName(plr))
					else log('[ ❌ ]: You are not loop bringing '..plrName(plr)) end
				else log('[ ❌ ]: You are not loop bringing '..plrName(plr)) end
			else log('[ ❌ ]: No player found') end
		else 
			if Bringing then
				Bringing = nil
				log('[ ✅ ]: Disabled loop bringing')
			else log('[ ❌ ]: You are not loop bringing anyone') end
		end
	elseif cmd == 'nodaycycle' or cmd == 'alwaysday' then
		if not Toggles.AlwaysDay then
			log('[ ✅ ]: Disabled day cycle')
			Toggles.AlwaysDay = true
			local func
			func = RunService.RenderStepped:Connect(function()
				if not Toggles.AlwaysDay then func:Disconnect() end
				game.Lighting.Brightness = 2
				game.Lighting.ClockTime = 14
				game.Lighting.FogEnd = 100000
				game.Lighting.GlobalShadows = false
				game.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
			end)
		else log('[ ❌ ]: Already disabled day cycle') end
	elseif cmd == 'daycycle' or cmd == 'unalwaysday' then
		if Toggles.AlwaysDay then
			log('[ ✅ ]: Enabled day cycle')
			Toggles.AlwaysDay = false
		else log('[ ❌ ]: Already enabled day cycle') end
	elseif cmd == 'showinventory' or cmd == 'showinv' then
		game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
		log('[ ✅ ]: Showed inventory')
	elseif cmd == 'autoshowinventory' or cmd == 'autoshowinv' then
		if not Toggles.AutoShowInv then
			log('[ ✅ ]: Enabled auto show inventory')
			Toggles.AutoShowInv = true
			repeat wait(.1)
				game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
			until not Toggles.AutoShowInv
		else log('[ ❌ ]: Already enabled auto show inventory') end
	elseif cmd == 'unautoshowinventory' or cmd == 'unautoshowinv' then
		if Toggles.AutoShowInv then
			log('[ ✅ ]: Disabled auto show inventory')
			Toggles.AutoShowInv = false
		else log('[ ❌ ]: Already disabled auto show inventory') end
	elseif cmd == 'view' or cmd == 'spectate' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if Spectating ~= plr then
						Spectating = plr
						log('[ ✅ ]: Spectating '..plrName(plr))local func
						func = RunService.RenderStepped:Connect(function()
							if Spectating ~= plr then 
								func:Disconnect() 
								workspace.CurrentCamera.CameraSubject = fag.Character
							else 
								if workspace.CurrentCamera.CameraSubject ~= plr.Character then
									workspace.CurrentCamera.CameraSubject = plr.Character
								end
							end
						end)
					else log('[ ❌ ]: Already spectating '..plrName(plr)) end
				else log("[ ❌ ]: You can't spectate yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'unview' or cmd == 'unspectate' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if Spectating then
					if plr == Spectating then
						Spectating = nil
						workspace.CurrentCamera.CameraSubject = fag.Character
						log('[ ✅ ]: Stopped spectating '..plrName(plr))
					else log('[ ❌ ]: You are not spectating '..plrName(plr)) end
				else log('[ ❌ ]: You are not spectating '..plrName(plr)) end
			else log('[ ❌ ]: No player found') end
		else 	
			if Spectating then
				Spectating = nil
				workspace.CurrentCamera.CameraSubject = fag.Character
				log('[ ✅ ]: Stopped spectating')
			else log('[ ❌ ]: You are not spectating anyone') end
		end
	elseif cmd == 'fling' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					flingPlr(plr)
					log('[ ✅ ]: Flinged '..plrName(plr))
				else log("[ ❌ ]: You can't fling yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'loopfling' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					if Flinging ~= plr then
						Flinging = plr
						log('[ ✅ ]: Loop flinging '..plrName(plr))
						repeat
							pcall(function()
								local char = fag.Character
								char.ClientInputHandler.Disabled = true
								if char.Humanoid.Health <= 0 or not char.HumanoidRootPart then
									workspace.Remote.loadchar:InvokeServer()
								end
								goTo(plr, CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,0))
								if not char.HumanoidRootPart:FindFirstChildOfClass('BodyAngularVelocity') then
									local fling = Instance.new('BodyAngularVelocity',char.HumanoidRootPart)
									fling.AngularVelocity = Vector3.new(0, 99999, 0)
									fling.MaxTorque = Vector3.new(0,math.huge,0)
									fling.P = math.huge
									for _,v in next, char:GetDescendants() do
										if v:IsA('BasePart') then 
											v.CanCollide = false 
											v.Massless = true
											v.Velocity = Vector3.new(0, 0, 0)
										end
									end
									spawn(function()
										repeat
											fling.AngularVelocity = Vector3.new(0, 99999, 0)
											wait(.2)
											fling.AngularVelocity = Vector3.new(0, 0, 0)
											wait(.1)
										until not fling or not plr or Flinging ~= plr
									end)
								end
								char.Humanoid.Sit = false
							end)
							RunService.Heartbeat:Wait()
						until not plr or Flinging ~= plr
						workspace.Remote.loadchar:InvokeServer()
					else log('[ ❌ ]: Already loop flinging '..plrName(plr)) end
				else log("[ ❌ ]: You can't loop fling yourself") end
			else log('[ ❌ ]: No player found') end
		end
	elseif cmd == 'unloopfling' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if Flinging then
					if Flinging == plr then
						Flinging = nil
						log('[ ✅ ]: Disabled loop flinging '..plrName(plr))
					else log('[ ❌ ]: You are not loop flinging '..plrName(plr)) end
				else log('[ ❌ ]: You are not loop flinging '..plrName(plr)) end
			else log('[ ❌ ]: No player found') end
		else 
			if Flinging then
				Flinging = nil
				log('[ ✅ ]: Disabled loop flinging')
			else log('[ ❌ ]: You are not loop flinging anyone') end
		end
	elseif cmd == 'antifling' then
		if not Toggles.AntiFling then
			log('[ ✅ ]: Enabled antifling')
			Toggles.AntiFling = true
			repeat
				for _, plr in pairs(game.Players:GetChildren()) do
					if plr ~= fag then
						for _, v in pairs(plr.Character:GetDescendants()) do
							if v:IsA('BasePart') and v.CanCollide and (v:FindFirstChildOfClass('BodyThrust') or v:FindFirstChildOfClass('BodyPosition') or v:FindFirstChildOfClass('BodyForce') or v:FindFirstChildOfClass('BodyVelocity') or v:FindFirstChildOfClass('BodyAngularVelocity') or v:FindFirstChildOfClass('BodyGyro')) then
								v.CanCollide = false
							else continue end
						end
					else continue end
				end
				wait(1)
			until not Toggles.AntiFling
		else log('[ ❌ ]: Already enabled antifling') end
	elseif cmd == 'unantifling' or cmd == 'noantifling' then
		if Toggles.AntiFling then
			log('[ ✅ ]: Disabled antifling')
			Toggles.AntiFling = false
		else log('[ ❌ ]: Already disabled antifling') end
	elseif cmd == 'antitaser' or cmd == 'taserbypass' then
		if not Toggles.TaserBypass then
			local team = getTeam()
			if team ~= 'Bright blue' then
				log('[ ✅ ]: Enabled taser bypass')
				Toggles.TaserBypass = true
				repeat wait(.1)
					local animations = fag.Character.Humanoid:GetPlayingAnimationTracks()
					for _, v in next, animations do
						if v.Animation.AnimationId == 'rbxassetid://279227693' or v.Animation.AnimationId == 'rbxassetid://279229192' then
							v:Stop()
							game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
							fag.Character.Humanoid.WalkSpeed = 16
							fag.Character.Humanoid.JumpPower = 50
						else continue end
					end
				until not Toggles.TaserBypass
			else log("[ ❌ ]: You can't enable taser bypass") end
		else log('[ ❌ ]: Already enabled taser bypass') end
	elseif cmd == 'unantitaser' or cmd == 'untaserbypass' or cmd == 'noantitaser' or cmd == 'notaserbypass' then
		if Toggles.TaserBypass then
			log('[ ✅ ]: Disabled taser bypass')
			Toggles.TaserBypass = false
		else log('[ ❌ ]: Already disabled taser bypass') end
	elseif cmd == 'antishield' or cmd == 'antishields' or cmd == 'noshields' then
		if not Toggles.AntiShield then
			local team = getTeam()
			log('[ ✅ ]: Enabled anti shields')
			Toggles.AntiShield = true
			repeat wait(.1)
				for _, plr in pairs(game.Players:GetChildren()) do
					if workspace:FindFirstChild(plr.Name) and workspace[plr.Name].Torso:FindFirstChild('ShieldFolder') and workspace[plr.Name].Torso.ShieldFolder:FindFirstChild('shield') then
						plr.Character.Torso.ShieldFolder.shield.Transparency = 1
						plr.Character.Torso.ShieldFolder.shield.Mesh.MeshId = ''
						plr.Character.Torso.ShieldFolder.shield.CanCollide = false
						plr.Character.Torso.ShieldFolder.shield.Size = Vector3.new(0,0,0)
					else continue end
				end
			until not Toggles.AntiShield
		else log('[ ❌ ]: Already enabled anti sheilds') end
	elseif cmd == 'unantishield' or cmd == 'unantishields' or cmd == 'shields' then
		if Toggles.AntiShield then
			log('[ ✅ ]: Disabled anti sheilds')
			Toggles.AntiShield = false
			for _, plr in pairs(game.Players:GetChildren()) do
				if workspace:FindFirstChild(plr.Name) and workspace[plr.Name].Torso:FindFirstChild('ShieldFolder') and workspace[plr.Name].Torso.ShieldFolder:FindFirstChild('shield') then
					workspace[plr.Name].Torso.ShieldFolder.shield.Transparency = 0
					workspace[plr.Name].Torso.ShieldFolder.shield.Mesh.MeshId = 'rbxassetid://82265009'
					workspace[plr.Name].Torso.ShieldFolder.shield.CanCollide = true
					plr.Character.Torso.ShieldFolder.shield.Size = Vector3.new(2.6, 4.2, 0.4)
				end
			end
		else log('[ ❌ ]: Already disabled anti sheilds') end
	elseif cmd == 'fastpunch' or cmd == 'speedpunch' then
		if not Toggles.FastPunch then
			log('[ ✅ ]: Enabled fast punching')
			Toggles.FastPunch = true
			repeat wait(.1)
				if getsenv(fag.Character.ClientInputHandler).cs.isFighting ~= false then
					getsenv(fag.Character.ClientInputHandler).cs.isFighting = false
				end
			until not Toggles.FastPunch
		else log('[ ❌ ]: Already enabled fast punching') end
	elseif cmd == 'unfastpunch' or cmd == 'unspeedpunch' or cmd == 'slowpunch' or cmd == 'nofastpunch' then
		if Toggles.FastPunch then
			Toggles.FastPunch = false
			log('[ ✅ ]: Disabled fast punching')
		else log('[ ❌ ]: Already disabled fast punching') end
	elseif cmd == 'onepunch' or cmd == 'oneshotpunch' then
		if not Toggles.OnePunch then
			log('[ ✅ ]: Enabled one punching')
			Toggles.OnePunch = true
			local func
			func = Mouse.KeyDown:connect(function(k)
				if not Toggles.OnePunch then func:Disconnect() end
				if k:lower() == 'f' and not punchCooldown then
					onePunch()
				end	
			end)
		else log('[ ❌ ]: Already enabled one punching') end
	elseif cmd == 'unonepunch' or cmd == 'unoneshotpunch' or cmd == 'noonepunch' or cmd == 'nooneshotpunch' then
		if Toggles.OnePunch then
			Toggles.OnePunch = false
			log('[ ✅ ]: Disabled one punching')
		else log('[ ❌ ]: Already disabled one punching') end
	elseif cmd == 'freepunch' then
		if not Toggles.FreePunch then
			log('[ ✅ ]: Enabled free punching')
			Toggles.FreePunch = true
			local func
			func = Mouse.KeyDown:connect(function(k)
				if not Toggles.FreePunch then func:Disconnect() end
				if k:lower() == 'f' then
					if getsenv(fag.Character.ClientInputHandler).cs.isRunning ~= false then
						getsenv(fag.Character.ClientInputHandler).cs.isRunning = false
						wait(.1)
						getsenv(fag.Character.ClientInputHandler).cs.isRunning = true
					end
					if getsenv(fag.Character.ClientInputHandler).cs.isCrouching ~= false then
						getsenv(fag.Character.ClientInputHandler).cs.isCrouching = false
						wait(.1)
						getsenv(fag.Character.ClientInputHandler).cs.isCrouching = true
					end
				end		
			end)
		else log('[ ❌ ]: Already enabled free punching') end
	elseif cmd == 'unfreepunch' or cmd == 'nofreepunch' then
		if Toggles.FreePunch then
			Toggles.FreePunch = false
			log('[ ✅ ]: Disabled free punching')
		else log('[ ❌ ]: Already disabled free punching') end
	elseif cmd == 'superpunch' or cmd == 'allpunch' then
		if not Toggles.OnePunch then
			log('[ ✅ ]: Enabled super punching')
			Toggles.FastPunch = false
			Toggles.FreePunch = false
			Toggles.OnePunch = false
			Toggles.SuperPunch = true
			local func
			func = Mouse.KeyDown:connect(function(k)
				if not Toggles.SuperPunch then func:Disconnect() end
				if k:lower() == 'f' and not punchCooldown then
					onePunch()
					if getsenv(fag.Character.ClientInputHandler).cs.isFighting ~= false then
						getsenv(fag.Character.ClientInputHandler).cs.isFighting = false
					end
					if getsenv(fag.Character.ClientInputHandler).cs.isRunning ~= false then
						getsenv(fag.Character.ClientInputHandler).cs.isRunning = false
						wait(.1)
						getsenv(fag.Character.ClientInputHandler).cs.isRunning = true
					end
					if getsenv(fag.Character.ClientInputHandler).cs.isCrouching ~= false then
						getsenv(fag.Character.ClientInputHandler).cs.isCrouching = false
						wait(.1)
						getsenv(fag.Character.ClientInputHandler).cs.isCrouching = true
					end
				end	
			end)
		else log('[ ❌ ]: Already enabled super punching') end
	elseif cmd == 'unsuperpunch' or cmd == 'nosuperpunch' or cmd == 'unallpunch' or cmd == 'noallpunch' or cmd == 'normalpunch' then
		if Toggles.SuperPunch then
			Toggles.SuperPunch = false
			log('[ ✅ ]: Disabled super punching')
		else log('[ ❌ ]: Already disabled super punching') end
	elseif cmd == 'dropitems' then
		if not Toggles.DropItems then
			Toggles.DropItems = true
			if team ~= 'Bright blue' then
				log('[ 🔄 ]: Switching to guard team, please wait...')
				repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until fag.TeamColor.Name == 'Bright blue'
			end
			log('[ ✅ ]: Enabled item dropping')
			repeat 
				fag.Character:BreakJoints()
				workspace.Remote.loadchar:InvokeServer()
				fag.Character.HumanoidRootPart.CFrame = plrCF
				wait(.1)
			until not Toggles.DropItems
		else log('[ ❌ ]: Already enabled item dropping') end
	elseif cmd == 'undropitems' then
		if Toggles.DropItems then
			Toggles.DropItems = false
			log('[ ✅ ]: Disabled item dropping')
		else log('[ ❌ ]: Already disabled item dropping') end
	elseif cmd == 'key' or cmd == 'keycard' or cmd == 'card' then
		if args[1] then
			local plr = getPlr(args[1])
			if plr then
				if plr ~= fag then
					log('[ 🔄 ]: Attempting to give key to '..plrName(plr))
					local plrCF = getPos()
					if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
						workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
					else 
						if team ~= 'Bright blue' then
							repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until fag.TeamColor.Name == 'Bright blue' or not Toggles.FindKey
						end
						repeat wait(.1)
							fag.Character.HumanoidRootPart.CFrame = CFrame.new(-365.976562, 84.2401199, 1987.99207)
							fag.Character:BreakJoints()
							workspace.Remote.loadchar:InvokeServer()
						until not plr or workspace.Prison_ITEMS.single:FindFirstChild('Key card')
					end
					if plr then
						workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
						local char = fag.Character
						char.Humanoid.Name = 'fuck'
						local c = char.fuck:Clone()
						c.Name = 'Humanoid'
						c.Parent = char
						char.fuck:Destroy()
						workspace.CurrentCamera.CameraSubject = char
						char.Animate.Disabled = true
						wait()
						char.Animate.Disabled = false
						char.Humanoid.DisplayDistanceType = 'None'
						local tool = fag.Backpack:FindFirstChild('Key card') or fag.Character:FindFirstChild('Key card')
						tool.Parent = char
						repeat wait(.1)
							goTo(plr)
						until not plr or tool.Parent ~= fag.Character
						workspace.Remote.loadchar:InvokeServer()
						fag.Character.HumanoidRootPart.CFrame = plrCF
						if plr and plr:FindFirstChild('Character') and (plr.Backpack:FindFirstChild(tool.Name) or plr.Character:FindFirstChild(tool.Name)) then
							log('[ ✅ ]: Gave key card to '..plrName(plr))
						else log('[ ❌ ]: Failed to give key card to '..plrName(plr)) end
					else log('[ ❌ ]: Failed to give key card to '..plrName(plr)) end
				else 
					if not fag.Character:FindFirstChild('Key card') and not fag.Backpack:FindFirstChild('Key card') then
						Toggles.FindKey = true
						if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
							log('[ ✅ ]: Obtained key card') 
							Toggles.FindKey = false
						else 
							log('[ 🔄 ]: Switching to guard team, please wait...')
							if team ~= 'Bright blue' then
								repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until fag.TeamColor.Name == 'Bright blue' or not Toggles.FindKey
							end
							repeat wait(.1)
								fag.Character.HumanoidRootPart.CFrame = CFrame.new(-365.976562, 84.2401199, 1987.99207)
								fag.Character:BreakJoints()
								workspace.Remote.loadchar:InvokeServer()
							until workspace.Prison_ITEMS.single:FindFirstChild('Key card') or not Toggles.FindKey
							if Toggles.FindKey then
								workspace.Remote.loadchar:InvokeServer(nil, team)
								fag.Character.HumanoidRootPart.CFrame = plrCF
								workspace.CurrentCamera.CFrame = camCF
								workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
								log('[ ✅ ]: Obtained key card')
								Toggles.FindKey = false
							end
						end
					else log('[ ❌ ]: You already obtained a key card') end
				end
			else log('[ ❌ ]: No player found') end
		else 

			if not Toggles.FindKey then
				if not fag.Character:FindFirstChild('Key card') and not fag.Backpack:FindFirstChild('Key card') then
					Toggles.FindKey = true
					if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
						workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
						log('[ ✅ ]: Obtained key card') 
						Toggles.FindKey = false
					else 
						log('[ 🔄 ]: Switching to guard team, please wait...')
						if team ~= 'Bright blue' then
							repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until fag.TeamColor.Name == 'Bright blue' or not Toggles.FindKey
						end
						repeat wait(.1)
							fag.Character.HumanoidRootPart.CFrame = CFrame.new(-365.976562, 84.2401199, 1987.99207)
							fag.Character:BreakJoints()
							workspace.Remote.loadchar:InvokeServer()
						until workspace.Prison_ITEMS.single:FindFirstChild('Key card') or not Toggles.FindKey
						if Toggles.FindKey then
							workspace.Remote.loadchar:InvokeServer(nil, team)
							fag.Character.HumanoidRootPart.CFrame = plrCF
							workspace.CurrentCamera.CFrame = camCF
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
							log('[ ✅ ]: Obtained key card')
							Toggles.FindKey = false
						end
					end
				else log('[ ❌ ]: You already obtained a key card') end
			else log('[ ❌ ]: Already finding key card') end
		end
	elseif cmd == 'findkey' or cmd == 'findkeycard' or cmd == 'findcard' then
		if not Toggles.FindKey then
			if not fag.Character:FindFirstChild('Key card') and not fag.Backpack:FindFirstChild('Key card') then
				if workspace.Prison_ITEMS.single:FindFirstChild('Key card') then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
					log('[ ✅ ]: Obtained key card') 
				else 
					Toggles.FindKey = true
					log('[ 🔄 ]: Finding key card...')
					spawn(function()
						repeat wait(.1) until workspace.Prison_ITEMS.single:FindFirstChild('Key card')
						workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Key card'].ITEMPICKUP)
						log('[ ✅ ]: Obtained key card')
					end)
					Toggles.FindKey = false
				end
			else log('[ ❌ ]: You already obtained a key card') end
		else log('[ ❌ ]: Already finding key card') end
	elseif cmd == 'unfindkey' or cmd == 'unfindkeycard' or cmd == 'unfindcard' then
		if not Toggles.FindKey then
			Toggles.FindKey = false
			log('[ ✅ ]: Stopped finding key card')
		else log('[ ❌ ]: Already stopped finding key card') end
	elseif cmd == 'crudeknife' or cmd == 'knife' or cmd == 'shank' then
		if not fag.Character:FindFirstChild('Crude Knife') and not fag.Backpack:FindFirstChild('Crude Knife') then
			local team = getTeam()
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			log('[ ✅ ]: Obtained crude knife')
		else log('[ ❌ ]: You already obtained a knife') end
	elseif cmd == 'superknife' or cmd == 'oneshotknife' or cmd == 'supershank' then
		local obtained
		if not fag.Character:FindFirstChild('Crude Knife') and not fag.Backpack:FindFirstChild('Crude Knife') then
			local team = getTeam()
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Crude Knife'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			obtained = true
		end
		Toggles.SuperKnife = true
		if obtained then log('[ ✅ ]: Obtained super knife') else log('[ ✅ ]: Enabled super knife') end
		local tool = fag.Character:FindFirstChild('Crude Knife') or fag.Backpack:FindFirstChild('Crude Knife')
		tool.Activated:Connect(function()
			if Toggles.SuperKnife and not knifeCooldown then
				local handle = fag.Character['Crude Knife'].Handle
				handle.Touched:connect(function(h)
					if Toggles.SuperKnife and not knifeCooldown then
						if game.Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= fag and workspace[h.Parent.Name].Humanoid.Health > 0 then
							knifeCooldown = true
							for i = 1,15 do
								ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
							end
							knifeCooldown = false
						else knifeCooldown = false end
					end
				end)
			end
		end)
	elseif cmd == 'unsuperknife' or cmd == 'unoneshotknife' or cmd == 'unsupershank' or cmd == 'normalknife' then
		if not fag.Character:FindFirstChild('Crude Knife') and not fag.Backpack:FindFirstChild('Crude Knife') then
			Toggles.SuperKnife = false
			log('[ ❌ ]: Already disabled super knife')
		else 
			if Toggles.SuperKnife then
				Toggles.SuperKnife = false
				log('[ ✅ ]: Disabled super knife')
			else log('[ ❌ ]: Already disabled super knife') end
		end
	elseif cmd == 'hammer' then
		if not fag.Character:FindFirstChild('Hammer') and not fag.Backpack:FindFirstChild('Hammer') then
			local team = getTeam()
			if team ~= 'Bright blue' then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Hammer'].ITEMPICKUP)
			else 
				workspace.Remote.TeamEvent:FireServer('Medium stone grey')
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.single['Hammer'].ITEMPICKUP)
				workspace.Remote.TeamEvent:FireServer('Bright blue')
			end
			log('[ ✅ ]: Obtained a hammer')
		else log('[ ❌ ]: You already obtained a hammer') end
	elseif cmd == 'baseballbat' or cmd == 'bat' then
		if not fag.Character:FindFirstChild('Bat') and not fag.Backpack:FindFirstChild('Bat') then
			local tool = Instance.new('Tool')
			tool.Name = 'Bat'
			tool.GripPos = Vector3.new(0, -1.15, 0)
			local handle = Instance.new('Part', tool)
			handle.Name = 'Handle'
			handle.Size = Vector3.new(0.4, 5, 0.4)
			local anim = Instance.new('Animation', tool)
			anim.AnimationId = 'rbxassetid://218504594'
			local track = fag.Character.Humanoid.Animator:LoadAnimation(anim)
			tool.Parent = fag.Backpack
			tool.Activated:Connect(function()
				if not batCooldown then
					track:Play()
					handle.Touched:Connect(function(h)
						if not batCooldown then
							if game.Players:FindFirstChild(h.Parent.Name) and not Whitelisted[h.Parent.Name] and h.Parent ~= fag and workspace[h.Parent.Name].Humanoid.Health > 0 then
								batCooldown = true
								for i = 1,15 do
									ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
								end
								batCooldown = false
							else batCooldown = false end
						end
					end)
				end
			end)
			log('[ ✅ ]: Obtained a baseball bat')
		else log('[ ❌ ]: You already obtained baseball bat') end
	elseif cmd == 'm9' or cmd == 'pistol' then
		if not fag.Character:FindFirstChild('M9') and not fag.Backpack:FindFirstChild('M9') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
			log('[ ✅ ]: Obtained M9')
		else log('[ ❌ ]: You already obtained M9') end
	elseif cmd == 'remington870' or cmd == 'remington' or cmd == 'shotgun' then
		if not fag.Character:FindFirstChild('Remington 870') and not fag.Backpack:FindFirstChild('Remington 870') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
			log('[ ✅ ]: Obtained Remington 870')
		else log('[ ❌ ]: You already obtained Remington 870') end
	elseif cmd == 'ak47' or cmd == 'ak' then
		if not fag.Character:FindFirstChild('AK-47') and not fag.Backpack:FindFirstChild('AK-47') then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
			log('[ ✅ ]: Obtained AK-47')
		else log('[ ❌ ]: You already obtained AK-47') end
	elseif cmd == 'm4a1' or cmd == 'm4' or cmd == 'ar' then
		if not fag.Character:FindFirstChild('M4A1') and not fag.Backpack:FindFirstChild('M4A1') then
			if SWAT then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
				log('[ ✅ ]: Obtained M4A1')
			else 
				notif('You need the SWAT gamepass to use this command')  
				log('[ ❌ ]: You need the SWAT gamepass to use this command')  
			end
		else log('[ ❌ ]: You already obtained M4A1') end
	elseif cmd == 'shield' then
		if not fag.Character:FindFirstChild('Riot Shield') and not fag.Backpack:FindFirstChild('Riot Shield') then
			if SWAT then
				local team = getTeam()
				if team == 'Bright blue' then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Riot Shield'].ITEMPICKUP)
				else 
					repeat wait(.1) workspace.Remote.TeamEvent:FireServer('Bright blue') until getTeam() == 'Bright blue'
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Riot Shield'].ITEMPICKUP)
					if team ~= 'Really red' then
						workspace.Remote.TeamEvent:FireServer(team)
					else
						workspace.Remote.loadchar:InvokeServer(nil, team)
						fag.Character.HumanoidRootPart.CFrame = plrCF
						workspace.CurrentCamera.CFrame = camCF 
					end
				end
				log('[ ✅ ]: Obtained Riot Shield')
			else 
				notif('You need the SWAT gamepass to use this command')  
				log('[ ❌ ]: You need the SWAT gamepass to use this command')  
			end
		else log('[ ❌ ]: You already obtained Riot Shield') end
	elseif cmd == 'gun' or cmd == 'guns' then
		local inv = #fag.Backpack:GetChildren()
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
		if SWAT then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
		end
		if #fag.Backpack:GetChildren() ~= inv then
			log('[ ✅ ]: Obtained all guns')
		else log('[ ❌ ]: Already obtained all guns') end
	elseif cmd == 'autogun' or cmd == 'autoguns' then
		if not Toggles.AutoGuns then
			Toggles.AutoGuns = true
			log('[ ✅ ]: Enabled auto guns')
			repeat wait(.1)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M9'].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['Remington 870'].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['AK-47'].ITEMPICKUP)
				if SWAT then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver['M4A1'].ITEMPICKUP)
				end
			until not Toggles.AutoGuns
		else log('[ ❌ ]: Already enabled auto guns') end
	elseif cmd == 'unautogun' or cmd == 'unautoguns' then
		if Toggles.AutoGuns then
			Toggles.AutoGuns = false
			log('[ ✅ ]: Disabled auto guns')
		else log('[ ❌ ]: Already disabled auto guns') end
	elseif cmd == 'oneshotgun' then
		if fag.Character:FindFirstChildOfClass('Tool') then
			local tool = fag.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				local req = require(tool.GunStates)
				req.Spread = 0
				req.Bullets = 25
				req.Damage = math.huge
				log('[ ✅ ]: Made '..tool.Name..' one shot')
			else log('[ ❌ ]: Equip a gun before using this command') end
		else log('[ ❌ ]: Equip a gun before using this command') end
	elseif cmd == 'firerate' then
		if fag.Character:FindFirstChildOfClass('Tool') then
			local tool = fag.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if args[1] and tonumber(args[1]) then
					local req = require(tool.GunStates)
					req.FireRate = tonumber(args[1])
					log('[ ✅ ]: Set fire rate for '..tool.Name..' to '..args[1])
				else log('[ ❌ ]: Input a valid number') end
			else log('[ ❌ ]: Equip a gun before using this command') end
		else log('[ ❌ ]: Equip a gun before using this command') end
	elseif cmd == 'autofire' or cmd == 'rapidfire' then
		if fag.Character:FindFirstChildOfClass('Tool') then
			local tool = fag.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				local req = require(tool.GunStates)
				req.FireRate = 0
				req.AutoFire = true
				log('[ ✅ ]: Made '..tool.Name..' rapid fire')
			else log('[ ❌ ]: Equip a gun before using this command') end
		else log('[ ❌ ]: Equip a gun before using this command') end
	elseif cmd == 'modgun' or cmd == 'supergun' then
		if fag.Character:FindFirstChildOfClass('Tool') then
			local tool = fag.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if not ModdedGuns[tool.Name] then
					repeat wait(.1)
						if fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) then
							local tool = fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) 
							local req = require(tool.GunStates)
							if tool.Name == 'Remington 870' then
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = 0.225
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							else
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = -math.huge
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							end
							if req.CurrentAmmo <= 0 then
								tool.Handle:Destroy()
								repeat wait(.1) until not tool:FindFirstChild('Handle')
								tool.Parent = fag.Character
								tool:Destroy()
								workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
								tool = fag.Backpack:FindFirstChild(tool.Name)
								tool.Parent = fag.Character
								req = require(tool.GunStates)
								req.MaxAmmo = req.MaxAmmo
								req.StoredAmmo = req.StoredAmmo
								req.AmmoPerClip = req.AmmoPerClip
								req.CurrentAmmo = req.CurrentAmmo
								req.Damage = math.huge
								req.Range = math.huge
								req.FireRate = -math.huge
								req.Bullets = 1
								req.Spread = 0
								req.AutoFire = true
							end
						end
					until not ModdedGuns[tool.Name]
					log('[ ✅ ]: Enabled gun mods for '..tool.Name)
				else log('[ ❌ ]: Already enabled gun mods for '..tool.Name) end
			else log('[ ❌ ]: Equip a gun before using this command') end
		else log('[ ❌ ]: Equip a gun before using this command') end
	elseif cmd == 'unmodgun' or cmd == 'unsupergun'  then
		if fag.Character:FindFirstChildOfClass('Tool') then
			local tool = fag.Character:FindFirstChildOfClass('Tool')
			if tool:FindFirstChild('GunStates') then
				if ModdedGuns[tool.Name] then
					ModdedGuns[tool.Name] = nil
					tool.Handle:Destroy()
					local toolPar = tool.Parent
					repeat wait(.1) until not tool:FindFirstChild('Handle')
					tool.Parent = fag.Character
					tool:Destroy()				
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
					fag.Backpack[tool.Name].Parent = toolPar
					log('[ ✅ ]: Disabled gun mods for '..tool.Name)
				else log('[ ❌ ]: Already disabled gun mods for '..tool.Name) end
			else log('[ ❌ ]: Equip a gun before using this command') end
		else log('[ ❌ ]: Equip a gun before using this command') end
	elseif cmd == 'automodguns' or cmd == 'autosuperguns' then
		if not Toggles.AutoModGuns then
			Toggles.AutoModGuns = true
			log('[ ✅ ]: Enabled auto mod guns')
			spawn(function()
				if fag.Character:FindFirstChildOfClass('Tool') and fag.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then
					local tool = fag.Character:FindFirstChildOfClass('Tool')
					if not ModdedGuns[tool.Name] then
						ModdedGuns[tool.Name] = true
						repeat wait(.1)
							if fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) then
								local tool = fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) 
								local req = require(tool.GunStates)
								if tool.Name == 'Remington 870' then
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = 0.225
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								else
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = -math.huge
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								end
								if req.CurrentAmmo <= 0 then
									tool.Handle:Destroy()
									repeat wait(.1) until not tool:FindFirstChild('Handle')
									tool.Parent = fag.Character
									tool:Destroy()
									workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
									tool = fag.Backpack:FindFirstChild(tool.Name)
									tool.Parent = fag.Character
									req = require(tool.GunStates)
									req.MaxAmmo = req.MaxAmmo
									req.StoredAmmo = req.StoredAmmo
									req.AmmoPerClip = req.AmmoPerClip
									req.CurrentAmmo = req.CurrentAmmo
									req.Damage = math.huge
									req.Range = math.huge
									req.FireRate = -math.huge
									req.Bullets = 1
									req.Spread = 0
									req.AutoFire = true
								end
							end
						until not ModdedGuns[tool.Name] or not Toggles.AutoModGuns
					end
				end
			end)
			repeat wait(.1)
				for _, tool in pairs(fag.Backpack:GetChildren()) do
					if tool:FindFirstChild('GunStates') and not ModdedGuns[tool.Name] then
						ModdedGuns[tool.Name] = true
						spawn(function()
							repeat wait(.1)
								if fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) then
									local tool = fag.Character:FindFirstChild(tool.Name) or fag.Backpack:FindFirstChild(tool.Name) 
									local req = require(tool.GunStates)
									if tool.Name == 'Remington 870' then
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = 0.225
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									else
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = -math.huge
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									end
									if req.CurrentAmmo <= 0 then
										tool.Handle:Destroy()
										repeat wait(.1) until not tool:FindFirstChild('Handle')
										tool.Parent = fag.Character
										tool:Destroy()
										workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
										tool = fag.Backpack:FindFirstChild(tool.Name)
										tool.Parent = fag.Character
										req = require(tool.GunStates)
										req.MaxAmmo = req.MaxAmmo
										req.StoredAmmo = req.StoredAmmo
										req.AmmoPerClip = req.AmmoPerClip
										req.CurrentAmmo = req.CurrentAmmo
										req.Damage = math.huge
										req.Range = math.huge
										req.FireRate = -math.huge
										req.Bullets = 1
										req.Spread = 0
										req.AutoFire = true
									end
								end
							until not ModdedGuns[tool.Name] or not Toggles.AutoModGuns
						end)
					end
				end
			until not Toggles.AutoModGuns
		else log('[ ❌ ]: Already enabled auto mod guns') end
	elseif cmd == 'unautomodguns' or cmd == 'unautosuperguns' then
		if Toggles.AutoModGuns then
			Toggles.AutoModGuns = false
			ModdedGuns = {}
			if fag.Character:FindFirstChildOfClass('Tool') and fag.Character:FindFirstChildOfClass('Tool'):FindFirstChild('GunStates') then
				local tool = fag.Character:FindFirstChildOfClass('Tool')
				tool.Handle:Destroy()
				local toolPar = tool.Parent
				repeat wait(.1) until not tool:FindFirstChild('Handle')
				tool.Parent = fag.Character
				tool:Destroy()				
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
				fag.Backpack[tool.Name].Parent = toolPar
			end
			for _, tool in pairs(fag.Backpack:GetChildren()) do
				if tool:FindFirstChild('GunStates') then
					tool.Handle:Destroy()
					local toolPar = tool.Parent
					repeat wait(.1) until not tool:FindFirstChild('Handle')
					tool.Parent = fag.Character
					tool:Destroy()				
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[tool.Name].ITEMPICKUP)
					fag.Backpack[tool.Name].Parent = toolPar
				end
			end
			log('[ ✅ ]: Disabled auto mod guns')
		else log('[ ❌ ]: Already disabled auto mod guns') end
	elseif cmd == 'gate' or cmd == 'frontgate' then
		local dest = CFrame.new(492.763, 98.039917, 2216.74878)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the gate')
			else log('[ ❌ ]: Failed to teleport to the gate') end
		else log('[ ❌ ]: Already teleported to the gate') end
	elseif cmd == 'opengate' or cmd == 'openfrontgate' then
		if not Toggles.GateOpen then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons['Prison Gate']['Prison Gate'])
			spawn(function()
				Toggles.GateOpen = true
				wait(13)
				Toggles.GateOpen = false
			end)
			log('[ ✅ ]: Opened gate')
		else log('[ ❌ ]: Already opened gate') end
	elseif cmd == 'gateroom' then
		local dest = CFrame.new(504.324646, 102.039917, 2246.05103)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to gate room')
			else log('[ ❌ ]: Failed to teleport to the gate room') end
		else log('[ ❌ ]: Already teleported to the gate room') end
	elseif cmd == 'gatetower' then
		local dest =  CFrame.new(502.72168, 125.039917, 2321.00098)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to gate tower')
			else log('[ ❌ ]: Failed to teleport to the gate tower') end
		else log('[ ❌ ]: Already teleported to the gate tower') end
	elseif cmd == 'tower' then
		local dest = CFrame.new(823.014832, 130.039886, 2589.46802)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the tower')
			else log('[ ❌ ]: Failed to teleport to the tower') end
		else log('[ ❌ ]: Already teleported to the tower') end
	elseif cmd == 'yard' then
		local dest = CFrame.new(780.596985, 97.9999237, 2468.43457)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the yard')
			else log('[ ❌ ]: Failed to teleport to the yard') end
		else log('[ ❌ ]: Already teleported to the yard') end
	elseif cmd == 'armory' or cmd == 'guardroom' then
		local dest = CFrame.new(836.632568, 99.9899826, 2260.18994)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the armory')
			else log('[ ❌ ]: Failed to teleport to the armory') end
		else log('[ ❌ ]: Already teleported to the armory') end
	elseif cmd == 'nexus' or cmd == 'prison' then
		local dest = CFrame.new(915.108398, 99.9899826, 2378.2648)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the nexus')
			else log('[ ❌ ]: Failed to teleport to the nexus') end
		else log('[ ❌ ]: Already teleported to the nexus') end
	elseif cmd == 'backnexus' then
		local dest = CFrame.new(980.860535, 99.9899826, 2316.87769)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the back of the nexus')
			else log('[ ❌ ]: Failed to teleport to the back of the nexus') end
		else log('[ ❌ ]: Already teleported to the back of the nexus') end
	elseif cmd == 'sewer' or cmd == 'sewers' then
		local dest = CFrame.new(916.570679, 78.7003937, 2323.39136)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the sewers')
			else log('[ ❌ ]: Failed to teleport to the sewers') end
		else log('[ ❌ ]: Already teleported to the back of the sewers') end
	elseif cmd == 'cafeteria' or cmd == 'cafe' then
		local dest = CFrame.new(919.365601, 99.9899368, 2285.1748)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the cafeteria')
			else log('[ ❌ ]: Failed to teleport to the cafeteria') end
		else log('[ ❌ ]: Already teleported to the cafeteria') end
	elseif cmd == 'roof' then
		local dest = CFrame.new(917.232056, 139.926025, 2314.79761)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the roof')
			else log('[ ❌ ]: Failed to teleport to the roof') end
		else log('[ ❌ ]: Already teleported to the roof') end
	elseif cmd == 'crimbase' or cmd == 'criminalbase' or cmd == 'base' then
		local dest = CFrame.new(-943.724854, 94.1287613, 2064.69312)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the criminal base')
			else log('[ ❌ ]: Failed to teleport to the criminal base') end
		else log('[ ❌ ]: Already teleported to the criminal base') end
	elseif cmd == 'neutralspawn' then
		local dest = CFrame.new(880.4111328125, 27.78998565673828, 2349.805419921875)
		if plrCF ~= dest.Position then
			pcall(function() 
				fag.Character.HumanoidRootPart.CFrame = dest
			end)
			if fag.Character.Head.CFrame.X == fag.Character.HumanoidRootPart.CFrame.X then
				log('[ ✅ ]: Teleported to the neutral spawn')
			else log('[ ❌ ]: Failed to teleport to the neutral spawn') end
		else log('[ ❌ ]: Already teleported to the neutral spawn') end
	elseif cmd == 'antivoid' or cmd == 'antifall' then
		if not Toggles.AntiVoid then
			Toggles.AntiVoid = true
			log('[ ✅ ]: Enabled anti void')
			repeat wait(.1)
				if fag:FindFirstChild('Character') and fag.Character:FindFirstChild('HumanoidRootPart') and fag.Character.HumanoidRootPart.Position.Y < 1 then
					fag.Character.HumanoidRootPart.CFrame = CFrame.new(780.596985, 97.9999237, 2468.43457)
				end
			until not Toggles.AntiVoid
		else log('[ ❌ ]: Already enabled anti void') end
	elseif cmd == 'unantivoid' or cmd == 'unantifall' then
		if Toggles.AntiVoid then
			Toggles.AntiVoid = false
			log('[ ✅ ]: Disabled anti void')
		else log('[ ❌ ]: Already disabled anti void') end
	elseif cmd == 'antiafk' then
		if not Toggles.AntiAfk then
			Toggles.AntiAfk = true
			log('[ ✅ ]: Enabled anti-afk')
			local VirtualUser = game:GetService("VirtualUser")
			local func
			func = fag.Idled:connect(function()
				if not Toggles.AntiAfk then func:Disconnect() end
				VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
				wait(1)
				VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			end)
		else log('[ ❌ ]: Already enabled anti-afk') end
	elseif cmd == 'unantiafk' then
		if Toggles.AntiAfk then
			Toggles.AntiAfk = false
			log('[ ✅ ]: Disabled anti-afk')
		else log('[ ❌ ]: Already disabled anti-afk') end
	elseif cmd == 'rejoin' or cmd == 'rj' then
		log('[ ✅ ]: Rejoining server')
		notif('Rejoining server')
		TeleportService:Teleport(game.PlaceId, fag)
	elseif cmd == 'serverhop' or cmd == 'shop' then
		log('[ ✅ ]: Joining new server')
		notif('Joining new server')
		local httprequest =  (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
		if httprequest then
			local servers = {}
			local req = httprequest({Url = string.format('https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100', game.PlaceId)})
			local body = HttpService:JSONDecode(req.Body)
			if body and body.data then
				for i, v in next, body.data do
					if type(v) == 'table' and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
						table.insert(servers, 1, v.id)
					end 
				end
			end
			if #servers > 0 then
				TeleportService:TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], fag)
			else
				log('[ ❌ ]: Failed to server hop')
				notif('Failed to server hop')
			end
		else TeleportService:Teleport(game.PlaceId) end
	elseif cmd == 'prefix' or cmd == 'setprefix' then
		if args[1] then
			if prefix ~= args[1] then
				prefix = args[1]
				_G.settings.prefix = args[1]
				save()
				if ChatCmd then CmdBar.PlaceholderText = 'Command Bar ('..args[1]..')' end
				log('[ ✅ ]: Set prefix to '..args[1])
			else log('[ ❌ ]: Already set prefix to '..args[1]) end
		else 
			log('[ 📄 ]: Prefix is '..prefix)
			notif('Prefix is '..prefix)
		end
	elseif cmd == 'notifs' or cmd == 'notifications' then
		if not notifs then
			notifs = true
			_G.settings.notifs = true
			save()
			log('[ ✅ ]: Enabled notifications')
			notif('Enabled notifications')
		else log('[ ❌ ]: Already enabled notifications') end
	elseif cmd == 'nonotifs' or cmd == 'nonotifications' then
		if not notifs then
			notif('Disabled notifications')
			notifs = false
			_G.settings.notifs = false
			save()
			log('[ ✅ ]: Disabled notifications')
		else log('[ ❌ ]: Already disabled notifications') end
	elseif cmd == 'chatcmd' then
		if not ChatCmd then
			ChatCmd = true
			_G.settings.ChatCmd = true
			save()
			CmdBar.PlaceholderText = 'Command Bar ('..prefix..')'
			log('[ ✅ ]: Enabled chat commands')
			notif('Enabled chat commands')
		else log('[ ❌ ]: Already enabled chat commands') end
	elseif cmd == 'unchatcmd' or cmd == 'nochatcmd' then
		if ChatCmd then
			notif('Disabled notifications')
			ChatCmd = false
			_G.settings.ChatCmd = false
			save()
			CmdBar.PlaceholderText = 'Command Bar'
			log('[ ✅ ]: Disabled chat commands')
			notif('Disabled chat commands')
		else log('[ ❌ ]: Already disabled chat commands') end
	elseif cmd == 'logs' or cmd == 'openlogs' then
		toggleLogs(true)
	elseif cmd == 'nologs' or cmd == 'closelogs' then
		toggleLogs(false)
	elseif cmd == 'version' or cmd == 'ver' then
		if pcall(function() ls('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/version') end) then
			if ver ~= _Version then
				log('[ ⚠️ ]: Please update to new version: '.._Version)
				notif('Please update to new version: '.._Version)
			else 
				log('[ 📄 ]: Version is up-to-date')
				notif('Version is up-to-date')
			end
		end
	elseif cmd == 'reload' or cmd == 'reloadgui' or cmd == 'reloadscript' then
		ls('https://raw.githubusercontent.com/senorkal/YmirAdmin/main/source')
	elseif cmd == 'detroy' or cmd == 'destroygui' or cmd == 'destroyscript' then
		CmdGUI:Remove()
	end
end
--//vvv GUI FUNCTIONS vvv\\--
CmdBar.Changed:Connect(function()
	if CmdBar.Text ~= '' then
		local args = string.split(CmdBar.Text, ' ')
		local cmd
		if args[2] then cmd = args[1] else cmd = CmdBar.Text end
		CmdHandler.CanvasPosition = Vector2.new(0,0)
		for _, v in pairs(CmdHandler:GetChildren()) do
			if v:IsA('TextButton') then
				if not string.find(string.lower(v.Text),string.lower(cmd)) then
					v.Visible = false
				else 
					if v.Visible == false then v.Visible = true end
				end
			end
		end
	else
		for _, v in pairs(CmdHandler:GetChildren()) do
			if v:IsA('TextButton') then
				if not v.Visible then
					v.Visible = true
				end
			end
		end
	end
end)

CmdBar.FocusLost:Connect(function(_)
	if _ then 
		local args = string.split(CmdBar.Text, ' ')
		local cmd = args[1]:lower()
		table.remove(args, 1)
		CmdBar.Text = ''
		executeCmd(cmd, args)
	end
end)
--//vvv CHAT FUNCTIONS vvv\\--
local chatbox = game.WaitForChild(fag.PlayerGui, 'Chat').Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
addFunction(chatbox:GetPropertyChangedSignal('Text'):Connect(function()
	if ChatCmd then
		local p = string.match(chatbox.Text, '^%s*(.)')
		if p == prefix then
			local txt = chatbox.Text:gsub('%'..prefix, ''):split(' ')[1]:lower()
			if txt ~= '' then
				CmdHandler.CanvasPosition = Vector2.new(0, 0)
				for _, v in pairs(CmdHandler:GetChildren()) do
					if v:IsA('TextButton') then
						if not string.find(string.lower(v.Text),string.lower(txt)) then
							v.Visible = false
						else 
							if v.Visible == false then v.Visible = true end
						end
					end
				end
			else
				for _, v in pairs(CmdHandler:GetChildren()) do
					if v:IsA('TextButton') then
						if not v.Visible then
							v.Visible = true
						end
					end
				end
			end
		else 
			for _, v in pairs(CmdHandler:GetChildren()) do
				if v:IsA('TextButton') then
					if not v.Visible then
						v.Visible = true
					end
				end
			end
		end
	end
end))

addFunction(chatbox.FocusLost:Connect(function()
	if ChatCmd then
		for _, v in pairs(CmdHandler:GetChildren()) do
			if v:IsA('TextButton') then
				if not v.Visible then
					v.Visible = true
				end
			end
		end
		return
	end
end))

addFunction(ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(d)
	if ChatCmd then
		local plr = game.Players:FindFirstChild(d.FromSpeaker)
		local c = d.Message
		if plr == fag then
			local p = string.match(c, '^%s*(.)')
			if p == prefix then
				local args = c:gsub('%'..prefix, ''):split(' ')
				local cmd = args[1]:lower()
				table.remove(args, 1)
				executeCmd(cmd, args)
			end
		end
	else return end
end))
--//vvv DESTROY GUI vvv\\--
addFunction(CmdGUI:GetPropertyChangedSignal('Parent'):Connect(function()
	LoopKilled = {}
	LoopTased = {}
	Whitelisted = {}
	ModdedGuns = {}
	Toggles = {}
	Spectating = nil
	Bringing = nil
	Flinging = nil
	SpamArresting = nil
	punchCooldown = nil
	knifeCooldown = nil
	batCooldown = nil
	for _, v in pairs(Functions) do v:Disconnect() end
	CmdGUI:Destroy()
end))
