local runsrv = game:GetService('RunService')
local uis = game:GetService('UserInputService')
local gui = game:GetService('StarterGui')
local fag = game.Players.LocalPlayer
local char = fag.Character
local hum = char.Humanoid
local mouse = fag:GetMouse()
local cam = workspace.CurrentCamera
local funcs = {}
local vt3 = Vector3.new
local cf = CFrame.new

local folderName = 'reanimFolder'
local reanimName = 'reanim'

if char:FindFirstChild('reanimFolder') then
	_G.reanimated = false
	char:FindFirstChild('reanimFolder'):Destroy()
	for _,v in next, char:GetDescendants() do
		if v:IsA('BasePart') then v.Anchored = true end
	end
	local humC = hum:Clone()
	hum:Destroy()
	humC.Parent = char
	return end

function addfunc(func)
	table.insert(funcs, func)
end

function notif(title, txt, dur)
	gui:SetCore('SendNotification', {
		Title = title,
		Text = txt,
		Duration = dur or 3,
	})
end
--//
for _, v in next, char:GetDescendants() do
	if v:IsA('BasePart') then
		addfunc(runsrv.Heartbeat:Connect(function()
			pcall(function()
				v.Velocity = vt3(0,-30,0)
				sethiddenproperty(fag,'MaximumSimulationRadius',math.huge)
				sethiddenproperty(fag,'SimulationRadius',999999999)
				fag.ReplicationFocus = workspace
			end)
		end))
	end
end
--//
local folder = Instance.new('Folder', char)
folder.Name = folderName

char.Archivable = true
local reanim = char:Clone()
reanim.Name = reanimName

for _, v in next, reanim:GetDescendants() do
	if v:IsA('BasePart') or v:IsA('Decal') then v.Transparency = 1  end
end

fag.Character = nil
fag.Character = char
hum.AutoRotate = false
hum.WalkSpeed = 0
hum.JumpPower = 0
char.Torso.Anchored = true
notif('Reanimation in progress', 'Please wait...')
wait(5.65)
notif('Reanimation enabled', 'Reanimated.')
--char.Animate.Disabled = true
--reanim.Animate.Disabled = true
hum.Health = 0
reanim.Parent = folder
reanim.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame*CFrame.new(0,5,0)

function create(part, par, pos, rot)
	Instance.new('Attachment',part)
	Instance.new('AlignPosition',part)
	Instance.new('AlignOrientation',part)
	Instance.new('Attachment',par)
	part.Attachment.Name = part.Name
	par.Attachment.Name = part.Name
	part.AlignPosition.Attachment0 = part[part.Name]
	part.AlignOrientation.Attachment0 = part[part.Name]
	part.AlignPosition.Attachment1 = par[part.Name]
	part.AlignOrientation.Attachment1 = par[part.Name]
	par[part.Name].Position = pos or vt3()
	part[part.Name].Orientation = rot or vt3()
	part.AlignPosition.MaxForce = 999999999
	part.AlignPosition.MaxVelocity = math.huge
	part.AlignPosition.ReactionForceEnabled = false
	part.AlignPosition.Responsiveness = math.huge
	part.AlignOrientation.Responsiveness = math.huge
	part.AlignPosition.RigidityEnabled = false
	part.AlignOrientation.MaxTorque = 999999999
	part.Massless=true
end

function setpos(part, par, pos)
	Instance.new('Attachment',part)
	Instance.new('AlignPosition',part)
	Instance.new('Attachment',par)
	part.Attachment.Name = part.Name
	par.Attachment.Name = part.Name
	part.AlignPosition.Attachment0 = part[part.Name]
	part.AlignPosition.Attachment1 = par[part.Name]
	par[part.Name].Position = pos or vt3()
	part.AlignPosition.MaxForce = 999999999
	part.AlignPosition.MaxVelocity = math.huge
	part.AlignPosition.ReactionForceEnabled = false
	part.AlignPosition.Responsiveness = math.huge
	part.Massless=true
end

for _, v in next, char:GetDescendants() do
	if v:IsA('BasePart') then
		addfunc(runsrv.Stepped:Connect(function()
			v.CanCollide = false
		end))
	end
end

for _, v in next, char:GetDescendants() do
	if v:IsA('Accessory') then	
		create(v.Handle, reanim[v.Name].Handle)
	end
end

create(char['Head'],reanim['Head'])
create(char['Torso'],reanim['Torso'])
setpos(char['HumanoidRootPart'],reanim['Torso'],vt3(0,0,0))
create(char['Right Arm'],reanim['Right Arm'])
create(char['Left Arm'],reanim['Left Arm'])
create(char['Right Leg'],reanim['Right Leg'])
create(char['Left Leg'],reanim['Left Leg'])

addfunc(uis.JumpRequest:Connect(function()
	if reanim.Humanoid.FloorMaterial ~= Enum.Material.Air then 
		reanim.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		reanim.Humanoid.Sit = false 
	end 
end))

local crouch = false
local crouchCD = false
local fighting = false
local fight = 'left'

char.ClientInputHandler.Disabled = true
reanim.ClientInputHandler.Disabled = true

local anim1 = Instance.new('Animation'); anim1.Name = 'fightL'; anim1.AnimationId = 'rbxassetid://484200742'; local fightL = reanim.Humanoid.Animator:LoadAnimation(anim1)
local anim2 = Instance.new('Animation'); anim2.Name = 'fightR'; anim2.AnimationId = 'rbxassetid://484926359'; local fightR = reanim.Humanoid.Animator:LoadAnimation(anim2) 
local anim3 = Instance.new('Animation'); anim3.Name = 'crouchI'; anim3.AnimationId = 'rbxassetid://481089053'; local crouchI = reanim.Humanoid.Animator:LoadAnimation(anim3) 
local anim4 = Instance.new('Animation'); anim4.Name = 'crouchW'; anim4.AnimationId = 'rbxassetid://481088553'; local crouchW = reanim.Humanoid.Animator:LoadAnimation(anim4)
addfunc(mouse.KeyDown:Connect(function(k)
	if k == 'f' and not fighting and reanim.Humanoid.WalkSpeed == 16 then
		fighting = true
		if fight == 'left' then
			fightL:Play()
			fight = 'right'
		else
			fightR:Play()
			fight = 'left'
		end
		local p = Instance.new('Part', reanim)
		p.Transparency = 1
		p.Size = fag.Character.Torso.Size
		p.CanCollide = false
		local w = Instance.new('Weld', p)
		w.Part0 = reanim.Torso
		w.Part1 = p
		w.C1 = CFrame.new(0, 0, 2)
		local punchCD
		local func
		func = p.Touched:connect(function(h)
			if not punchCD and game.Players:FindFirstChild(h.Parent.Name) and h.Parent ~= fag and workspace[h.Parent.Name].Humanoid.Health > 0 then
				punchCD = true
				game.ReplicatedStorage.meleeEvent:FireServer(game.Players[h.Parent.Name])
				local sound = h.Parent.Head.punchSound:Clone()
				sound.Parent = h.Parent.Head
				sound:Play()
				game.ReplicatedStorage.SoundEvent:FireServer(h.Parent.Head.punchSound, h.Parent.Head)
				func:Disconnect()
			end
		end)
		wait(.5)
		fighting = false
	end
	if k == 'c' and not crouchCD then
		if not crouch then
			crouchI:Play()
			game:GetService("TweenService"):Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,-4,0)}):Play()
			reanim.Humanoid.WalkSpeed = 5
			crouch = true
			crouchCD = true; wait(.5); crouchCD = false
		else 
			for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do
				if v.Animation.Name:match('crouch') then v:Stop() end
			end
			game:GetService("TweenService"):Create(reanim.Humanoid,TweenInfo.new(),{CameraOffset=Vector3.new(0,0,0)}):Play()
			reanim.Humanoid.WalkSpeed = 16
			crouch = false
			crouchCD = true; wait(.5); crouchCD = false
		end
	end
end))

addfunc(uis.InputBegan:Connect(function(k)
	if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then
		reanim.Humanoid.WalkSpeed = 24
	end
end))

addfunc(uis.InputEnded:Connect(function(k)
	if k.KeyCode == Enum.KeyCode.LeftShift and not fighting and not crouch then
		reanim.Humanoid.WalkSpeed = 16
	end
end))

addfunc(runsrv.RenderStepped:Connect(function()
	if crouch and reanim.HumanoidRootPart.Velocity.Magnitude < 2 then
		for _,v in next, reanim.Humanoid:GetPlayingAnimationTracks() do
			if v.Animation.Name == 'crouchW' then v:Stop() end
		end
	end
end))

addfunc(runsrv.RenderStepped:Connect(function()
	reanim.Humanoid:Move(hum.MoveDirection,false)
	if crouch and not crouchW.IsPlaying then
		crouchW:Play()
	end
	for _,v in next, hum:GetPlayingAnimationTracks() do v:Stop() end
end))

cam.CameraSubject = reanim.Humanoid

addfunc(runsrv.RenderStepped:Connect(function()
	if not workspace:FindFirstChild(fag.Name) or not workspace[fag.Name]:FindFirstChild(folderName) then
		for _,v in pairs(funcs) do
			v:Disconnect()
		end
	end
end))
